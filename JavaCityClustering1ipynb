{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOxAAzUm2J1XkJIzl0HViv1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/evanharyo159/the-island-of-java-motorcycle-market-clustering/blob/main/JavaCityClustering1ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_excel('data_used_1622_revisi_bismillah.xlsx')\n",
        "#mask = df['kota'] != \"Kab. Kepulauan Seribu\"\n",
        "#df_filtered = df[mask]\n",
        "#df = df_filtered\n",
        "#df.drop(columns='year', inplace=True)\n",
        "df.drop(columns='Unnamed: 0', inplace=True)\n",
        "#df.drop(columns='Kepadatan Penduduk (Jiwa/Km2)', inplace=True)\n",
        "#df.drop(columns='Jumlah Pekerja (Jiwa)', inplace=True)\n",
        "#df.drop(columns='Laju Pertumbuhan PDRB (Persen)', inplace=True)\n",
        "#df.drop(columns='Jumlah Rumah Tangga', inplace=True)\n",
        "#df.drop(columns='Jumlah Penduduk 15th Bekerja (Jiwa)', inplace=True)\n",
        "\n",
        "\n",
        "df"
      ],
      "metadata": {
        "id": "Ygay2GBSBw3V",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "outputId": "06ed5adc-9995-4008-d694-e438894ad47e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \n",
              "0                                      83.231667                    67.060000  \n",
              "1                                      83.231667                    64.515833  \n",
              "2                                      83.231667                    64.494167  \n",
              "3                                      83.231667                    69.773333  \n",
              "4                                      83.231667                    66.565833  \n",
              "..                                           ...                          ...  \n",
              "114                                    75.026667                    73.144167  \n",
              "115                                    75.026667                    73.194167  \n",
              "116                                    75.026667                    71.383333  \n",
              "117                                    75.026667                    70.165833  \n",
              "118                                    75.026667                    74.074167  \n",
              "\n",
              "[119 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6aa89c2e-47b4-42f9-acf9-4557865935ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6aa89c2e-47b4-42f9-acf9-4557865935ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6aa89c2e-47b4-42f9-acf9-4557865935ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6aa89c2e-47b4-42f9-acf9-4557865935ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a51b6cf4-1002-4985-8c30-032525c8a2ec\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a51b6cf4-1002-4985-8c30-032525c8a2ec')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a51b6cf4-1002-4985-8c30-032525c8a2ec button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 352
        },
        "id": "60oEO1w8jde8",
        "outputId": "e9119ae5-209b-4afe-c6af-1a0a415e8a83"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "count                                  119.000000    1.190000e+02   \n",
              "mean                                    98.391578    5.223999e+13   \n",
              "std                                      6.981040    8.017829e+13   \n",
              "min                                     25.000000    3.099540e+12   \n",
              "25%                                     98.935350    1.447766e+13   \n",
              "50%                                     99.546500    2.342822e+13   \n",
              "75%                                    100.000000    5.047678e+13   \n",
              "max                                    100.000000    4.274374e+14   \n",
              "\n",
              "       Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "count                     119.000000         1.190000e+02   \n",
              "mean                     3267.616492         9.994726e+05   \n",
              "std                      4456.051930         3.194100e+06   \n",
              "min                       278.000000         1.199500e+04   \n",
              "25%                       784.250000         3.911000e+04   \n",
              "50%                      1126.250000         2.061342e+05   \n",
              "75%                      3559.078750         4.111230e+05   \n",
              "max                     19838.550000         1.473874e+07   \n",
              "\n",
              "       Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "count                  119.000000            1.190000e+02   \n",
              "mean                 44668.939076            1.263289e+06   \n",
              "std                  44978.482618            8.838128e+05   \n",
              "min                    756.000000            2.532217e+04   \n",
              "25%                  16601.000000            7.409317e+05   \n",
              "50%                  28351.250000            1.074499e+06   \n",
              "75%                  58372.625000            1.599883e+06   \n",
              "max                 310916.500000            5.839390e+06   \n",
              "\n",
              "       Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "count                 119.000000                          119.000000   \n",
              "mean               392540.005602                           82.443498   \n",
              "std                 83814.852084                           13.779168   \n",
              "min                274686.666667                           40.438238   \n",
              "25%                331084.666667                           77.134879   \n",
              "50%                369123.000000                           87.469963   \n",
              "75%                445223.500000                           92.961971   \n",
              "max                699988.333333                           96.663330   \n",
              "\n",
              "       Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "count                   119.000000                         119.000000   \n",
              "mean                     79.330920                       14833.775910   \n",
              "std                       8.053180                        3917.898228   \n",
              "min                      44.129953                       11593.000000   \n",
              "25%                      75.238285                       11593.000000   \n",
              "50%                      81.541047                       12994.500000   \n",
              "75%                      84.806809                       17332.500000   \n",
              "max                      91.895753                       26093.833333   \n",
              "\n",
              "       Rumah Tangga dengan Akses Internet (Persen)  \\\n",
              "count                                   119.000000   \n",
              "mean                                     77.077255   \n",
              "std                                       3.829040   \n",
              "min                                      74.826667   \n",
              "25%                                      74.826667   \n",
              "50%                                      75.026667   \n",
              "75%                                      77.125000   \n",
              "max                                      88.951667   \n",
              "\n",
              "       Angka Harapan Hidup (Tahun)  \n",
              "count                   119.000000  \n",
              "mean                     72.600070  \n",
              "std                       2.651971  \n",
              "min                      64.494167  \n",
              "25%                      71.278333  \n",
              "50%                      72.712500  \n",
              "75%                      74.246250  \n",
              "max                      77.737500  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2f98624f-a970-4112-b495-bdb159b32e95\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>119.000000</td>\n",
              "      <td>1.190000e+02</td>\n",
              "      <td>119.000000</td>\n",
              "      <td>1.190000e+02</td>\n",
              "      <td>119.000000</td>\n",
              "      <td>1.190000e+02</td>\n",
              "      <td>119.000000</td>\n",
              "      <td>119.000000</td>\n",
              "      <td>119.000000</td>\n",
              "      <td>119.000000</td>\n",
              "      <td>119.000000</td>\n",
              "      <td>119.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>98.391578</td>\n",
              "      <td>5.223999e+13</td>\n",
              "      <td>3267.616492</td>\n",
              "      <td>9.994726e+05</td>\n",
              "      <td>44668.939076</td>\n",
              "      <td>1.263289e+06</td>\n",
              "      <td>392540.005602</td>\n",
              "      <td>82.443498</td>\n",
              "      <td>79.330920</td>\n",
              "      <td>14833.775910</td>\n",
              "      <td>77.077255</td>\n",
              "      <td>72.600070</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.981040</td>\n",
              "      <td>8.017829e+13</td>\n",
              "      <td>4456.051930</td>\n",
              "      <td>3.194100e+06</td>\n",
              "      <td>44978.482618</td>\n",
              "      <td>8.838128e+05</td>\n",
              "      <td>83814.852084</td>\n",
              "      <td>13.779168</td>\n",
              "      <td>8.053180</td>\n",
              "      <td>3917.898228</td>\n",
              "      <td>3.829040</td>\n",
              "      <td>2.651971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>25.000000</td>\n",
              "      <td>3.099540e+12</td>\n",
              "      <td>278.000000</td>\n",
              "      <td>1.199500e+04</td>\n",
              "      <td>756.000000</td>\n",
              "      <td>2.532217e+04</td>\n",
              "      <td>274686.666667</td>\n",
              "      <td>40.438238</td>\n",
              "      <td>44.129953</td>\n",
              "      <td>11593.000000</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>64.494167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>98.935350</td>\n",
              "      <td>1.447766e+13</td>\n",
              "      <td>784.250000</td>\n",
              "      <td>3.911000e+04</td>\n",
              "      <td>16601.000000</td>\n",
              "      <td>7.409317e+05</td>\n",
              "      <td>331084.666667</td>\n",
              "      <td>77.134879</td>\n",
              "      <td>75.238285</td>\n",
              "      <td>11593.000000</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>71.278333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>99.546500</td>\n",
              "      <td>2.342822e+13</td>\n",
              "      <td>1126.250000</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>28351.250000</td>\n",
              "      <td>1.074499e+06</td>\n",
              "      <td>369123.000000</td>\n",
              "      <td>87.469963</td>\n",
              "      <td>81.541047</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.712500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>100.000000</td>\n",
              "      <td>5.047678e+13</td>\n",
              "      <td>3559.078750</td>\n",
              "      <td>4.111230e+05</td>\n",
              "      <td>58372.625000</td>\n",
              "      <td>1.599883e+06</td>\n",
              "      <td>445223.500000</td>\n",
              "      <td>92.961971</td>\n",
              "      <td>84.806809</td>\n",
              "      <td>17332.500000</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.246250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.274374e+14</td>\n",
              "      <td>19838.550000</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>310916.500000</td>\n",
              "      <td>5.839390e+06</td>\n",
              "      <td>699988.333333</td>\n",
              "      <td>96.663330</td>\n",
              "      <td>91.895753</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>77.737500</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f98624f-a970-4112-b495-bdb159b32e95')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2f98624f-a970-4112-b495-bdb159b32e95 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2f98624f-a970-4112-b495-bdb159b32e95');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6b5f5349-f3f9-48e4-8270-1e7d79256f1b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b5f5349-f3f9-48e4-8270-1e7d79256f1b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6b5f5349-f3f9-48e4-8270-1e7d79256f1b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "6kAVBVOKC6Hj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## K-Means"
      ],
      "metadata": {
        "id": "3w89Ggtx0flB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_excel('data_used_1622_revisi_bismillah.xlsx')\n",
        "#mask = df['kota'] != \"Kab. Kepulauan Seribu\"\n",
        "#df_filtered = df[mask]\n",
        "#df = df_filtered\n",
        "#df.drop(columns='year', inplace=True)\n",
        "df.drop(columns='Unnamed: 0', inplace=True)\n",
        "#df.drop(columns='Kepadatan Penduduk (Jiwa/Km2)', inplace=True)\n",
        "#df.drop(columns='Jumlah Pekerja (Jiwa)', inplace=True)\n",
        "#df.drop(columns='Laju Pertumbuhan PDRB (Persen)', inplace=True)\n",
        "#df.drop(columns='Jumlah Rumah Tangga', inplace=True)\n",
        "#df.drop(columns='Jumlah Penduduk 15th Bekerja (Jiwa)', inplace=True)\n",
        "\n",
        "\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "id": "-9ytVPHimOFu",
        "outputId": "9b58339d-1183-4b53-e865-3b7cf3778ec2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \n",
              "0                                      83.231667                    67.060000  \n",
              "1                                      83.231667                    64.515833  \n",
              "2                                      83.231667                    64.494167  \n",
              "3                                      83.231667                    69.773333  \n",
              "4                                      83.231667                    66.565833  \n",
              "..                                           ...                          ...  \n",
              "114                                    75.026667                    73.144167  \n",
              "115                                    75.026667                    73.194167  \n",
              "116                                    75.026667                    71.383333  \n",
              "117                                    75.026667                    70.165833  \n",
              "118                                    75.026667                    74.074167  \n",
              "\n",
              "[119 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-96846fea-cc9c-4b7b-9531-da735c984d51\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96846fea-cc9c-4b7b-9531-da735c984d51')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-96846fea-cc9c-4b7b-9531-da735c984d51 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-96846fea-cc9c-4b7b-9531-da735c984d51');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-32cf6d36-8866-4b47-ba1e-d8a866c25b11\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32cf6d36-8866-4b47-ba1e-d8a866c25b11')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-32cf6d36-8866-4b47-ba1e-d8a866c25b11 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h8cBygefANJE",
        "outputId": "375fba69-d22e-47fd-f191-225bae265aa4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: umap-learn in /usr/local/lib/python3.10/dist-packages (0.5.4)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (1.23.5)\n",
            "Requirement already satisfied: scipy>=1.3.1 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (1.11.3)\n",
            "Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (1.2.2)\n",
            "Requirement already satisfied: numba>=0.51.2 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (0.56.4)\n",
            "Requirement already satisfied: pynndescent>=0.5 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (0.5.10)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from umap-learn) (4.66.1)\n",
            "Requirement already satisfied: tbb>=2019.0 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (2021.10.0)\n",
            "Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.51.2->umap-learn) (0.39.1)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba>=0.51.2->umap-learn) (67.7.2)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.10/dist-packages (from pynndescent>=0.5->umap-learn) (1.3.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22->umap-learn) (3.2.0)\n",
            "--2023-10-10 12:00:15--  https://raw.githubusercontent.com/taudata-indonesia/eLearning/master/tau_unsup.py\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 17781 (17K) [text/plain]\n",
            "Saving to: ‘tau_unsup.py.1’\n",
            "\n",
            "tau_unsup.py.1      100%[===================>]  17.36K  --.-KB/s    in 0.001s  \n",
            "\n",
            "2023-10-10 12:00:15 (31.3 MB/s) - ‘tau_unsup.py.1’ saved [17781/17781]\n",
            "\n"
          ]
        }
      ],
      "source": [
        "# Importing Modules untuk Notebook ini\n",
        "\n",
        "import warnings; warnings.simplefilter('ignore')\n",
        "try:\n",
        "    import google.colab; IN_COLAB = True\n",
        "    !pip install umap-learn\n",
        "    !wget https://raw.githubusercontent.com/taudata-indonesia/eLearning/master/tau_unsup.py\n",
        "except:\n",
        "    IN_COLAB = False\n",
        "    print(\"Running the code locally, please make sure all the python module versions agree with colab environment and all data/assets downloaded\")\n",
        "# Importing Modules untuk Notebook ini\n",
        "\n",
        "import warnings; warnings.simplefilter('ignore')\n",
        "import umap, numpy as np, matplotlib.pyplot as plt, pandas as pd, seaborn as sns\n",
        "from sklearn import cluster\n",
        "from sklearn.metrics import silhouette_score as siluet\n",
        "from sklearn.metrics.cluster import homogeneity_score as purity\n",
        "from sklearn.metrics import normalized_mutual_info_score as NMI\n",
        "import tau_unsup as tau\n",
        "import umap.umap_ as umap\n",
        "\n",
        "sns.set(style=\"ticks\", color_codes=True)\n",
        "random_state = 99 #jangan lupa random state\n",
        "sns.set(rc={'figure.figsize':(14,8)})\n",
        "\n",
        "#pip install umap\n",
        "\n",
        "from sklearn.cluster import KMeans"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:,3:]\n",
        "distorsions, k1, kN = [], 2, 10\n",
        "for k in range(k1, kN):\n",
        "    kmeans = cluster.KMeans(n_clusters=k).fit(X)\n",
        "    distorsions.append(kmeans.inertia_)\n",
        "\n",
        "plt.plot(range(k1, kN), distorsions, linewidth=10); plt.grid(True)\n",
        "plt.rcParams.update({'font.size': 18})\n",
        "plt.title('Elbow curve', fontsize=24)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 732
        },
        "outputId": "fb3f1a2f-90cf-4443-f29a-5d20d3539ff9",
        "id": "hP3X-kML0flC"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Elbow curve')"
            ]
          },
          "metadata": {},
          "execution_count": 5
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import silhouette_score\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have loaded or generated your data as X\n",
        "X = df.iloc[:, 3:]\n",
        "\n",
        "# Define a range of cluster numbers to consider\n",
        "k1, kN = 2, 10\n",
        "range_n_clusters = range(k1, kN)\n",
        "\n",
        "silhouette_scores = []\n",
        "\n",
        "for n_clusters in range_n_clusters:\n",
        "    kmeans = KMeans(n_clusters=n_clusters)\n",
        "    cluster_labels = kmeans.fit_predict(X)\n",
        "\n",
        "    silhouette_avg = silhouette_score(X, cluster_labels)\n",
        "    silhouette_scores.append(silhouette_avg)\n",
        "\n",
        "# Plot the Silhouette Score for different cluster numbers\n",
        "plt.plot(range_n_clusters, silhouette_scores, 'bo-')\n",
        "plt.xlabel('Number of Clusters')\n",
        "plt.ylabel('Silhouette Score')\n",
        "plt.title('Silhouette Score for Different Cluster Numbers')\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "# Find the best number of clusters that maximizes the Silhouette Score\n",
        "best_num_clusters = range_n_clusters[np.argmax(silhouette_scores)]\n",
        "print(f\"The best number of clusters is: {best_num_clusters}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 744
        },
        "id": "1IYDcvbo1TXQ",
        "outputId": "687377ab-768c-4b88-c3ee-a35c66bd0490"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The best number of clusters is: 2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "k = 3\n",
        "km = cluster.KMeans(n_clusters=k, init='random', random_state = random_state)\n",
        "km.fit(X)\n",
        "# Hasil clusteringnya\n",
        "C_km = km.predict(X)\n",
        "p= sns.countplot(x=C_km)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 681
        },
        "outputId": "b00bc419-8a90-44dd-f57e-1b124fc40303",
        "id": "u3dSFoCa0flC"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "k = 3\n",
        "kmPP1 = cluster.KMeans(n_clusters=k, init='k-means++',random_state = random_state)\n",
        "kmPP1.fit(X)\n",
        "C_kmpp1 = kmPP1.predict(X)\n",
        "\n",
        "sns.countplot(x=C_kmpp1)\n",
        "C_kmpp1[:10]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 698
        },
        "outputId": "81b0ef3c-9d2e-471a-c1db-74539080a76a",
        "id": "dcXkAPwh0flC"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 2, 2, 0, 0, 2, 0, 0], dtype=int32)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "k = 4\n",
        "kmPP2 = cluster.KMeans(n_clusters=k, init='k-means++',random_state = random_state)\n",
        "kmPP2.fit(X)\n",
        "C_kmpp2 = kmPP2.predict(X)\n",
        "\n",
        "sns.countplot(x=C_kmpp2)\n",
        "C_kmpp2[:10]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 698
        },
        "outputId": "fb35eb78-4719-4597-9dfa-7dda4ac3b121",
        "id": "cnRpd2Zw0flC"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 3, 3, 3, 0, 3, 3, 0, 0], dtype=int32)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "k = 5\n",
        "kmPP3 = cluster.KMeans(n_clusters=k, init='k-means++', random_state = random_state)\n",
        "kmPP3.fit(X)\n",
        "C_kmpp3 = kmPP3.predict(X)\n",
        "\n",
        "sns.countplot(x=C_kmpp3)\n",
        "C_kmpp3[:10]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 698
        },
        "outputId": "0aaece1f-2efe-4ca2-9265-31afd9d1520f",
        "id": "Z6WHMMOE0flC"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 3, 3, 3, 0, 3, 3, 0, 0], dtype=int32)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Hasil_Clustering = [C_km, C_kmpp1, C_kmpp2, C_kmpp3]\n",
        "for res in Hasil_Clustering:\n",
        "    print(siluet(X,res), end=', ')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "436d24e5-e232-4f70-fee6-5494a096b11d",
        "id": "olr84uos0flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.7404608868355316, 0.7404608868355316, 0.7020330078048654, 0.7090265734149218, "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "km.inertia_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "47e1f067-a75d-4edd-fe98-55ce4ec0381f",
        "id": "WTUk2O3K0flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6.401907352121772e+28"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kmPP1.inertia_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a517b91a-2f72-4ef6-afaf-f8852ef2c721",
        "id": "QzjlvDMn0flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6.401907352121772e+28"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kmPP2.inertia_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "592718a8-7b87-4d26-e309-008153e64464",
        "id": "7lKuIlGx0flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3.862627356984866e+28"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kmPP3.inertia_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "853da8f8-9620-4cf7-a926-89290e60fd03",
        "id": "SRscEZSx0flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2.0424781846135934e+28"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 3cluster"
      ],
      "metadata": {
        "id": "_0Kdb-wPjkII"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['k-means++ 3'] = C_kmpp1\n",
        "#g = sns.pairplot(g1.iloc[:,2:], \\\n",
        "                 #hue=\"k-means++ 5\", diag_kind=\"hist\", palette=\"tab10\")\n",
        "\n"
      ],
      "metadata": {
        "id": "nps_b23i0flD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "pca = PCA(n_components=2)\n",
        "X_pca = pca.fit_transform(X)\n",
        "\n",
        "# Create a DataFrame for the PCA results\n",
        "pca_df = pd.DataFrame(data=X_pca, columns=['PCA1', 'PCA2'])\n",
        " # Assign cluster labels\n",
        "pca_df['Cluster'] = C_kmpp1\n",
        "# Create a scatter plot with colors indicating cluster assignments\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.scatterplot(x='PCA1', y='PCA2', hue='Cluster', data=pca_df, palette='Set1', s=100)\n",
        "plt.title('PCA Visualization of K-Means Clusters')\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.legend(title='Cluster')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "MN3dP0S914jk",
        "outputId": "ea833b49-9948-4abe-ce12-ca9893942a32"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "id": "1vu8XTWbXZ4m",
        "outputId": "047b39a0-a5f0-4667-98b8-a38bd30ce4e9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "..                                           ...                          ...   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "     k-means++ 3  \n",
              "0              0  \n",
              "1              0  \n",
              "2              0  \n",
              "3              2  \n",
              "4              2  \n",
              "..           ...  \n",
              "114            0  \n",
              "115            0  \n",
              "116            0  \n",
              "117            0  \n",
              "118            1  \n",
              "\n",
              "[119 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1a3afacc-5056-4ae7-a658-b4edf825da74\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a3afacc-5056-4ae7-a658-b4edf825da74')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1a3afacc-5056-4ae7-a658-b4edf825da74 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1a3afacc-5056-4ae7-a658-b4edf825da74');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-76a30367-7c9c-4381-84e1-c3abeca09565\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76a30367-7c9c-4381-84e1-c3abeca09565')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-76a30367-7c9c-4381-84e1-c3abeca09565 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['k-means++ 3'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1TQrty_id-I_",
        "outputId": "d8ad8aa1-8e6d-485b-bb70-a20eab9280cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    95\n",
              "2    17\n",
              "1     7\n",
              "Name: k-means++ 3, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0 = df.loc[df['k-means++ 3']==0]\n",
        "all1 = df.loc[df['k-means++ 3']==1]\n",
        "all2 = df.loc[df['k-means++ 3']==2]\n"
      ],
      "metadata": {
        "id": "uS_Bp4EZ0flD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 684
        },
        "outputId": "942fef09-7547-4773-c9a8-ffac51185edf",
        "id": "Aw7VNfbl0flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi                    kota  \\\n",
              "0        Banten              Kab. Lebak   \n",
              "1        Banten         Kab. Pandeglang   \n",
              "2        Banten             Kab. Serang   \n",
              "5        Banten             Kota Serang   \n",
              "6        Banten  Kota Tangerang Selatan   \n",
              "..          ...                     ...   \n",
              "113  Jawa Timur             Kota Madiun   \n",
              "114  Jawa Timur             Kota Malang   \n",
              "115  Jawa Timur          Kota Mojokerto   \n",
              "116  Jawa Timur           Kota Pasuruan   \n",
              "117  Jawa Timur        Kota Probolinggo   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "0                                       94.2995    1.979186e+13   \n",
              "1                                       92.0354    1.880812e+13   \n",
              "2                                       98.7730    5.166992e+13   \n",
              "5                                      100.0000    2.154588e+13   \n",
              "6                                       99.3827    5.644622e+13   \n",
              "..                                          ...             ...   \n",
              "113                                    100.0000    1.002101e+13   \n",
              "114                                    100.0000    4.957143e+13   \n",
              "115                                    100.0000    4.694168e+12   \n",
              "116                                     99.0196    5.611072e+12   \n",
              "117                                    100.0000    7.842530e+12   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0                           376.75        245416.500000   \n",
              "1                           439.25        206134.250000   \n",
              "2                           863.25        373737.250000   \n",
              "5                          2519.50        196289.250000   \n",
              "6                         11350.75        677773.750000   \n",
              "..                             ...                  ...   \n",
              "113                        5201.25         17280.666667   \n",
              "114                        5944.50         44834.333333   \n",
              "115                        7752.00         24618.333333   \n",
              "116                        5620.00         34564.666667   \n",
              "117                        4131.25         26674.000000   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "5                      27425.75            6.864417e+05   \n",
              "6                      54459.75            1.540204e+06   \n",
              "..                          ...                     ...   \n",
              "113                     5829.75            1.829170e+05   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "5                358571.333333                           85.084066   \n",
              "6                569896.000000                           77.073268   \n",
              "..                         ...                                 ...   \n",
              "113              453130.166667                           63.273951   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "5                      85.493165                            21699.0   \n",
              "6                      88.132278                            21699.0   \n",
              "..                           ...                                ...   \n",
              "113                    85.444512                            12994.5   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "5                                      83.231667                    67.822500   \n",
              "6                                      83.231667                    71.526667   \n",
              "..                                           ...                          ...   \n",
              "113                                    75.026667                    72.712500   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "\n",
              "     k-means++ 3  \n",
              "0              0  \n",
              "1              0  \n",
              "2              0  \n",
              "5              0  \n",
              "6              0  \n",
              "..           ...  \n",
              "113            0  \n",
              "114            0  \n",
              "115            0  \n",
              "116            0  \n",
              "117            0  \n",
              "\n",
              "[95 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-740f2e83-1b60-4071-905f-b1468626d102\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>245416.500000</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>206134.250000</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>373737.250000</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>2.154588e+13</td>\n",
              "      <td>2519.50</td>\n",
              "      <td>196289.250000</td>\n",
              "      <td>27425.75</td>\n",
              "      <td>6.864417e+05</td>\n",
              "      <td>358571.333333</td>\n",
              "      <td>85.084066</td>\n",
              "      <td>85.493165</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.822500</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tangerang Selatan</td>\n",
              "      <td>99.3827</td>\n",
              "      <td>5.644622e+13</td>\n",
              "      <td>11350.75</td>\n",
              "      <td>677773.750000</td>\n",
              "      <td>54459.75</td>\n",
              "      <td>1.540204e+06</td>\n",
              "      <td>569896.000000</td>\n",
              "      <td>77.073268</td>\n",
              "      <td>88.132278</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>71.526667</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>1.002101e+13</td>\n",
              "      <td>5201.25</td>\n",
              "      <td>17280.666667</td>\n",
              "      <td>5829.75</td>\n",
              "      <td>1.829170e+05</td>\n",
              "      <td>453130.166667</td>\n",
              "      <td>63.273951</td>\n",
              "      <td>85.444512</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.712500</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>44834.333333</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>24618.333333</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>34564.666667</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>26674.000000</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>95 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-740f2e83-1b60-4071-905f-b1468626d102')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-740f2e83-1b60-4071-905f-b1468626d102 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-740f2e83-1b60-4071-905f-b1468626d102');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6213d23c-f497-4002-9e7d-a6665dfed24d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6213d23c-f497-4002-9e7d-a6665dfed24d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6213d23c-f497-4002-9e7d-a6665dfed24d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k13mOlGAgNAG",
        "outputId": "9474dba7-6d0a-44c6-c60f-7db6189a73a5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.817961e+01\n",
              "PDRB ADHK (Rp)                                 2.232758e+13\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  2.345918e+03\n",
              "Jumlah Motor (unit)                            3.577611e+05\n",
              "Jumlah Pengangguran (Jiwa)                     3.170657e+04\n",
              "Jumlah Penduduk (Jiwa)                         1.015344e+06\n",
              "Garis Kemiskinan (Persen)                      3.749444e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             8.531855e+01\n",
              "Rasio RT memiliki Spd Motor                    7.843288e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.410440e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.647709e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.248224e+01\n",
              "k-means++ 3                                    0.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0[['provinsi','kota']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jqn0qrWhnMSQ",
        "outputId": "0be57499-8a26-4cff-ef1f-e64c167d942a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi                    kota\n",
              "0        Banten              Kab. Lebak\n",
              "1        Banten         Kab. Pandeglang\n",
              "2        Banten             Kab. Serang\n",
              "5        Banten             Kota Serang\n",
              "6        Banten  Kota Tangerang Selatan\n",
              "..          ...                     ...\n",
              "113  Jawa Timur             Kota Madiun\n",
              "114  Jawa Timur             Kota Malang\n",
              "115  Jawa Timur          Kota Mojokerto\n",
              "116  Jawa Timur           Kota Pasuruan\n",
              "117  Jawa Timur        Kota Probolinggo\n",
              "\n",
              "[95 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f0769def-c62d-4210-8880-9a7b8822365e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tangerang Selatan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>95 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0769def-c62d-4210-8880-9a7b8822365e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f0769def-c62d-4210-8880-9a7b8822365e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f0769def-c62d-4210-8880-9a7b8822365e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4b1e4b43-abbf-4800-aa94-1375087e45f9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b1e4b43-abbf-4800-aa94-1375087e45f9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4b1e4b43-abbf-4800-aa94-1375087e45f9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Aoh93bYfoAKT",
        "outputId": "2766e2c2-8881-44f2-ebf5-511c87e9c738"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Lebak', 'Kab. Pandeglang', 'Kab. Serang', 'Kota Serang',\n",
              "       'Kota Tangerang Selatan', 'Kab. Bantul', 'Kab. Gunung Kidul',\n",
              "       'Kab. Kulonprogo', 'Kab. Sleman', 'Kota Yogyakarta',\n",
              "       'Kab. Kepulauan Seribu', 'Kab. Bandung Barat', 'Kab. Ciamis',\n",
              "       'Kab. Cianjur', 'Kab. Cirebon', 'Kab. Garut', 'Kab. Indramayu',\n",
              "       'Kab. Kuningan', 'Kab. Majalengka', 'Kab. Pangandaran',\n",
              "       'Kab. Purwakarta', 'Kab. Subang', 'Kab. Sukabumi', 'Kab. Sumedang',\n",
              "       'Kab. Tasikmalaya', 'Kota Banjar', 'Kota Bogor', 'Kota Cimahi',\n",
              "       'Kota Cirebon', 'Kota Depok', 'Kota Sukabumi', 'Kota Tasikmalaya',\n",
              "       'Kab. Banjarnegara', 'Kab. Banyumas', 'Kab. Batang', 'Kab. Blora',\n",
              "       'Kab. Boyolali', 'Kab. Brebes', 'Kab. Demak', 'Kab. Grobogan',\n",
              "       'Kab. Jepara', 'Kab. Karanganyar', 'Kab. Kebumen', 'Kab. Kendal',\n",
              "       'Kab. Klaten', 'Kab. Magelang', 'Kab. Pati', 'Kab. Pekalongan',\n",
              "       'Kab. Pemalang', 'Kab. Purbalingga', 'Kab. Purworejo',\n",
              "       'Kab. Rembang', 'Kab. Semarang', 'Kab. Sragen', 'Kab. Sukoharjo',\n",
              "       'Kab. Tegal', 'Kab. Temanggung', 'Kab. Wonogiri', 'Kab. Wonosobo',\n",
              "       'Kota Magelang', 'Kota Pekalongan', 'Kota Salatiga',\n",
              "       'Kota Surakarta', 'Kota Tegal', 'Kab. Bangkalan',\n",
              "       'Kab. Banyuwangi', 'Kab. Blitar', 'Kab. Bondowoso', 'Kab. Jember',\n",
              "       'Kab. Jombang', 'Kab. Kediri', 'Kab. Lamongan', 'Kab. Lumajang',\n",
              "       'Kab. Madiun', 'Kab. Magetan', 'Kab. Mojokerto', 'Kab. Nganjuk',\n",
              "       'Kab. Ngawi', 'Kab. Pacitan', 'Kab. Pamekasan', 'Kab. Ponorogo',\n",
              "       'Kab. Probolinggo', 'Kab. Sampang', 'Kab. Situbondo',\n",
              "       'Kab. Sumenep', 'Kab. Trenggalek', 'Kab. Tuban',\n",
              "       'Kab. Tulungagung', 'Kota Batu', 'Kota Blitar', 'Kota Madiun',\n",
              "       'Kota Malang', 'Kota Mojokerto', 'Kota Pasuruan',\n",
              "       'Kota Probolinggo'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "outputId": "de474619-ca92-49c9-e125-cb9bc418a91b",
        "id": "4KOhSLjc0flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi                  kota  \\\n",
              "14   DKI Jakarta    Kota Jakarta Barat   \n",
              "15   DKI Jakarta    Kota Jakarta Pusat   \n",
              "16   DKI Jakarta  Kota Jakarta Selatan   \n",
              "17   DKI Jakarta    Kota Jakarta Timur   \n",
              "18   DKI Jakarta    Kota Jakarta Utara   \n",
              "21    Jawa Barat           Kab. Bekasi   \n",
              "118   Jawa Timur         Kota Surabaya   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "14                                   100.000000    3.013646e+14   \n",
              "15                                   100.000000    4.274374e+14   \n",
              "16                                   100.000000    3.974829e+14   \n",
              "17                                    98.974367    2.952711e+14   \n",
              "18                                   100.000000    3.136514e+14   \n",
              "21                                    99.287000    2.387286e+14   \n",
              "118                                   98.701300    3.842024e+14   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "14                      19838.5500         1.473874e+07   \n",
              "15                      18785.5575         1.473874e+07   \n",
              "16                      15489.6675         1.473874e+07   \n",
              "17                      15557.6800         1.473874e+07   \n",
              "18                      12345.7525         1.473874e+07   \n",
              "21                       2911.7500         1.261729e+06   \n",
              "118                      8215.5000         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "14                    103508.50            2.507990e+06   \n",
              "15                     38675.00            9.692097e+05   \n",
              "16                     89288.50            2.234179e+06   \n",
              "17                    106630.50            2.951502e+06   \n",
              "18                     83284.50            1.778313e+06   \n",
              "21                    181931.25            3.633105e+06   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "14               500273.166667                           49.711463   \n",
              "15               599169.666667                           42.309587   \n",
              "16               699988.333333                           46.733298   \n",
              "17               517909.000000                           50.373830   \n",
              "18               528524.833333                           45.078933   \n",
              "21               477325.166667                           77.196490   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "14                     81.397537                       26093.833333   \n",
              "15                     70.390338                       26093.833333   \n",
              "16                     78.396880                       26093.833333   \n",
              "17                     81.541047                       26093.833333   \n",
              "18                     76.575130                       26093.833333   \n",
              "21                     84.335558                       17332.500000   \n",
              "118                    85.464276                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "14                                     88.951667                    73.545833   \n",
              "15                                     88.951667                    74.049167   \n",
              "16                                     88.951667                    74.119167   \n",
              "17                                     88.951667                    74.404167   \n",
              "18                                     88.951667                    73.191667   \n",
              "21                                     77.125000                    73.601667   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "     k-means++ 3  \n",
              "14             1  \n",
              "15             1  \n",
              "16             1  \n",
              "17             1  \n",
              "18             1  \n",
              "21             1  \n",
              "118            1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b0c61e4f-93d5-4276-b1df-bb42632344fd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Barat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.013646e+14</td>\n",
              "      <td>19838.5500</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>103508.50</td>\n",
              "      <td>2.507990e+06</td>\n",
              "      <td>500273.166667</td>\n",
              "      <td>49.711463</td>\n",
              "      <td>81.397537</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.545833</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Pusat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.274374e+14</td>\n",
              "      <td>18785.5575</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>38675.00</td>\n",
              "      <td>9.692097e+05</td>\n",
              "      <td>599169.666667</td>\n",
              "      <td>42.309587</td>\n",
              "      <td>70.390338</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.049167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Selatan</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.974829e+14</td>\n",
              "      <td>15489.6675</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>89288.50</td>\n",
              "      <td>2.234179e+06</td>\n",
              "      <td>699988.333333</td>\n",
              "      <td>46.733298</td>\n",
              "      <td>78.396880</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.119167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Timur</td>\n",
              "      <td>98.974367</td>\n",
              "      <td>2.952711e+14</td>\n",
              "      <td>15557.6800</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>106630.50</td>\n",
              "      <td>2.951502e+06</td>\n",
              "      <td>517909.000000</td>\n",
              "      <td>50.373830</td>\n",
              "      <td>81.541047</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.404167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Utara</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.136514e+14</td>\n",
              "      <td>12345.7525</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>83284.50</td>\n",
              "      <td>1.778313e+06</td>\n",
              "      <td>528524.833333</td>\n",
              "      <td>45.078933</td>\n",
              "      <td>76.575130</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.191667</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bekasi</td>\n",
              "      <td>99.287000</td>\n",
              "      <td>2.387286e+14</td>\n",
              "      <td>2911.7500</td>\n",
              "      <td>1.261729e+06</td>\n",
              "      <td>181931.25</td>\n",
              "      <td>3.633105e+06</td>\n",
              "      <td>477325.166667</td>\n",
              "      <td>77.196490</td>\n",
              "      <td>84.335558</td>\n",
              "      <td>17332.500000</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.601667</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.701300</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.5000</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0c61e4f-93d5-4276-b1df-bb42632344fd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b0c61e4f-93d5-4276-b1df-bb42632344fd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b0c61e4f-93d5-4276-b1df-bb42632344fd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5257534c-4b13-4a4a-a995-523501f1cd7a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5257534c-4b13-4a4a-a995-523501f1cd7a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5257534c-4b13-4a4a-a995-523501f1cd7a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "brQpigJCgQ2T",
        "outputId": "19362409-3d77-44a0-e06e-aa3b51a74bca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.956610e+01\n",
              "PDRB ADHK (Rp)                                 3.368769e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.330635e+04\n",
              "Jumlah Motor (unit)                            1.074366e+07\n",
              "Jumlah Pengangguran (Jiwa)                     1.037469e+05\n",
              "Jumlah Penduduk (Jiwa)                         2.421887e+06\n",
              "Garis Kemiskinan (Persen)                      5.512630e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             5.272728e+01\n",
              "Rasio RT memiliki Spd Motor                    7.972868e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.297088e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.527286e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.385512e+01\n",
              "k-means++ 3                                    1.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a93DNZ2ovkeJ",
        "outputId": "24b7788a-e7c1-4812-ecb9-b48c80ffdd74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Barat', 'Kota Jakarta Pusat', 'Kota Jakarta Selatan',\n",
              "       'Kota Jakarta Timur', 'Kota Jakarta Utara', 'Kab. Bekasi',\n",
              "       'Kota Surabaya'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 964
        },
        "outputId": "3c47f957-e927-4d67-9191-9778455bb211",
        "id": "ddgXwqS20flD"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi             kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "3         Banten  Kab. Tanggerang                                   99.270100   \n",
              "4         Banten     Kota Cilegon                                  100.000000   \n",
              "7         Banten  Kota Tanggerang                                   99.358967   \n",
              "19    Jawa Barat     Kab. Bandung                                   99.404767   \n",
              "22    Jawa Barat       Kab. Bogor                                   99.693500   \n",
              "28    Jawa Barat    Kab. Karawang                                   99.352767   \n",
              "37    Jawa Barat     Kota Bandung                                   99.779233   \n",
              "39    Jawa Barat      Kota Bekasi                                  100.000000   \n",
              "52   Jawa Tengah     Kab. Cilacap                                   96.478867   \n",
              "60   Jawa Tengah       Kab. Kudus                                  100.000000   \n",
              "78   Jawa Tengah    Kota Semarang                                   99.435033   \n",
              "84    Jawa Timur  Kab. Bojonegoro                                   94.806200   \n",
              "86    Jawa Timur      Kab. Gresik                                   99.344567   \n",
              "94    Jawa Timur      Kab. Malang                                   99.829067   \n",
              "100   Jawa Timur    Kab. Pasuruan                                   99.543367   \n",
              "104   Jawa Timur    Kab. Sidoarjo                                   98.275867   \n",
              "112   Jawa Timur      Kota Kediri                                  100.000000   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "3      9.159683e+13                      3596.2500         1.222381e+06   \n",
              "4      7.079368e+13                      2439.2500         2.067328e+05   \n",
              "7      1.038955e+14                     14046.7500         9.956895e+05   \n",
              "19     7.783522e+13                      2085.2500         9.577970e+05   \n",
              "22     1.483495e+14                      2131.2500         1.404250e+06   \n",
              "28     1.559002e+14                      1407.7500         7.559610e+05   \n",
              "37     1.850610e+14                     14910.2500         1.256057e+06   \n",
              "39     6.561680e+13                     14015.0000         1.250955e+06   \n",
              "52     9.474960e+13                       803.3700         3.605370e+05   \n",
              "60     7.005176e+13                      2014.4075         2.478633e+04   \n",
              "78     1.321015e+14                      4741.1800         8.773980e+05   \n",
              "84     6.526294e+13                       566.2500         4.108000e+04   \n",
              "86     9.551984e+13                      1084.5000         6.136700e+04   \n",
              "94     6.466987e+13                       731.7500         9.429267e+04   \n",
              "100    9.977910e+13                      1092.7500         5.809033e+04   \n",
              "104    1.320949e+14                      2680.7500         1.408130e+05   \n",
              "112    8.402232e+13                      4493.0000         3.614233e+04   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "7                      89333.00            2.055251e+06   \n",
              "19                    120278.00            3.715660e+06   \n",
              "22                    310916.50            5.839390e+06   \n",
              "28                    121015.50            2.334536e+06   \n",
              "37                    127074.75            2.502052e+06   \n",
              "39                    146532.25            2.931669e+06   \n",
              "52                     71381.25            1.795050e+06   \n",
              "60                     20609.00            8.545575e+05   \n",
              "78                     72148.50            1.732847e+06   \n",
              "84                     31283.50            1.265024e+06   \n",
              "86                     47261.00            1.299902e+06   \n",
              "94                     64255.25            2.609669e+06   \n",
              "100                    51523.25            1.610123e+06   \n",
              "104                    92098.00            2.162529e+06   \n",
              "112                     7715.50            2.856215e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "7                572316.000000                           60.592195   \n",
              "19               339063.333333                           77.885703   \n",
              "22               368321.000000                           81.201374   \n",
              "28               438255.500000                           84.446690   \n",
              "37               460053.000000                           53.059216   \n",
              "39               602937.666667                           62.038584   \n",
              "52               328724.333333                           93.803447   \n",
              "60               401730.166667                           91.997631   \n",
              "78               458919.666667                           68.826660   \n",
              "84               337696.666667                           96.265710   \n",
              "86               451782.166667                           87.036100   \n",
              "94               318125.000000                           78.998459   \n",
              "100              335358.500000                           86.081302   \n",
              "104              449743.666667                           81.079978   \n",
              "112              457813.666667                           71.677772   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "7                      87.961656                            21699.0   \n",
              "19                     73.109074                            17332.5   \n",
              "22                     73.244944                            17332.5   \n",
              "28                     77.940043                            17332.5   \n",
              "37                     74.964031                            17332.5   \n",
              "39                     88.254391                            17332.5   \n",
              "52                     81.341424                            11593.0   \n",
              "60                     90.874716                            11593.0   \n",
              "78                     87.596349                            11593.0   \n",
              "84                     82.944792                            12994.5   \n",
              "86                     91.277329                            12994.5   \n",
              "94                     83.857915                            12994.5   \n",
              "100                    81.704555                            12994.5   \n",
              "104                    91.895753                            12994.5   \n",
              "112                    88.131285                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "7                                      83.231667                    72.380833   \n",
              "19                                     77.125000                    73.476667   \n",
              "22                                     77.125000                    71.097500   \n",
              "28                                     77.125000                    72.056667   \n",
              "37                                     77.125000                    74.213333   \n",
              "39                                     77.125000                    74.965000   \n",
              "52                                     74.826667                    73.612500   \n",
              "60                                     74.826667                    76.655000   \n",
              "78                                     74.826667                    77.448333   \n",
              "84                                     75.026667                    71.392500   \n",
              "86                                     75.026667                    72.564167   \n",
              "94                                     75.026667                    72.429167   \n",
              "100                                    75.026667                    70.126667   \n",
              "104                                    75.026667                    73.934167   \n",
              "112                                    75.026667                    73.918333   \n",
              "\n",
              "     k-means++ 3  \n",
              "3              2  \n",
              "4              2  \n",
              "7              2  \n",
              "19             2  \n",
              "22             2  \n",
              "28             2  \n",
              "37             2  \n",
              "39             2  \n",
              "52             2  \n",
              "60             2  \n",
              "78             2  \n",
              "84             2  \n",
              "86             2  \n",
              "94             2  \n",
              "100            2  \n",
              "104            2  \n",
              "112            2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-67f79417-6b2d-42c2-8b65-a7ff442392ab\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.270100</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.2500</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.2500</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tanggerang</td>\n",
              "      <td>99.358967</td>\n",
              "      <td>1.038955e+14</td>\n",
              "      <td>14046.7500</td>\n",
              "      <td>9.956895e+05</td>\n",
              "      <td>89333.00</td>\n",
              "      <td>2.055251e+06</td>\n",
              "      <td>572316.000000</td>\n",
              "      <td>60.592195</td>\n",
              "      <td>87.961656</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>72.380833</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bandung</td>\n",
              "      <td>99.404767</td>\n",
              "      <td>7.783522e+13</td>\n",
              "      <td>2085.2500</td>\n",
              "      <td>9.577970e+05</td>\n",
              "      <td>120278.00</td>\n",
              "      <td>3.715660e+06</td>\n",
              "      <td>339063.333333</td>\n",
              "      <td>77.885703</td>\n",
              "      <td>73.109074</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.476667</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bogor</td>\n",
              "      <td>99.693500</td>\n",
              "      <td>1.483495e+14</td>\n",
              "      <td>2131.2500</td>\n",
              "      <td>1.404250e+06</td>\n",
              "      <td>310916.50</td>\n",
              "      <td>5.839390e+06</td>\n",
              "      <td>368321.000000</td>\n",
              "      <td>81.201374</td>\n",
              "      <td>73.244944</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.097500</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Karawang</td>\n",
              "      <td>99.352767</td>\n",
              "      <td>1.559002e+14</td>\n",
              "      <td>1407.7500</td>\n",
              "      <td>7.559610e+05</td>\n",
              "      <td>121015.50</td>\n",
              "      <td>2.334536e+06</td>\n",
              "      <td>438255.500000</td>\n",
              "      <td>84.446690</td>\n",
              "      <td>77.940043</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>72.056667</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bandung</td>\n",
              "      <td>99.779233</td>\n",
              "      <td>1.850610e+14</td>\n",
              "      <td>14910.2500</td>\n",
              "      <td>1.256057e+06</td>\n",
              "      <td>127074.75</td>\n",
              "      <td>2.502052e+06</td>\n",
              "      <td>460053.000000</td>\n",
              "      <td>53.059216</td>\n",
              "      <td>74.964031</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.213333</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bekasi</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>6.561680e+13</td>\n",
              "      <td>14015.0000</td>\n",
              "      <td>1.250955e+06</td>\n",
              "      <td>146532.25</td>\n",
              "      <td>2.931669e+06</td>\n",
              "      <td>602937.666667</td>\n",
              "      <td>62.038584</td>\n",
              "      <td>88.254391</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.965000</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Cilacap</td>\n",
              "      <td>96.478867</td>\n",
              "      <td>9.474960e+13</td>\n",
              "      <td>803.3700</td>\n",
              "      <td>3.605370e+05</td>\n",
              "      <td>71381.25</td>\n",
              "      <td>1.795050e+06</td>\n",
              "      <td>328724.333333</td>\n",
              "      <td>93.803447</td>\n",
              "      <td>81.341424</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>73.612500</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Kudus</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.005176e+13</td>\n",
              "      <td>2014.4075</td>\n",
              "      <td>2.478633e+04</td>\n",
              "      <td>20609.00</td>\n",
              "      <td>8.545575e+05</td>\n",
              "      <td>401730.166667</td>\n",
              "      <td>91.997631</td>\n",
              "      <td>90.874716</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>76.655000</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kota Semarang</td>\n",
              "      <td>99.435033</td>\n",
              "      <td>1.321015e+14</td>\n",
              "      <td>4741.1800</td>\n",
              "      <td>8.773980e+05</td>\n",
              "      <td>72148.50</td>\n",
              "      <td>1.732847e+06</td>\n",
              "      <td>458919.666667</td>\n",
              "      <td>68.826660</td>\n",
              "      <td>87.596349</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>77.448333</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Bojonegoro</td>\n",
              "      <td>94.806200</td>\n",
              "      <td>6.526294e+13</td>\n",
              "      <td>566.2500</td>\n",
              "      <td>4.108000e+04</td>\n",
              "      <td>31283.50</td>\n",
              "      <td>1.265024e+06</td>\n",
              "      <td>337696.666667</td>\n",
              "      <td>96.265710</td>\n",
              "      <td>82.944792</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.392500</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Gresik</td>\n",
              "      <td>99.344567</td>\n",
              "      <td>9.551984e+13</td>\n",
              "      <td>1084.5000</td>\n",
              "      <td>6.136700e+04</td>\n",
              "      <td>47261.00</td>\n",
              "      <td>1.299902e+06</td>\n",
              "      <td>451782.166667</td>\n",
              "      <td>87.036100</td>\n",
              "      <td>91.277329</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.564167</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Malang</td>\n",
              "      <td>99.829067</td>\n",
              "      <td>6.466987e+13</td>\n",
              "      <td>731.7500</td>\n",
              "      <td>9.429267e+04</td>\n",
              "      <td>64255.25</td>\n",
              "      <td>2.609669e+06</td>\n",
              "      <td>318125.000000</td>\n",
              "      <td>78.998459</td>\n",
              "      <td>83.857915</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.429167</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Pasuruan</td>\n",
              "      <td>99.543367</td>\n",
              "      <td>9.977910e+13</td>\n",
              "      <td>1092.7500</td>\n",
              "      <td>5.809033e+04</td>\n",
              "      <td>51523.25</td>\n",
              "      <td>1.610123e+06</td>\n",
              "      <td>335358.500000</td>\n",
              "      <td>86.081302</td>\n",
              "      <td>81.704555</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.126667</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Sidoarjo</td>\n",
              "      <td>98.275867</td>\n",
              "      <td>1.320949e+14</td>\n",
              "      <td>2680.7500</td>\n",
              "      <td>1.408130e+05</td>\n",
              "      <td>92098.00</td>\n",
              "      <td>2.162529e+06</td>\n",
              "      <td>449743.666667</td>\n",
              "      <td>81.079978</td>\n",
              "      <td>91.895753</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.934167</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Kediri</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>8.402232e+13</td>\n",
              "      <td>4493.0000</td>\n",
              "      <td>3.614233e+04</td>\n",
              "      <td>7715.50</td>\n",
              "      <td>2.856215e+05</td>\n",
              "      <td>457813.666667</td>\n",
              "      <td>71.677772</td>\n",
              "      <td>88.131285</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.918333</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67f79417-6b2d-42c2-8b65-a7ff442392ab')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-67f79417-6b2d-42c2-8b65-a7ff442392ab button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-67f79417-6b2d-42c2-8b65-a7ff442392ab');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-18f4b413-7d67-4a15-a1a6-9a84d37b6d5f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18f4b413-7d67-4a15-a1a6-9a84d37b6d5f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-18f4b413-7d67-4a15-a1a6-9a84d37b6d5f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2.mean()"
      ],
      "metadata": {
        "id": "Swn2hDe64XaE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4e133011-4c68-48d2-d65e-ef29a91bf34b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.909249e+01\n",
              "PDRB ADHK (Rp)                                 1.021942e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  4.284689e+03\n",
              "Jumlah Motor (unit)                            5.731959e+05\n",
              "Jumlah Pengangguran (Jiwa)                     9.277949e+04\n",
              "Jumlah Penduduk (Jiwa)                         2.171796e+06\n",
              "Garis Kemiskinan (Persen)                      4.255121e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             7.861315e+01\n",
              "Rasio RT memiliki Spd Motor                    8.418560e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.555915e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.705647e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.274176e+01\n",
              "k-means++ 3                                    2.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ILEdluI3xnYr",
        "outputId": "7e7c9ab8-4e4f-42bd-b6a7-d896aeb9a897"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Tanggerang', 'Kota Cilegon', 'Kota Tanggerang',\n",
              "       'Kab. Bandung', 'Kab. Bogor', 'Kab. Karawang', 'Kota Bandung',\n",
              "       'Kota Bekasi', 'Kab. Cilacap', 'Kab. Kudus', 'Kota Semarang',\n",
              "       'Kab. Bojonegoro', 'Kab. Gresik', 'Kab. Malang', 'Kab. Pasuruan',\n",
              "       'Kab. Sidoarjo', 'Kota Kediri'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 4cluster\n"
      ],
      "metadata": {
        "id": "e5WFet6Ojrq4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['k-means++ 4'] = C_kmpp2\n",
        "#g = sns.pairplot(g1.iloc[:,2:], \\\n",
        "                 #hue=\"k-means++ 5\", diag_kind=\"hist\", palette=\"tab10\")\n",
        "\n"
      ],
      "metadata": {
        "id": "zkdDvx2Tj8ed"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "pca = PCA(n_components=2)\n",
        "X_pca = pca.fit_transform(X)\n",
        "\n",
        "# Create a DataFrame for the PCA results\n",
        "pca_df = pd.DataFrame(data=X_pca, columns=['PCA1', 'PCA2'])\n",
        " # Assign cluster labels\n",
        "pca_df['Cluster'] = C_kmpp2\n",
        "# Create a scatter plot with colors indicating cluster assignments\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.scatterplot(x='PCA1', y='PCA2', hue='Cluster', data=pca_df, palette='Set1', s=100)\n",
        "plt.title('PCA Visualization of K-Means Clusters')\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.legend(title='Cluster')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "qybYoC1o2xeE",
        "outputId": "e9e306c4-b841-4d7a-cfe3-8cbb1d43c81a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "outputId": "8aa88108-1b98-4154-c2a4-4484c97fb6ac",
        "id": "G0gd5KPtj8ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "..                                           ...                          ...   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  \n",
              "0              0            0  \n",
              "1              0            0  \n",
              "2              0            3  \n",
              "3              2            3  \n",
              "4              2            3  \n",
              "..           ...          ...  \n",
              "114            0            3  \n",
              "115            0            0  \n",
              "116            0            0  \n",
              "117            0            0  \n",
              "118            1            2  \n",
              "\n",
              "[119 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a9976056-2607-42c5-8af5-7694e81002be\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9976056-2607-42c5-8af5-7694e81002be')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a9976056-2607-42c5-8af5-7694e81002be button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a9976056-2607-42c5-8af5-7694e81002be');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f228f641-9c61-4c6c-bbec-0187b34d3eb1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f228f641-9c61-4c6c-bbec-0187b34d3eb1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f228f641-9c61-4c6c-bbec-0187b34d3eb1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['k-means++ 4'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2927be2b-73c3-427b-c185-d4e29f811204",
        "id": "t_37Guo6j8ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    85\n",
              "3    22\n",
              "2     6\n",
              "1     6\n",
              "Name: k-means++ 4, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0 = df.loc[df['k-means++ 4']==0]\n",
        "all1 = df.loc[df['k-means++ 4']==1]\n",
        "all2 = df.loc[df['k-means++ 4']==2]\n"
      ],
      "metadata": {
        "id": "AF2VIwXFj8ee"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "outputId": "8ef1d4c9-9838-4b26-8050-bb025681eb7c",
        "id": "kkfrPFYwj8ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          provinsi               kota  \\\n",
              "0           Banten         Kab. Lebak   \n",
              "1           Banten    Kab. Pandeglang   \n",
              "5           Banten        Kota Serang   \n",
              "8    DI Yogyakarta        Kab. Bantul   \n",
              "9    DI Yogyakarta  Kab. Gunung Kidul   \n",
              "..             ...                ...   \n",
              "111     Jawa Timur        Kota Blitar   \n",
              "113     Jawa Timur        Kota Madiun   \n",
              "115     Jawa Timur     Kota Mojokerto   \n",
              "116     Jawa Timur      Kota Pasuruan   \n",
              "117     Jawa Timur   Kota Probolinggo   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "0                                     94.299500    1.979186e+13   \n",
              "1                                     92.035400    1.880812e+13   \n",
              "5                                    100.000000    2.154588e+13   \n",
              "8                                    100.000000    1.825054e+13   \n",
              "9                                     99.768533    1.303754e+13   \n",
              "..                                          ...             ...   \n",
              "111                                  100.000000    4.573370e+12   \n",
              "113                                  100.000000    1.002101e+13   \n",
              "115                                  100.000000    4.694168e+12   \n",
              "116                                   99.019600    5.611072e+12   \n",
              "117                                  100.000000    7.842530e+12   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0                         376.7500        245416.500000   \n",
              "1                         439.2500        206134.250000   \n",
              "5                        2519.5000        196289.250000   \n",
              "8                        1974.8675        370664.250000   \n",
              "9                         493.3500        241273.500000   \n",
              "..                             ...                  ...   \n",
              "111                      4313.5000         34113.333333   \n",
              "113                      5201.2500         17280.666667   \n",
              "115                      7752.0000         24618.333333   \n",
              "116                      5620.0000         34564.666667   \n",
              "117                      4131.2500         26674.000000   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "5                      27425.75            6.864417e+05   \n",
              "8                      20781.50            1.022138e+06   \n",
              "9                       9371.00            7.476099e+05   \n",
              "..                          ...                     ...   \n",
              "111                     4340.25            1.435798e+05   \n",
              "113                     5829.75            1.829170e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "5                358571.333333                           85.084066   \n",
              "8                375738.166667                           80.492049   \n",
              "9                296254.833333                           94.868551   \n",
              "..                         ...                                 ...   \n",
              "111              428145.833333                           77.449045   \n",
              "113              453130.166667                           63.273951   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                       21699.000000   \n",
              "1                      65.052239                       21699.000000   \n",
              "5                      85.493165                       21699.000000   \n",
              "8                      86.179912                       13508.166667   \n",
              "9                      77.346043                       13508.166667   \n",
              "..                           ...                                ...   \n",
              "111                    85.797419                       12994.500000   \n",
              "113                    85.444512                       12994.500000   \n",
              "115                    86.527718                       12994.500000   \n",
              "116                    83.494919                       12994.500000   \n",
              "117                    86.171077                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "5                                      83.231667                    67.822500   \n",
              "8                                      84.061667                    73.723333   \n",
              "9                                      84.061667                    74.000000   \n",
              "..                                           ...                          ...   \n",
              "111                                    75.026667                    73.608333   \n",
              "113                                    75.026667                    72.712500   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  \n",
              "0              0            0  \n",
              "1              0            0  \n",
              "5              0            0  \n",
              "8              0            0  \n",
              "9              0            0  \n",
              "..           ...          ...  \n",
              "111            0            0  \n",
              "113            0            0  \n",
              "115            0            0  \n",
              "116            0            0  \n",
              "117            0            0  \n",
              "\n",
              "[85 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-97112eca-af5f-4e35-abfc-b014881b288d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.299500</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.7500</td>\n",
              "      <td>245416.500000</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.035400</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.2500</td>\n",
              "      <td>206134.250000</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>2.154588e+13</td>\n",
              "      <td>2519.5000</td>\n",
              "      <td>196289.250000</td>\n",
              "      <td>27425.75</td>\n",
              "      <td>6.864417e+05</td>\n",
              "      <td>358571.333333</td>\n",
              "      <td>85.084066</td>\n",
              "      <td>85.493165</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.822500</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Bantul</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>1.825054e+13</td>\n",
              "      <td>1974.8675</td>\n",
              "      <td>370664.250000</td>\n",
              "      <td>20781.50</td>\n",
              "      <td>1.022138e+06</td>\n",
              "      <td>375738.166667</td>\n",
              "      <td>80.492049</td>\n",
              "      <td>86.179912</td>\n",
              "      <td>13508.166667</td>\n",
              "      <td>84.061667</td>\n",
              "      <td>73.723333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Gunung Kidul</td>\n",
              "      <td>99.768533</td>\n",
              "      <td>1.303754e+13</td>\n",
              "      <td>493.3500</td>\n",
              "      <td>241273.500000</td>\n",
              "      <td>9371.00</td>\n",
              "      <td>7.476099e+05</td>\n",
              "      <td>296254.833333</td>\n",
              "      <td>94.868551</td>\n",
              "      <td>77.346043</td>\n",
              "      <td>13508.166667</td>\n",
              "      <td>84.061667</td>\n",
              "      <td>74.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Blitar</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.573370e+12</td>\n",
              "      <td>4313.5000</td>\n",
              "      <td>34113.333333</td>\n",
              "      <td>4340.25</td>\n",
              "      <td>1.435798e+05</td>\n",
              "      <td>428145.833333</td>\n",
              "      <td>77.449045</td>\n",
              "      <td>85.797419</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.608333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>1.002101e+13</td>\n",
              "      <td>5201.2500</td>\n",
              "      <td>17280.666667</td>\n",
              "      <td>5829.75</td>\n",
              "      <td>1.829170e+05</td>\n",
              "      <td>453130.166667</td>\n",
              "      <td>63.273951</td>\n",
              "      <td>85.444512</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.712500</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.0000</td>\n",
              "      <td>24618.333333</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.019600</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.0000</td>\n",
              "      <td>34564.666667</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.2500</td>\n",
              "      <td>26674.000000</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97112eca-af5f-4e35-abfc-b014881b288d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-97112eca-af5f-4e35-abfc-b014881b288d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-97112eca-af5f-4e35-abfc-b014881b288d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dbcf91bb-c04c-402e-8b1c-91ba8928c687\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbcf91bb-c04c-402e-8b1c-91ba8928c687')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dbcf91bb-c04c-402e-8b1c-91ba8928c687 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f3276a69-79f1-4abf-9c2c-48c1deb59f09",
        "id": "r2S8yFMGj8ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.806111e+01\n",
              "PDRB ADHK (Rp)                                 1.895526e+13\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  2.212599e+03\n",
              "Jumlah Motor (unit)                            3.586305e+05\n",
              "Jumlah Pengangguran (Jiwa)                     2.808162e+04\n",
              "Jumlah Penduduk (Jiwa)                         9.389602e+05\n",
              "Garis Kemiskinan (Persen)                      3.699452e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             8.577554e+01\n",
              "Rasio RT memiliki Spd Motor                    7.832493e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.382602e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.635592e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.267134e+01\n",
              "k-means++ 3                                    0.000000e+00\n",
              "k-means++ 4                                    0.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0[['provinsi','kota']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "897c14ec-5f1e-45f5-d7a8-bd8f9f622ed5",
        "id": "xtw-1R_Cj8ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          provinsi               kota\n",
              "0           Banten         Kab. Lebak\n",
              "1           Banten    Kab. Pandeglang\n",
              "5           Banten        Kota Serang\n",
              "8    DI Yogyakarta        Kab. Bantul\n",
              "9    DI Yogyakarta  Kab. Gunung Kidul\n",
              "..             ...                ...\n",
              "111     Jawa Timur        Kota Blitar\n",
              "113     Jawa Timur        Kota Madiun\n",
              "115     Jawa Timur     Kota Mojokerto\n",
              "116     Jawa Timur      Kota Pasuruan\n",
              "117     Jawa Timur   Kota Probolinggo\n",
              "\n",
              "[85 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e8643b3e-89aa-4f56-9a47-b2c4a726b79d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Bantul</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Gunung Kidul</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Blitar</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8643b3e-89aa-4f56-9a47-b2c4a726b79d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e8643b3e-89aa-4f56-9a47-b2c4a726b79d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e8643b3e-89aa-4f56-9a47-b2c4a726b79d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f95839f0-6d21-4ec5-8533-03baa4c5d849\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f95839f0-6d21-4ec5-8533-03baa4c5d849')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f95839f0-6d21-4ec5-8533-03baa4c5d849 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b15fa23a-67b4-43f4-e004-c256ec3acfa7",
        "id": "-_yWhv4aj8ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Lebak', 'Kab. Pandeglang', 'Kota Serang', 'Kab. Bantul',\n",
              "       'Kab. Gunung Kidul', 'Kab. Kulonprogo', 'Kab. Sleman',\n",
              "       'Kota Yogyakarta', 'Kab. Kepulauan Seribu', 'Kab. Bandung Barat',\n",
              "       'Kab. Ciamis', 'Kab. Cianjur', 'Kab. Cirebon', 'Kab. Garut',\n",
              "       'Kab. Kuningan', 'Kab. Majalengka', 'Kab. Pangandaran',\n",
              "       'Kab. Subang', 'Kab. Sumedang', 'Kab. Tasikmalaya', 'Kota Banjar',\n",
              "       'Kota Bogor', 'Kota Cimahi', 'Kota Cirebon', 'Kota Sukabumi',\n",
              "       'Kota Tasikmalaya', 'Kab. Banjarnegara', 'Kab. Banyumas',\n",
              "       'Kab. Batang', 'Kab. Blora', 'Kab. Boyolali', 'Kab. Brebes',\n",
              "       'Kab. Demak', 'Kab. Grobogan', 'Kab. Jepara', 'Kab. Karanganyar',\n",
              "       'Kab. Kebumen', 'Kab. Kendal', 'Kab. Klaten', 'Kab. Magelang',\n",
              "       'Kab. Pati', 'Kab. Pekalongan', 'Kab. Pemalang',\n",
              "       'Kab. Purbalingga', 'Kab. Purworejo', 'Kab. Rembang',\n",
              "       'Kab. Semarang', 'Kab. Sragen', 'Kab. Sukoharjo', 'Kab. Tegal',\n",
              "       'Kab. Temanggung', 'Kab. Wonogiri', 'Kab. Wonosobo',\n",
              "       'Kota Magelang', 'Kota Pekalongan', 'Kota Salatiga',\n",
              "       'Kota Surakarta', 'Kota Tegal', 'Kab. Bangkalan', 'Kab. Blitar',\n",
              "       'Kab. Bondowoso', 'Kab. Jombang', 'Kab. Kediri', 'Kab. Lamongan',\n",
              "       'Kab. Lumajang', 'Kab. Madiun', 'Kab. Magetan', 'Kab. Nganjuk',\n",
              "       'Kab. Ngawi', 'Kab. Pacitan', 'Kab. Pamekasan', 'Kab. Ponorogo',\n",
              "       'Kab. Probolinggo', 'Kab. Sampang', 'Kab. Situbondo',\n",
              "       'Kab. Sumenep', 'Kab. Trenggalek', 'Kab. Tuban',\n",
              "       'Kab. Tulungagung', 'Kota Batu', 'Kota Blitar', 'Kota Madiun',\n",
              "       'Kota Mojokerto', 'Kota Pasuruan', 'Kota Probolinggo'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "outputId": "623a7ad6-3d4b-44bc-e7e3-7e5e1ebee92e",
        "id": "SlssOeBxj8ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi           kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "21    Jawa Barat    Kab. Bekasi                                   99.287000   \n",
              "22    Jawa Barat     Kab. Bogor                                   99.693500   \n",
              "28    Jawa Barat  Kab. Karawang                                   99.352767   \n",
              "37    Jawa Barat   Kota Bandung                                   99.779233   \n",
              "78   Jawa Tengah  Kota Semarang                                   99.435033   \n",
              "104   Jawa Timur  Kab. Sidoarjo                                   98.275867   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "21     2.387286e+14                        2911.75            1261729.0   \n",
              "22     1.483495e+14                        2131.25            1404250.0   \n",
              "28     1.559002e+14                        1407.75             755961.0   \n",
              "37     1.850610e+14                       14910.25            1256057.0   \n",
              "78     1.321015e+14                        4741.18             877398.0   \n",
              "104    1.320949e+14                        2680.75             140813.0   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "21                    181931.25            3.633105e+06   \n",
              "22                    310916.50            5.839390e+06   \n",
              "28                    121015.50            2.334536e+06   \n",
              "37                    127074.75            2.502052e+06   \n",
              "78                     72148.50            1.732847e+06   \n",
              "104                    92098.00            2.162529e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "21               477325.166667                           77.196490   \n",
              "22               368321.000000                           81.201374   \n",
              "28               438255.500000                           84.446690   \n",
              "37               460053.000000                           53.059216   \n",
              "78               458919.666667                           68.826660   \n",
              "104              449743.666667                           81.079978   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "21                     84.335558                            17332.5   \n",
              "22                     73.244944                            17332.5   \n",
              "28                     77.940043                            17332.5   \n",
              "37                     74.964031                            17332.5   \n",
              "78                     87.596349                            11593.0   \n",
              "104                    91.895753                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "21                                     77.125000                    73.601667   \n",
              "22                                     77.125000                    71.097500   \n",
              "28                                     77.125000                    72.056667   \n",
              "37                                     77.125000                    74.213333   \n",
              "78                                     74.826667                    77.448333   \n",
              "104                                    75.026667                    73.934167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  \n",
              "21             1            1  \n",
              "22             2            1  \n",
              "28             2            1  \n",
              "37             2            1  \n",
              "78             2            1  \n",
              "104            2            1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fa349a84-91fc-4fe1-a02e-24cb58a9a058\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bekasi</td>\n",
              "      <td>99.287000</td>\n",
              "      <td>2.387286e+14</td>\n",
              "      <td>2911.75</td>\n",
              "      <td>1261729.0</td>\n",
              "      <td>181931.25</td>\n",
              "      <td>3.633105e+06</td>\n",
              "      <td>477325.166667</td>\n",
              "      <td>77.196490</td>\n",
              "      <td>84.335558</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.601667</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bogor</td>\n",
              "      <td>99.693500</td>\n",
              "      <td>1.483495e+14</td>\n",
              "      <td>2131.25</td>\n",
              "      <td>1404250.0</td>\n",
              "      <td>310916.50</td>\n",
              "      <td>5.839390e+06</td>\n",
              "      <td>368321.000000</td>\n",
              "      <td>81.201374</td>\n",
              "      <td>73.244944</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.097500</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Karawang</td>\n",
              "      <td>99.352767</td>\n",
              "      <td>1.559002e+14</td>\n",
              "      <td>1407.75</td>\n",
              "      <td>755961.0</td>\n",
              "      <td>121015.50</td>\n",
              "      <td>2.334536e+06</td>\n",
              "      <td>438255.500000</td>\n",
              "      <td>84.446690</td>\n",
              "      <td>77.940043</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>72.056667</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bandung</td>\n",
              "      <td>99.779233</td>\n",
              "      <td>1.850610e+14</td>\n",
              "      <td>14910.25</td>\n",
              "      <td>1256057.0</td>\n",
              "      <td>127074.75</td>\n",
              "      <td>2.502052e+06</td>\n",
              "      <td>460053.000000</td>\n",
              "      <td>53.059216</td>\n",
              "      <td>74.964031</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.213333</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kota Semarang</td>\n",
              "      <td>99.435033</td>\n",
              "      <td>1.321015e+14</td>\n",
              "      <td>4741.18</td>\n",
              "      <td>877398.0</td>\n",
              "      <td>72148.50</td>\n",
              "      <td>1.732847e+06</td>\n",
              "      <td>458919.666667</td>\n",
              "      <td>68.826660</td>\n",
              "      <td>87.596349</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>77.448333</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Sidoarjo</td>\n",
              "      <td>98.275867</td>\n",
              "      <td>1.320949e+14</td>\n",
              "      <td>2680.75</td>\n",
              "      <td>140813.0</td>\n",
              "      <td>92098.00</td>\n",
              "      <td>2.162529e+06</td>\n",
              "      <td>449743.666667</td>\n",
              "      <td>81.079978</td>\n",
              "      <td>91.895753</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.934167</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa349a84-91fc-4fe1-a02e-24cb58a9a058')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fa349a84-91fc-4fe1-a02e-24cb58a9a058 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fa349a84-91fc-4fe1-a02e-24cb58a9a058');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7a3651fc-937e-49ea-8959-6060c31311e4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7a3651fc-937e-49ea-8959-6060c31311e4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7a3651fc-937e-49ea-8959-6060c31311e4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "31fd5efb-36d6-480a-e05c-dfa2b6081a39",
        "id": "Tw9UtiU7j8ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.930390e+01\n",
              "PDRB ADHK (Rp)                                 1.653726e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  4.797155e+03\n",
              "Jumlah Motor (unit)                            9.493680e+05\n",
              "Jumlah Pengangguran (Jiwa)                     1.508641e+05\n",
              "Jumlah Penduduk (Jiwa)                         3.034076e+06\n",
              "Garis Kemiskinan (Persen)                      4.421030e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             7.430173e+01\n",
              "Rasio RT memiliki Spd Motor                    8.166278e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.565292e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.639222e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.372528e+01\n",
              "k-means++ 3                                    1.833333e+00\n",
              "k-means++ 4                                    1.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e379c1cc-e17f-412e-a3b3-0f01e9485646",
        "id": "P2V6GI3oj8ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Bekasi', 'Kab. Bogor', 'Kab. Karawang', 'Kota Bandung',\n",
              "       'Kota Semarang', 'Kab. Sidoarjo'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 535
        },
        "outputId": "b78ad601-fb3c-4629-c161-8acfa6e7d8f0",
        "id": "yXz5GSqhj8ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi                  kota  \\\n",
              "14   DKI Jakarta    Kota Jakarta Barat   \n",
              "15   DKI Jakarta    Kota Jakarta Pusat   \n",
              "16   DKI Jakarta  Kota Jakarta Selatan   \n",
              "17   DKI Jakarta    Kota Jakarta Timur   \n",
              "18   DKI Jakarta    Kota Jakarta Utara   \n",
              "118   Jawa Timur         Kota Surabaya   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "14                                   100.000000    3.013646e+14   \n",
              "15                                   100.000000    4.274374e+14   \n",
              "16                                   100.000000    3.974829e+14   \n",
              "17                                    98.974367    2.952711e+14   \n",
              "18                                   100.000000    3.136514e+14   \n",
              "118                                   98.701300    3.842024e+14   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "14                      19838.5500         1.473874e+07   \n",
              "15                      18785.5575         1.473874e+07   \n",
              "16                      15489.6675         1.473874e+07   \n",
              "17                      15557.6800         1.473874e+07   \n",
              "18                      12345.7525         1.473874e+07   \n",
              "118                      8215.5000         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "14                     103508.5            2.507990e+06   \n",
              "15                      38675.0            9.692097e+05   \n",
              "16                      89288.5            2.234179e+06   \n",
              "17                     106630.5            2.951502e+06   \n",
              "18                      83284.5            1.778313e+06   \n",
              "118                    122910.0            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "14               500273.166667                           49.711463   \n",
              "15               599169.666667                           42.309587   \n",
              "16               699988.333333                           46.733298   \n",
              "17               517909.000000                           50.373830   \n",
              "18               528524.833333                           45.078933   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "14                     81.397537                       26093.833333   \n",
              "15                     70.390338                       26093.833333   \n",
              "16                     78.396880                       26093.833333   \n",
              "17                     81.541047                       26093.833333   \n",
              "18                     76.575130                       26093.833333   \n",
              "118                    85.464276                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "14                                     88.951667                    73.545833   \n",
              "15                                     88.951667                    74.049167   \n",
              "16                                     88.951667                    74.119167   \n",
              "17                                     88.951667                    74.404167   \n",
              "18                                     88.951667                    73.191667   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  \n",
              "14             1            2  \n",
              "15             1            2  \n",
              "16             1            2  \n",
              "17             1            2  \n",
              "18             1            2  \n",
              "118            1            2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d74d6f68-3a63-4e2b-a819-25d09172187b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Barat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.013646e+14</td>\n",
              "      <td>19838.5500</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>103508.5</td>\n",
              "      <td>2.507990e+06</td>\n",
              "      <td>500273.166667</td>\n",
              "      <td>49.711463</td>\n",
              "      <td>81.397537</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.545833</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Pusat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.274374e+14</td>\n",
              "      <td>18785.5575</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>38675.0</td>\n",
              "      <td>9.692097e+05</td>\n",
              "      <td>599169.666667</td>\n",
              "      <td>42.309587</td>\n",
              "      <td>70.390338</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.049167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Selatan</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.974829e+14</td>\n",
              "      <td>15489.6675</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>89288.5</td>\n",
              "      <td>2.234179e+06</td>\n",
              "      <td>699988.333333</td>\n",
              "      <td>46.733298</td>\n",
              "      <td>78.396880</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.119167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Timur</td>\n",
              "      <td>98.974367</td>\n",
              "      <td>2.952711e+14</td>\n",
              "      <td>15557.6800</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>106630.5</td>\n",
              "      <td>2.951502e+06</td>\n",
              "      <td>517909.000000</td>\n",
              "      <td>50.373830</td>\n",
              "      <td>81.541047</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.404167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Utara</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.136514e+14</td>\n",
              "      <td>12345.7525</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>83284.5</td>\n",
              "      <td>1.778313e+06</td>\n",
              "      <td>528524.833333</td>\n",
              "      <td>45.078933</td>\n",
              "      <td>76.575130</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.191667</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.701300</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.5000</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.0</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d74d6f68-3a63-4e2b-a819-25d09172187b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d74d6f68-3a63-4e2b-a819-25d09172187b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d74d6f68-3a63-4e2b-a819-25d09172187b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-69911101-3319-4620-a5ed-e156611261dd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69911101-3319-4620-a5ed-e156611261dd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-69911101-3319-4620-a5ed-e156611261dd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2e5f4111-95c3-4098-a5ba-8dc2c1476006",
        "id": "fHlJUYBAj8ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.961261e+01\n",
              "PDRB ADHK (Rp)                                 3.532350e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.503878e+04\n",
              "Jumlah Motor (unit)                            1.232398e+07\n",
              "Jumlah Pengangguran (Jiwa)                     9.071617e+04\n",
              "Jumlah Penduduk (Jiwa)                         2.220017e+06\n",
              "Garis Kemiskinan (Persen)                      5.635859e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             4.864908e+01\n",
              "Rasio RT memiliki Spd Motor                    7.896087e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.391061e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.663083e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.389736e+01\n",
              "k-means++ 3                                    1.000000e+00\n",
              "k-means++ 4                                    2.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9b0e8637-8a27-4401-c1ee-9d736ba7c1d2",
        "id": "EqbqAiMzj8ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Barat', 'Kota Jakarta Pusat', 'Kota Jakarta Selatan',\n",
              "       'Kota Jakarta Timur', 'Kota Jakarta Utara', 'Kota Surabaya'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3 = df.loc[df['k-means++ 4']==3]\n",
        "all3"
      ],
      "metadata": {
        "id": "oGdLS1w_G6Sj",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "b13c49fe-85f0-4cd2-ac54-ffef432076cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi                    kota  \\\n",
              "2         Banten             Kab. Serang   \n",
              "3         Banten         Kab. Tanggerang   \n",
              "4         Banten            Kota Cilegon   \n",
              "6         Banten  Kota Tangerang Selatan   \n",
              "7         Banten         Kota Tanggerang   \n",
              "19    Jawa Barat            Kab. Bandung   \n",
              "27    Jawa Barat          Kab. Indramayu   \n",
              "32    Jawa Barat         Kab. Purwakarta   \n",
              "34    Jawa Barat           Kab. Sukabumi   \n",
              "39    Jawa Barat             Kota Bekasi   \n",
              "43    Jawa Barat              Kota Depok   \n",
              "52   Jawa Tengah            Kab. Cilacap   \n",
              "60   Jawa Tengah              Kab. Kudus   \n",
              "82    Jawa Timur         Kab. Banyuwangi   \n",
              "84    Jawa Timur         Kab. Bojonegoro   \n",
              "86    Jawa Timur             Kab. Gresik   \n",
              "87    Jawa Timur             Kab. Jember   \n",
              "94    Jawa Timur             Kab. Malang   \n",
              "95    Jawa Timur          Kab. Mojokerto   \n",
              "100   Jawa Timur           Kab. Pasuruan   \n",
              "112   Jawa Timur             Kota Kediri   \n",
              "114   Jawa Timur             Kota Malang   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "2                                     98.773000    5.166992e+13   \n",
              "3                                     99.270100    9.159683e+13   \n",
              "4                                    100.000000    7.079368e+13   \n",
              "6                                     99.382700    5.644622e+13   \n",
              "7                                     99.358967    1.038955e+14   \n",
              "19                                    99.404767    7.783522e+13   \n",
              "27                                    99.579400    5.856784e+13   \n",
              "32                                    98.611133    4.419376e+13   \n",
              "34                                    97.409333    4.434422e+13   \n",
              "39                                   100.000000    6.561680e+13   \n",
              "43                                   100.000000    4.606371e+13   \n",
              "52                                    96.478867    9.474960e+13   \n",
              "60                                   100.000000    7.005176e+13   \n",
              "82                                    99.846400    5.213556e+13   \n",
              "84                                    94.806200    6.526294e+13   \n",
              "86                                    99.344567    9.551984e+13   \n",
              "87                                    98.924733    5.138213e+13   \n",
              "94                                    99.829067    6.466987e+13   \n",
              "95                                    99.342100    5.554828e+13   \n",
              "100                                   99.543367    9.977910e+13   \n",
              "112                                  100.000000    8.402232e+13   \n",
              "114                                  100.000000    4.957143e+13   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "2                         863.2500         3.737372e+05   \n",
              "3                        3596.2500         1.222381e+06   \n",
              "4                        2439.2500         2.067328e+05   \n",
              "6                       11350.7500         6.777738e+05   \n",
              "7                       14046.7500         9.956895e+05   \n",
              "19                       2085.2500         9.577970e+05   \n",
              "27                        840.5000         4.855360e+05   \n",
              "32                       1148.2500         2.757110e+05   \n",
              "34                        592.7500         4.771970e+05   \n",
              "39                      14015.0000         1.250955e+06   \n",
              "43                      11447.7500         9.664510e+05   \n",
              "52                        803.3700         3.605370e+05   \n",
              "60                       2014.4075         2.478633e+04   \n",
              "82                        278.0000         9.799900e+04   \n",
              "84                        566.2500         4.108000e+04   \n",
              "86                       1084.5000         6.136700e+04   \n",
              "87                        787.2500         6.879100e+04   \n",
              "94                        731.7500         9.429267e+04   \n",
              "95                       1538.2500         3.567600e+04   \n",
              "100                      1092.7500         5.809033e+04   \n",
              "112                      4493.0000         3.614233e+04   \n",
              "114                      5944.5000         4.483433e+04   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "6                      54459.75            1.540204e+06   \n",
              "7                      89333.00            2.055251e+06   \n",
              "19                    120278.00            3.715660e+06   \n",
              "27                     78553.25            1.719218e+06   \n",
              "32                     45519.50            9.528468e+05   \n",
              "34                    102190.50            2.459060e+06   \n",
              "39                    146532.25            2.931669e+06   \n",
              "43                     95238.50            2.331134e+06   \n",
              "52                     71381.25            1.795050e+06   \n",
              "60                     20609.00            8.545575e+05   \n",
              "82                     42301.00            1.642492e+06   \n",
              "84                     31283.50            1.265024e+06   \n",
              "86                     47261.00            1.299902e+06   \n",
              "87                     60059.50            2.471276e+06   \n",
              "94                     64255.25            2.609669e+06   \n",
              "95                     29793.25            1.110119e+06   \n",
              "100                    51523.25            1.610123e+06   \n",
              "112                     7715.50            2.856215e+05   \n",
              "114                    37472.50            8.572278e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "6                569896.000000                           77.073268   \n",
              "7                572316.000000                           60.592195   \n",
              "19               339063.333333                           77.885703   \n",
              "27               445538.666667                           79.782066   \n",
              "32               353913.500000                           86.098524   \n",
              "34               306154.166667                           87.469963   \n",
              "39               602937.666667                           62.038584   \n",
              "43               622132.833333                           63.465709   \n",
              "52               328724.333333                           93.803447   \n",
              "60               401730.166667                           91.997631   \n",
              "82               347580.833333                           88.700709   \n",
              "84               337696.666667                           96.265710   \n",
              "86               451782.166667                           87.036100   \n",
              "87               336670.666667                           90.982777   \n",
              "94               318125.000000                           78.998459   \n",
              "95               377477.833333                           83.005988   \n",
              "100              335358.500000                           86.081302   \n",
              "112              457813.666667                           71.677772   \n",
              "114              509449.500000                           64.222282   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "6                      88.132278                            21699.0   \n",
              "7                      87.961656                            21699.0   \n",
              "19                     73.109074                            17332.5   \n",
              "27                     77.396357                            17332.5   \n",
              "32                     71.243830                            17332.5   \n",
              "34                     58.290219                            17332.5   \n",
              "39                     88.254391                            17332.5   \n",
              "43                     86.648911                            17332.5   \n",
              "52                     81.341424                            11593.0   \n",
              "60                     90.874716                            11593.0   \n",
              "82                     83.785780                            12994.5   \n",
              "84                     82.944792                            12994.5   \n",
              "86                     91.277329                            12994.5   \n",
              "87                     80.309401                            12994.5   \n",
              "94                     83.857915                            12994.5   \n",
              "95                     86.937132                            12994.5   \n",
              "100                    81.704555                            12994.5   \n",
              "112                    88.131285                            12994.5   \n",
              "114                    81.436044                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "6                                      83.231667                    71.526667   \n",
              "7                                      83.231667                    72.380833   \n",
              "19                                     77.125000                    73.476667   \n",
              "27                                     77.125000                    71.465000   \n",
              "32                                     77.125000                    70.876667   \n",
              "34                                     77.125000                    70.825000   \n",
              "39                                     77.125000                    74.965000   \n",
              "43                                     77.125000                    74.478333   \n",
              "52                                     74.826667                    73.612500   \n",
              "60                                     74.826667                    76.655000   \n",
              "82                                     75.026667                    70.526667   \n",
              "84                                     75.026667                    71.392500   \n",
              "86                                     75.026667                    72.564167   \n",
              "87                                     75.026667                    69.002500   \n",
              "94                                     75.026667                    72.429167   \n",
              "95                                     75.026667                    72.409167   \n",
              "100                                    75.026667                    70.126667   \n",
              "112                                    75.026667                    73.918333   \n",
              "114                                    75.026667                    73.144167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  \n",
              "2              0            3  \n",
              "3              2            3  \n",
              "4              2            3  \n",
              "6              0            3  \n",
              "7              2            3  \n",
              "19             2            3  \n",
              "27             0            3  \n",
              "32             0            3  \n",
              "34             0            3  \n",
              "39             2            3  \n",
              "43             0            3  \n",
              "52             2            3  \n",
              "60             2            3  \n",
              "82             0            3  \n",
              "84             2            3  \n",
              "86             2            3  \n",
              "87             0            3  \n",
              "94             2            3  \n",
              "95             0            3  \n",
              "100            2            3  \n",
              "112            2            3  \n",
              "114            0            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-436fb790-e2dc-4663-a15f-b83211967067\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.773000</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.2500</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.270100</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.2500</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.2500</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tangerang Selatan</td>\n",
              "      <td>99.382700</td>\n",
              "      <td>5.644622e+13</td>\n",
              "      <td>11350.7500</td>\n",
              "      <td>6.777738e+05</td>\n",
              "      <td>54459.75</td>\n",
              "      <td>1.540204e+06</td>\n",
              "      <td>569896.000000</td>\n",
              "      <td>77.073268</td>\n",
              "      <td>88.132278</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>71.526667</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tanggerang</td>\n",
              "      <td>99.358967</td>\n",
              "      <td>1.038955e+14</td>\n",
              "      <td>14046.7500</td>\n",
              "      <td>9.956895e+05</td>\n",
              "      <td>89333.00</td>\n",
              "      <td>2.055251e+06</td>\n",
              "      <td>572316.000000</td>\n",
              "      <td>60.592195</td>\n",
              "      <td>87.961656</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>72.380833</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bandung</td>\n",
              "      <td>99.404767</td>\n",
              "      <td>7.783522e+13</td>\n",
              "      <td>2085.2500</td>\n",
              "      <td>9.577970e+05</td>\n",
              "      <td>120278.00</td>\n",
              "      <td>3.715660e+06</td>\n",
              "      <td>339063.333333</td>\n",
              "      <td>77.885703</td>\n",
              "      <td>73.109074</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.476667</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Indramayu</td>\n",
              "      <td>99.579400</td>\n",
              "      <td>5.856784e+13</td>\n",
              "      <td>840.5000</td>\n",
              "      <td>4.855360e+05</td>\n",
              "      <td>78553.25</td>\n",
              "      <td>1.719218e+06</td>\n",
              "      <td>445538.666667</td>\n",
              "      <td>79.782066</td>\n",
              "      <td>77.396357</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.465000</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Purwakarta</td>\n",
              "      <td>98.611133</td>\n",
              "      <td>4.419376e+13</td>\n",
              "      <td>1148.2500</td>\n",
              "      <td>2.757110e+05</td>\n",
              "      <td>45519.50</td>\n",
              "      <td>9.528468e+05</td>\n",
              "      <td>353913.500000</td>\n",
              "      <td>86.098524</td>\n",
              "      <td>71.243830</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>70.876667</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Sukabumi</td>\n",
              "      <td>97.409333</td>\n",
              "      <td>4.434422e+13</td>\n",
              "      <td>592.7500</td>\n",
              "      <td>4.771970e+05</td>\n",
              "      <td>102190.50</td>\n",
              "      <td>2.459060e+06</td>\n",
              "      <td>306154.166667</td>\n",
              "      <td>87.469963</td>\n",
              "      <td>58.290219</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>70.825000</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bekasi</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>6.561680e+13</td>\n",
              "      <td>14015.0000</td>\n",
              "      <td>1.250955e+06</td>\n",
              "      <td>146532.25</td>\n",
              "      <td>2.931669e+06</td>\n",
              "      <td>602937.666667</td>\n",
              "      <td>62.038584</td>\n",
              "      <td>88.254391</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.965000</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Depok</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.606371e+13</td>\n",
              "      <td>11447.7500</td>\n",
              "      <td>9.664510e+05</td>\n",
              "      <td>95238.50</td>\n",
              "      <td>2.331134e+06</td>\n",
              "      <td>622132.833333</td>\n",
              "      <td>63.465709</td>\n",
              "      <td>86.648911</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.478333</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Cilacap</td>\n",
              "      <td>96.478867</td>\n",
              "      <td>9.474960e+13</td>\n",
              "      <td>803.3700</td>\n",
              "      <td>3.605370e+05</td>\n",
              "      <td>71381.25</td>\n",
              "      <td>1.795050e+06</td>\n",
              "      <td>328724.333333</td>\n",
              "      <td>93.803447</td>\n",
              "      <td>81.341424</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>73.612500</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Kudus</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.005176e+13</td>\n",
              "      <td>2014.4075</td>\n",
              "      <td>2.478633e+04</td>\n",
              "      <td>20609.00</td>\n",
              "      <td>8.545575e+05</td>\n",
              "      <td>401730.166667</td>\n",
              "      <td>91.997631</td>\n",
              "      <td>90.874716</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>76.655000</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Banyuwangi</td>\n",
              "      <td>99.846400</td>\n",
              "      <td>5.213556e+13</td>\n",
              "      <td>278.0000</td>\n",
              "      <td>9.799900e+04</td>\n",
              "      <td>42301.00</td>\n",
              "      <td>1.642492e+06</td>\n",
              "      <td>347580.833333</td>\n",
              "      <td>88.700709</td>\n",
              "      <td>83.785780</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.526667</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Bojonegoro</td>\n",
              "      <td>94.806200</td>\n",
              "      <td>6.526294e+13</td>\n",
              "      <td>566.2500</td>\n",
              "      <td>4.108000e+04</td>\n",
              "      <td>31283.50</td>\n",
              "      <td>1.265024e+06</td>\n",
              "      <td>337696.666667</td>\n",
              "      <td>96.265710</td>\n",
              "      <td>82.944792</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.392500</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Gresik</td>\n",
              "      <td>99.344567</td>\n",
              "      <td>9.551984e+13</td>\n",
              "      <td>1084.5000</td>\n",
              "      <td>6.136700e+04</td>\n",
              "      <td>47261.00</td>\n",
              "      <td>1.299902e+06</td>\n",
              "      <td>451782.166667</td>\n",
              "      <td>87.036100</td>\n",
              "      <td>91.277329</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.564167</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Jember</td>\n",
              "      <td>98.924733</td>\n",
              "      <td>5.138213e+13</td>\n",
              "      <td>787.2500</td>\n",
              "      <td>6.879100e+04</td>\n",
              "      <td>60059.50</td>\n",
              "      <td>2.471276e+06</td>\n",
              "      <td>336670.666667</td>\n",
              "      <td>90.982777</td>\n",
              "      <td>80.309401</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>69.002500</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Malang</td>\n",
              "      <td>99.829067</td>\n",
              "      <td>6.466987e+13</td>\n",
              "      <td>731.7500</td>\n",
              "      <td>9.429267e+04</td>\n",
              "      <td>64255.25</td>\n",
              "      <td>2.609669e+06</td>\n",
              "      <td>318125.000000</td>\n",
              "      <td>78.998459</td>\n",
              "      <td>83.857915</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.429167</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Mojokerto</td>\n",
              "      <td>99.342100</td>\n",
              "      <td>5.554828e+13</td>\n",
              "      <td>1538.2500</td>\n",
              "      <td>3.567600e+04</td>\n",
              "      <td>29793.25</td>\n",
              "      <td>1.110119e+06</td>\n",
              "      <td>377477.833333</td>\n",
              "      <td>83.005988</td>\n",
              "      <td>86.937132</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.409167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Pasuruan</td>\n",
              "      <td>99.543367</td>\n",
              "      <td>9.977910e+13</td>\n",
              "      <td>1092.7500</td>\n",
              "      <td>5.809033e+04</td>\n",
              "      <td>51523.25</td>\n",
              "      <td>1.610123e+06</td>\n",
              "      <td>335358.500000</td>\n",
              "      <td>86.081302</td>\n",
              "      <td>81.704555</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.126667</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Kediri</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>8.402232e+13</td>\n",
              "      <td>4493.0000</td>\n",
              "      <td>3.614233e+04</td>\n",
              "      <td>7715.50</td>\n",
              "      <td>2.856215e+05</td>\n",
              "      <td>457813.666667</td>\n",
              "      <td>71.677772</td>\n",
              "      <td>88.131285</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.918333</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.5000</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-436fb790-e2dc-4663-a15f-b83211967067')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-436fb790-e2dc-4663-a15f-b83211967067 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-436fb790-e2dc-4663-a15f-b83211967067');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0362bd66-f4ec-4d2f-a0f8-a7292435d8ae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0362bd66-f4ec-4d2f-a0f8-a7292435d8ae')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0362bd66-f4ec-4d2f-a0f8-a7292435d8ae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3.mean()"
      ],
      "metadata": {
        "id": "-G4NCd1MaEFD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "03060407-5eba-4798-f9c1-ba04e1e088d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.908658e+01\n",
              "PDRB ADHK (Rp)                                 6.789621e+13\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  3.716354e+03\n",
              "Jumlah Motor (unit)                            4.006163e+05\n",
              "Jumlah Pengangguran (Jiwa)                     6.723565e+04\n",
              "Jumlah Penduduk (Jiwa)                         1.772511e+06\n",
              "Garis Kemiskinan (Persen)                      4.196721e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             8.100683e+01\n",
              "Rasio RT memiliki Spd Motor                    8.268268e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.602848e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.744553e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.166402e+01\n",
              "k-means++ 3                                    1.090909e+00\n",
              "k-means++ 4                                    3.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3['kota'].unique()"
      ],
      "metadata": {
        "id": "oVMZWmbZiO9y",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "11013b34-c501-42bb-db02-37577c42b489"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Serang', 'Kab. Tanggerang', 'Kota Cilegon',\n",
              "       'Kota Tangerang Selatan', 'Kota Tanggerang', 'Kab. Bandung',\n",
              "       'Kab. Indramayu', 'Kab. Purwakarta', 'Kab. Sukabumi',\n",
              "       'Kota Bekasi', 'Kota Depok', 'Kab. Cilacap', 'Kab. Kudus',\n",
              "       'Kab. Banyuwangi', 'Kab. Bojonegoro', 'Kab. Gresik', 'Kab. Jember',\n",
              "       'Kab. Malang', 'Kab. Mojokerto', 'Kab. Pasuruan', 'Kota Kediri',\n",
              "       'Kota Malang'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "uNPzZ0arlcIs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 5cluster\n"
      ],
      "metadata": {
        "id": "tnshJSM5lc9G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['k-means++ 5'] = C_kmpp3\n",
        "#g = sns.pairplot(g1.iloc[:,2:], \\\n",
        "                 #hue=\"k-means++ 5\", diag_kind=\"hist\", palette=\"tab10\")\n",
        "\n"
      ],
      "metadata": {
        "id": "LLXEM8JGlc9G"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "pca = PCA(n_components=2)\n",
        "X_pca = pca.fit_transform(X)\n",
        "\n",
        "# Create a DataFrame for the PCA results\n",
        "pca_df = pd.DataFrame(data=X_pca, columns=['PCA1', 'PCA2'])\n",
        " # Assign cluster labels\n",
        "pca_df['Cluster'] = C_kmpp3\n",
        "# Create a scatter plot with colors indicating cluster assignments\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.scatterplot(x='PCA1', y='PCA2', hue='Cluster', data=pca_df, palette='Set1', s=100)\n",
        "plt.title('PCA Visualization of K-Means Clusters')\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.legend(title='Cluster')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "rh2k5PHZ22CI",
        "outputId": "302e8674-6e3a-49ee-924c-f473061ce418"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA2QAAAIsCAYAAACdlGp9AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACmRUlEQVR4nOzdd3RU1drH8e+Znl7ovSegFCmCFAFRBEXALooKqNjA3nu5FuxXBcWCioqK5aqAiFRRiqCggBRBem/pyfQ57x+RvIYkZBLSgN9nLZbOOXuf/cxkB/JkN8M0TRMRERERERGpcJbKDkBEREREROREpYRMRERERESkkighExERERERqSRKyERERERERCqJEjIREREREZFKooRMRERERESkkighExERERERqSRKyERERERERCqJEjIREREREZFKooRMROQYsmPHDpKTk/nf//5X5eJ4/fXXSU5OrvBYKqvdkggEAjz//PP06tWLli1bcvPNN1d2SCec5ORkXn/99coOQ0SkACVkInLC+N///kdycnLenzZt2tCvXz+efPJJDhw4UKD8gQMHeO655+jfvz/t2rXjlFNO4cILL+SNN94gIyOj0DYuvvhikpOT+eSTT8KK6f333yc5OZlFixYVWebzzz8nOTmZOXPmhPdGj0Nut5vXX3+dJUuWVHYopfLVV18xYcIE+vXrx5gxYxg+fHiRZa+66irOO++8AtcXL15Mu3btuOCCC0hLSyuybnJyMmeffXah9xcuXJjX/2fMmFGat1LlrF27lrvvvptevXrRunVrOnfuzPDhw/nqq68IBoMVEsPevXt5/fXXWbt2bYW0JyLHF1tlByAiUtFuvfVW6tevj8/nY9myZXz66afMnz+fadOmERERAcDKlSu5/vrrycnJYdCgQZx88skA/Pnnn7zzzjv89ttvvPfee/meu2XLFlatWkW9evWYOnUqV1xxRbGxnHvuuTz//PNMnTqVbt26FVpm6tSpxMfH07NnT2w2GytXrsRmq3p/fd90001cf/315fJst9vN2LFjGT16NF26dKmwdsvKL7/8Qq1atXjwwQdLVX/x4sXceOONNGnShPfff5/4+PgiyzqdTrZu3crKlStp27ZtvntTp07F6XTi9XpLFUdV88UXX/DYY49RrVo1Bg8eTKNGjcjOzuaXX37hoYceYv/+/dx4443lHse+ffsYO3Ys9erVo1WrVuXenogcX6rev+giIuWsZ8+etGnTBoBLLrmE+Ph43n//febMmcN5551HRkYGo0ePxmq18vXXX9OsWbN89e+44w4+//zzAs+dMmUK1apV4/777+fWW29lx44d1K9f/4ix1KpViy5dujBr1iyeeOIJHA5Hvvt79+7lt99+49JLL8VutwO5P3BXRTabrVISxcpqtyQOHjxIbGxsqeouXbqUm266icaNGxebjAE0bNiQQCDAtGnT8iVkXq+XWbNm0bt3b3744YdSxVKV/PHHHzz22GOccsopvP3220RHR+fdGz58OKtWrWLDhg2VGOHRy8nJITIysrLDEJFypimLInLCO+2004DcdVEAn332GXv37uX+++8vkIwBVK9evdA1QNOmTaNfv3707t2bmJgYpk2bFlb7gwYNIjMzkx9//LHAve+++45QKMTAgQPzYjx87db+/ft54IEH6NmzJ61bt6ZHjx7cdNNNee8Hil4/06dPH+6///6812lpaTz33HMMHDiQ9u3b06FDB6677jrWrVtX7Ps4fC3X/fffn2+K6L//HIrF5/Px6quvcuGFF9KxY0dOOeUUrrjiCn755Ze85+zYsYOuXbsCMHbs2ALPKGwNWSAQYNy4cZx11lm0bt2aPn368PLLL+Pz+Qq8/xtuuIHffvuNiy++mDZt2nDmmWfyzTffFPt+IfcH5jFjxuRNl+vXrx8TJkzANM282JOTk1myZAkbNmzIiz3cqZe//fYbN9xwAw0bNuT9998nISEhrHrnnXce06dPJxQK5V2bO3cuHo+H/v37F1pn7969PPDAA3Tr1o3WrVszYMAAvvzyy3xlwvl6/ft9T5gwgcmTJ+d9HS666CJWrlyZr2w4/bcwY8eOxTAMXnzxxXzJ2CFt2rThwgsvLLL+/fffT58+fQpcL6w/LVy4kMsvv5xOnTrRvn17+vXrx8svvwzAkiVLuPjiiwF44IEH8r7G//4eXbFiBddeey0dO3akXbt2XHnllSxbtqzQdv/++2/uuusuTj311LxR9tJ+RiJybKjav1IUEakA27ZtA8gbeZg7dy4ul4t+/fqF/YwVK1awdetWnnnmGRwOB3379mXq1KlhTZc6++yzefzxx5k2bVqBtT/Tpk2jXr16dOzYscj6t9xyC3///TdXXnkl9erVIyUlhYULF7J79+5iR+gOt337dmbPnk3//v2pX78+Bw4cYPLkyVx55ZV899131KpVK+xnXXbZZXmJ1CE///wzU6dOJTExEYCsrCy++OILzjvvPC655BKys7P58ssvue666/jiiy9o1aoViYmJPP744zz++OP07duXvn37AhxxI4+HH36Yr7/+mn79+jFixAhWrlzJW2+9xcaNGxk3bly+slu3buW2227j4osv5oILLuCrr77i/vvv5+STT6ZFixZFtmGaJjfddFPeD+StWrXi559/5vnnn2fv3r08+OCDJCYm8vzzzzN+/HhycnK48847AQpN9A+3bNkyRo4cSf369fnggw/yPrNwnHfeeXlr7g59DaZNm8Zpp51GtWrVCpQ/cOAAl156KYZhMHToUBITE/npp5946KGHyMrKylvzFs7X69+mTZtGdnY2l112GYZh8O6773LLLbcwe/bsvBHf0vRft9vNL7/8QqdOnahbt27Yn0tpbNiwgRtuuIHk5GRuvfVWHA4HW7duZfny5UDu1/LWW2/ltdde47LLLsv7Xu3QoQOQO9105MiRtG7dmtGjR2MYBv/73/8YNmwYn3zySYFppbfddhuNGjXijjvuyEvsy/J7XESqIFPK3JYtW8xHHnnEHDRokNmqVStzwIABpXrOfffdZyYlJRX656233irjqEWOf1999ZWZlJRkLlq0yDx48KC5e/du87vvvjM7d+5stm3b1tyzZ49pmqZ56qmnmoMGDSrRs5988kmzV69eZigUMk3TNBcsWGAmJSWZa9asCav+rbfearZp08bMzMzMu7Zx40YzKSnJfOmll/Kubd++3UxKSjK/+uor0zRNMz093UxKSjLffffdIz4/KSnJfO211wpcP+OMM8z77rsv77XX6zWDwWC+Mtu3bzdbt25tjh07tsg4TNM0X3vtNTMpKanIGLZs2WJ27NjRHDFihBkIBEzTNM1AIGB6vd585dLT081u3bqZDzzwQN61gwcPFvkeDm937dq1ZlJSkvnQQw/lKzdmzBgzKSnJXLx4cb73n5SUZP7666/52mrdurU5ZsyYIt+LaZrmrFmzzKSkJPONN97Id/2WW24xk5OTza1bt+Zdu/LKK8P+t+DKK680O3fubLZv394cMGCAefDgwbDqHd7OhRdeaD744IOmaeZ+pieffLL59ddfm7/88ouZlJRkfv/993n1HnzwQbN79+5mSkpKvufdcccdZseOHU23222aZvhfr0P9o3PnzmZaWlre9dmzZ5tJSUnm3Llz8+qG038Pd+hr/NRTT4Vd5/D+c99995lnnHFGgXKH96f333/fTEpKOuLXYeXKlQW+H0zTNEOhkHn22Web11xzTd7fDaZpmm632+zTp485YsSIAu3eeeed+Z5R2s9IRI4dmrJYDjZs2MD8+fNp1KhRWL8FLcrNN9/M5MmT8/0ZNmwYkLsGRkRKZ/jw4XTt2pVevXpxxx13EBUVxdixY/NGf7KysoiKigr7eYFAgOnTp3POOedgGAZA3kjElClTwnrGoEGD8Hq9zJw5M+/aoSmPh6YrFsblcmG321m6dCnp6elhx1wUh8OBxZL7T0MwGCQ1NZXIyEiaNGnCmjVrSv3cnJwcRo8eTWxsLC+99BJWqxUAq9Wat24uFAqRlpZGIBCgdevWpW5v/vz5AIwYMSLf9WuuuSbf/UOaN29Op06d8l4nJibSpEkTtm/ffsR2fvrpJ6xWK1dddVWBdkzT5KeffipV/JD7eWVnZ1OtWrVCp+OFY+DAgcyaNQufz8cPP/yA1WrlrLPOKlDONE1mzpxJnz59ME2TlJSUvD89evQgMzOT1atXAyX/ep177rnExcXlvT70OR/6bEvbf7OysgBK9H1aWofW/s2ZMyffFNBwrF27li1btjBw4EBSU1PzPtecnBy6du3Kr7/+WuCZQ4YMyfe6rL/HRaTq0ZTFctCnT5+8f/Tuv/9+/vzzz1I9p2HDhjRs2DDftZdeeonmzZvTsmXLo45T5ET16KOP0qRJE6xWK9WrV6dJkyZ5SQhAdHQ02dnZYT9v4cKFpKSk0LZtW7Zu3Zp3vUuXLnz33Xfcc889+Z5fmJ49exIfH8+0adPy1r189913tGzZ8ojT5hwOB3fffTfPPfcc3bt3p127dvTu3Zvzzz+fGjVqhP0eDgmFQnz44Yd88skn7NixI9+24cVtJnEkjzzyCNu2beOzzz4rsA7q66+/5r333mPz5s34/f6866WdirVz504sFkuBvz9r1KhBbGwsO3fuzHe9Tp06BZ4RFxdX7A+/O3fupGbNmgUSpkO/iDu8nZJo1KgRgwcP5sUXX+TOO+/k1VdfzUtis7OzycnJyStrtVoLnc547rnn8txzz/HTTz8xZcoUevfuXWhyl5KSQkZGRt4v/gqTkpKS9/8l+Xod/tkeSs4OHRtR2v576H2U5Pu0tM4991y++OILHn74YV566SW6du1K37596d+/f7Hf11u2bAHgvvvuK7JMZmZmvqT18M+xrL/HRaTqUUJWDor7CxpyfyP53nvv8fnnn7Nz505q1arFVVdddcSzaQ7ttnbbbbeVYbQiJ562bdvm7bJYmKZNm7J27Vp8Pl+BXQ8Lc2gU7Pbbby/0/tKlS/M2DimK3W6nf//+fPHFFxw4cIBdu3axZcsW7rnnnmLbHz58OH369GH27NksWLCAV199lbfffpuJEydy0kknHbHu4ec0jR8/nldffZWLLrqI2267jbi4OCwWC88880zeepaSmjhxItOmTeOFF14osMbo22+/5f777+ess87i2muvpVq1alitVt56661iR6iKc2i0sjiHEp2qZuTIkaSlpfHuu+/y8MMP88wzz2AYBu+99x5jx47NK1evXj3mzp1boH7NmjXp3Lkz77//PsuXLy/yUORDIzSDBg3iggsuKLTMofV6Jf16FfXZ/rsvlab/NmrUCJvNxvr16wu9H46i+sfh3xMul4tJkyaxZMkSfvzxR37++WemT5/O5MmTee+9947Yfw69z3vvvbfI7fAP30WxsF1Uj+Z7XESqPiVkleTpp5/miy++4MYbb6Rdu3YsX76cF198EafTyeWXX15onWnTphEKhRgwYEAFRytyYjnjjDP4/fffmTlzZqEH9P5bTk4Oc+fO5dxzzy10E5CnnnqKqVOnFpuQQe4Us88++4zp06ezY8cODMMotv1DGjZsyDXXXMM111zDli1bOP/883nvvfd48cUXgdyRicMPs/b5fOzfvz/ftR9++IEuXbrwzDPP5LuekZER9g5///bbb7/x/PPPM2zYMAYNGlTg/g8//ECDBg3ydsw75LXXXstXLtzkCnITlFAoxNatW/NNGz9w4AAZGRnUq1evxO+jqHYWL15MVlZWvpGnTZs25d0/Wvfccw/p6el88cUXxMXFcf/993P++efn2+TlSMcgnHfeeTz88MPExsYWOdU9MTGRqKgoQqFQkWfhHRLu16ukiuu/h4uIiOC0007jl19+Yffu3YWOchYnNja20APed+3aVeCaxWKha9eudO3alQceeIDx48fzyiuvsGTJErp161Zk/2zQoAGQO6JX3GdbnJJ+RiJy7NAaskqwbds2Pv74Yx588EFuuukmunXrxujRoxk+fDjjxo0rco76tGnTaN++fd5f8CJSPoYMGUKNGjUYM2YMmzdvLnD/4MGDvPHGGwDMmjWLnJwchg4dSv/+/Qv8OeOMM5g5c2aB7dYL07FjR+rVq8eUKVOYPn06p556KrVr1z5iHbfbXeCQ34YNGxIVFZWvzQYNGvDbb7/lK/f5558XGA2wWq0FRsK+//579u7dW2z8h9u3bx+33347HTp04N577y20zKHRhX+3uWLFCv7444985Q4d2F3YD9CH69WrF5A7Mvdv77//fr77R6tnz54Eg0EmTZqU7/oHH3yAYRhlttb3ySefpF+/frz//vu88cYbNGjQgG7duuX9OdIOnP3792f06NE89thjRY72Wq1W+vXrxw8//FDoiNO/pyuG+/UKV7j9tzCjRo3CNE3uvffeQqcu/vnnn3z99ddF1m/YsCGZmZn5jnTYt28fs2bNylcuLS2tQN1Do12HYiyqf7Zu3ZqGDRvy3nvvFRrjvz/bohzNZyQixwaNkFWCRYsWAblbXQcCgbzr3bp145133mH37t0FfrO6ceNG1qxZwyOPPFKhsYqciOLi4hg3bhzXX389559/PoMGDeLkk08GYM2aNXm/HAGYOnUq8fHxea8P16dPHz7//HN+/PHHAlvaH84wDAYOHMj48eMBwpqevGXLFoYPH07//v1p3rw5VquV2bNnc+DAgXyj6ZdccgmPPfYYt9xyC926dWPdunUsWLCgwKhX7969GTduHA888ADt27dn/fr1TJ06tVS/CHrqqadISUnhuuuu47vvvst3Lzk5mZYtW9K7d29mzpzJqFGj6N27Nzt27OCzzz6jefPm+dZJuVwumjdvzvfff0/jxo2Jj4+nRYsWJCUlFWi3ZcuWXHDBBUyePJmMjAxOPfVUVq1axddff81ZZ50V1mhlOPr06UOXLl145ZVX2LlzJ8nJySxcuJA5c+YwbNiwAmvYSstisfDiiy+SlZXFq6++SlxcHEOHDg2rbkxMDLfcckux5e666y6WLFnCpZdeyiWXXELz5s1JT09n9erVLF68mKVLlwKE/fUKV7j9tzAdOnTg0Ucf5YknnuCcc85h8ODBNGrUiOzsbJYuXcrcuXOLnEYMuWvDXnzxRUaPHs1VV12Fx+Ph008/pUmTJnmbmACMGzeO3377jV69elGvXj0OHjzIJ598Qu3atfOS4YYNGxIbG8tnn31GVFQUkZGRtG3blgYNGvDUU08xcuRIzjvvPC688EJq1arF3r17WbJkCdHR0Xnf7+XxGYnIsUEJWSVITU3FNM0ifygoLCGbOnUqNpuNc889tyJCFDnhtWvXjqlTpzJhwgR+/PFHvv32WywWC02bNuX666/nyiuv5ODBgyxevJgBAwYUuY6ka9euREREMGXKlGITMiAvIXM4HGGdg1a7dm0GDBjA4sWLmTJlClarlaZNm/Lf//43X/1LL72UHTt28OWXX/Lzzz/TsWNH3n///QLrVm+88UbcbjdTp05l+vTpnHTSSbz11lu89NJLxcZyuNTUVILBIM8++2yBe6NHj6Zly5ZceOGFeWedLViwgObNm/PCCy8wY8aMvCTgkKeeeor//Oc/PPvss/j9fkaPHl1oQnaobP369fn666+ZPXs21atX54YbbmD06NElfh9FsVgsvPnmm7z22mtMnz6d//3vf9SrV4977703b0fHsuJwOBg7diwjRozgqaeeIjY29oi7b5ZU9erV+eKLLxg3bhyzZs3i008/JT4+nubNm3P33XfnlSvJ1ysc4fbfogwZMoQ2bdrw3nvv8c033+TtCnrSSSfx7LPPFjpN9pCEhATGjh3LmDFjeOGFF6hfvz533nknW7duzZeQ9enTh507d/LVV1+RmppKQkICnTt35pZbbiEmJgbIXQM6ZswYXn75ZR5//HECgQDPPvssDRo0oEuXLkyePJk33niDjz/+mJycHGrUqEHbtm257LLLyv0zEpGqzzBLu0pbwnJol8VD21cDfPLJJzz55JN88skneQdj/luTJk0K7ITVt29fGjVqxLvvvlvuMYuIiIiISMXQCFkl6Nq1K5A7L71Pnz7Fll+xYgXbtm1j1KhR5R2aiIiIiIhUICVk5cDtducdPLpz506ysrKYMWMGAJ07d6ZJkyYMHTqUe++9l2uvvZZ27drh9/vZsmULS5Ysydss4JCpU6ficrno27dvhb8XEREREREpP5qyWA527NjBmWeeWei9Dz/8kC5dumCaJpMmTWLy5Mls3ryZqKgomjRpQv/+/fOt6QgGg/Tq1YtOnTrx3//+t2LegIiIiIiIVAglZCIiIiIiIpVE55CJiIiIiIhUEiVkIiIiIiIilUQJmYiIiIiISCXRLotlzDRNQiEtyzteWCyGvp5S5ahfSlWlvilVkfqlVBaLxcAwjGLLKSErY6GQSUpKdmWHIWXAZrOQkBBFRkYOgUCossMRAdQvpepS35SqSP1SKlNiYhRWa/EJmaYsioiIiIiIVBIlZCIiIiIiIpVECZmIiIiIiEglUUImIiIiIiJSSZSQiYiIiIiIVBLtsigiIiIiIsUKhUIEg4HKDqNKsFptWCxlM7alhExERERERIpkmiYZGSm43VmVHUqVEhERTWxsYlhnjR2JEjIRERERESnSoWQsOjoBh8N51AnIsc40TXw+L1lZqQDExVU7qucpIRMRERERkUKFQsG8ZCw6Orayw6kyHA4nAFlZqcTEJBzV9EVt6iEiIiIiIoUKBoPA/ycg8v8OfSZHu65OCZmIiIiIiBzRiT5NsTBl9ZloyuJxymIxsFhyO0koZBIKmZUckYiIiIiIHE4jZMcZh8NGnNMgMT6CWPzE4iMxPoI4p4HTqfxbRERERCrPxRcP5OmnH6/sMKoU/YR+nDAMiHFasfncZE2YwMFJnxA6cAAAS0I8kZdeStT11+OKjiHDE8TUgJmIiIiIlKGdO3cwadJEfv11KQcP7sdms9OsWTPOOKMvgwdfgNPpKtf2PR4PkyZNpH37jnTo0Klc2ypLSsiOE7FOC+a61ey9ahhmZma+e6HUNLLeepvsiR+S8O7bxJ3ahTR3sJIiFREREZHjzaJFC3jkkfuw2x307z+Apk2b4ff7WbnyD95441U2b97Effc9VK4xeDwe3n//HQAlZBVp69atTJgwgRUrVrBhwwaaNm3KtGnTiq3Xp08fdu7cWeD6ypUrcTqPrV1kIiLsGPv3cOCKKzFzcoosZ3o8pFxzHTWmTiGycTNy3P4KjFJEREREjke7du3ksccepHbtOrz66niqV6+ed++iiy5lx47tLFq0oBIjPDput5uIiIhye/4xv4Zsw4YNzJ8/n0aNGtGsWbMS1e3Xrx+TJ0/O98fhcJRTpOXHZYTIfPGlIyZjeXw+Mp57Dpe1/OMSERERkePfJ598iNudw/33P5IvGTukfv0GXHrp5YXWnTDhLXr0KDiaNX36VHr06MTu3bvyrq1bt4Y77xzNgAFn0qdPdy65ZBDPPPMEALt37+K8884C4P3336FHj0706NGJCRPeyqu/desWHn74Xs45pw99+nTj2muvYsGC+YW2+/vvy3jxxTGcd15fLrjg3JJ/KCVwzI+Q9enTh7POyv3w77//fv7888+w61avXp1TTjmlnCKrGHa7FSMYwD19eth1vPN+xMxIx+GKxec7unMTREREROTEtnDhz9StW482bdqVWxupqSncccdo4uPjGTp0ODExMezevYuffpoHQHx8AnfffT8vvjiGnj3PoFevMwBo1qwFAJs2beTmm6+levWaXHnlMFyuCObNm80DD9zNU089n1f+kJdeeo74+HhGjLgOt9tdbu8LjoOE7GhOxT4eWK0WfH+sBJ8v/Eqmie+XJdjO6leiaiIiIiIi/5adncX+/fs4/fRe5drOqlUryczM4JVXxtKy5Ul516+//mYAIiIi6N37LF58cQzNmjWnX7/8o1qvvvoStWrV5p13PsybEXfhhZdw883X8uabrxdIyGJjY3n11TexWst/WtkJnc1MnTqV1q1b0759e0aOHMlff/1V2SGVmGEAHk+J65nlnOmLiIiIyPEvOzsbgMjIyHJtJzo6GsgdjQsESjbDKyMjneXLf+WMM84iJyeHtLQ00tLSSE9Pp3PnruzYsY39+/flqzNw4PkVkozBcTBCVlp9+vShbdu21K1bl+3btzN+/HiuuOIKvvnmGxo0aHBUz7bZKi7PNQwDa726Ja5nbVCfkFGxsR5rrFZLvv+KVAXql1JVqW9KVaR+efRCIeOI96OiogDICWcvg6PQvn1Hevfuw/vvv8Pnn39C+/YdOf303vTt27/YPSB27NiOaZq8++543n13fKFlUlNTqFGjZt7runXrhR2b1Woc1c/UJ2xC9vDDD+f9f6dOnejevTvnnHMOEyZM4PHHHy/1cy0Wg4SEqDKIMHxmUhK2Zk0JbNwUVnlLrVo4u3TBsNmIjDy2dpSsDLGx5berjkhpqV9KVaW+KVWR+mXpeTxWDhywFJl0xMXFUqNGDTZv3hh2UmIY//+sQ8lywbpm3v1D98aMeZE//1zJzz//xJIli3n22SeZPHkS7747kcjISGy23OTRYskf66EVTkOHXkWXLt0KjalRo0bYbBYsltxnREZGFPt+QiEDi8VCXFwkLlfpz1g7YROyw9WsWZOOHTuyevXqo3pOKGSSkVG+vyE4XKTdIGrECNIffiSs8lFXXYnf7SU74C3nyI5tVquF2NgIMjLcBIOhyg5HBFC/lKpLfVOqIvXLo+fzeQmFQgSDJoFA4Z9h1649mDLla/744w9at25b7DNN8/+fFRUVA0BqajoxMTF5ZXbtyt1dMRgM5Wu3ZcvWtGzZmpEjb2bmzBk8+eTD/PDDDAYOPJ9gMDeJC4Xyx1qrVu5sMovFRocOpxYZVyAQIhQyC223MMGgSSgUIj09B3chZ/zGxkaENTqrhKwcFPfFK2vZpoX4oVfg/elnPDNnHrGso1tXokfdTEZOgEBAh0OHI5xvSJGKpn4pVZX6plRF6peldyjJOZKhQ4cxa9YMxox5itdee5PExGr57u/cuYOFC38udOv7evXqA7BixXJ69MjdGMTtdvP99/nPFc7IyCAmJgbD+P8plC1aJAHg+2eXukOjVFlZWfnqJiQk0r59R7799n9cdNFlBbbmT01NJSEhodj3WZQjJavhUEL2j71797Js2TIGDx5c2aGUWDAYItMdJOGtN8kc8xzZH31c8Ewyp5PISy4m7sknyPIE8fuVjImIiIjI0atXrz6PPfYUjz76IEOHXkL//gNo2rQZfr+fP/9cybx5sznnnPMKrdu582nUqlWbMWP+w+WXb8FisfLdd1OIj09g7949eeVmzJjG//73JT179qZevfrk5OQwderXREVF0bVrdwCcTheNGzdl7tyZNGjQkNjYWJo2bUbTps258877uPnm6xg27DIGDryAunXrkZJykNWrV7Fv3z4mTvy0Qj6rwhzzCZnb7Wb+/NwD3Xbu3ElWVhYzZswAoHPnziQmJjJs2DB27drFrFmzAJg2bRrz5s2jV69e1KxZk+3bt/P2229jtVoZMWJEpb2Xo+HzBcgwTaLuuJOYe+4m54sv8K9eA6aJPSmJyCGXEcIg0xPE51MyJiIiIiJlp0ePXkyc+CmffPIRCxbM55tvvsRud9CsWXNGj76dgQMvKLSezWbjmWde5KWXxvDuu+NJTKzGpZdeTkxMbN6hzwCnnNKBNWtWM2fOTFJTU4iKiqZVq5N59NGn8m3Acf/9D/PKKy/w+usv4/f7GTFiJE2bNqdJk6a8++6HvP/+O3z//VTS09NJSEikRYtkRoy4rtw/nyMxTNMsfhyyCtuxYwdnnnlmofc+/PBDunTpwlVXXcXOnTuZO3cuAH/88QcvvfQSGzZsIDMzk5iYGE477TRuvfVWmjZtelTxBIMhUlKyj+oZR8tms+CyGViCuVuChixWvCFDo2IlZLNZSEiIIjU1W9McpMpQv5SqSn1TqiL1y6Pn9/s4eHA31arVwW4/8m6GJ5riPpvExKiw1pAd8wlZVVMVEjIpG/pLXKoi9UupqtQ3pSpSvzx6SsiKVlYJmQ5lEBERERERqSRKyERERERERCqJEjIREREREZFKooRMRERERESkkighExERERERqSRKyERERERERCqJEjIREREREZFKooRMRERERESkkighExERERERqSRKyERERERERCqJrbIDEBERERERqWhbt27hlVee588/VxIZGUX//ucycuTN2O32Co1DCZmIiIiIiJxQMjIyuPXWG2nQoCFPP/0C+/fvY+zYV/B4PNx5530VGosSMhEREREROaF8++1X5ORk88wzLxAbGwdAMBjk5Zef4+qrr6F69RoVFovWkImIiIiISIUzg0FCvy4l+P13hH5dihkMVljbv/yyiE6dOuclYwB9+vQlFAqxdOkvFRYHaIRMREREREQqWGjOLALPPwN79/7/xVq1sN37IJYz+5Z7+1u3bmHAgEH5rsXExFCtWnW2bt1S7u3/m0bIRERERESkwoTmzCJw9+35kzGAffsI3H07oTmzyj2GzMwMoqNjClyPiYkhIyOj3Nv/NyVkIiIiIiJSIcxgMHdkzDQLuZl7LfD8sxU6fbGyKSETEREREZEKYS5fVnBkLF8BE/buyS1XjmJiYsnOzipwPTMzk9jY2HJt+3BKyEREREREpEKYB/aXabnSatSocYG1YllZWRw8eIBGjRqXa9uHU0ImIiIiIiIVwghzO/lwy5XWaad147fflpKZmZl3bd682VgsFjp3Pq1c2z6cEjIREREREakQRoeOUKsWGEYRBQyoVTu3XDkaPPgiIiMjeeCBu1i69Be++24K48a9yuDBF1boGWSghExERERERCqIYbViu/fBf14clpT989p27wMYVmu5xhEbG8urr76J1WrjgQfuYvz4sQwceD633HJnubZbGJ1DJiIiIiIiFcZyZl9sL/634DlkNWthu/eBCjmHDKBx4ya8+uobFdLWkSghExERERGRCmU5sy/23n0wly/DPLAfo3oNjA4dy31krCpSQiYiIiIiIhXOsFoxTu1c2WFUOq0hExERERERqSRKyERERERERCqJEjIREREREZFKooRMRERERESkkighExERERERqSRKyERERERERCqJEjIREREREZFKonPIRERERETkhLNjx3Y+/fQjVq/+k82bN9KwYSM++ujzCo9DCZmIiIiIiJxwNm/eyOLFCznppJMxzRChUKhS4lBCJiIiIiIiJ5zu3Xty+um9AXj66cdZt25NpcShhExERERERCpcMGSyZlcGKTk+EiMdnFQ3FqvFqLD2LZaqsZ2GEjIREREREalQizYe5O2fN3Mwy5d3rVq0g+tPb0K3ZtUqMbKKVzXSQhEREREROSEs2niQZ7//K18yBnAwy8ez3//Foo0HKymyyqGETEREREREKkQwZPL2z5uPWOadnzcTDJkVFFHlU0ImIiIiIiIVYs2ujAIjY4c7kOVjza6MCoqo8ikhExERERGRCpGSc+RkrKTljgdKyEREREREpEIkRjrKtNzxQLssioiIiIhIhTipbizVoh1HnLZYPTp3C/zy5vF4WLx4AQB79uwmOzubefNmA3DKKR1JSEgo9xhACZmIiIiIiFQQq8Xg+tOb8Oz3fxVZZuTpTSrkPLLU1BQeeeT+fNcOvX7ttfEkJHQq9xhACZmIiIiIiFSgbs2q8cA5yQXOIase7WBkBZ5DVqdOXRYs+K1C2joSJWQiIiIiIlKhujWrRpcmiazZlUFKjo/EyNxpihUxMlbVKCETEREREZEKZ7UYtKkfV9lhVDrtsigiIiIiIlJJlJCJiIiIiIhUEiVkIiIiIiIilUQJmYiIiIiISCVRQiYiIiIiIlJJlJCJiIiIiIhUEiVkIiIiIiIilUQJmYiIiIiISCXRwdAiIiIiInJCmTt3NjNnTuevv9aRmZlB/foNufjiyxgwYBCGYVRoLErIRERERETkhDJ58iRq167D6NG3Ex+fwK+/LuH5559m3769XHPN9RUaixIyERERERE5oTz33CvEx8fnve7Y8VTS09OZPHkSw4dfh8VScSu7tIZMREREREQqXMgMsS59NUv2L2Rd+mpCZqjC2v53MnZIUlIy2dnZeDzuCosDNEImIiIiIiIVbNnBpXy66QNSfSl51xIciVzedDgdq3WulJhWrvyDGjVqEhkZVaHtaoRMREREREQqzLKDS3lj3cv5kjGAVF8Kb6x7mWUHl1Z4TCtW/MGcOTO5/PIrK7xtJWQiIiIiIlIhQmaITzd9cMQyn22aWKHTF/ft28tjjz1A+/aduPjiIRXW7iFKyEREREREpEKsz1hbYGTscCm+g6zPWFsh8WRmZnL33bcSFxfH008/X6GbeRyiNWQiIiIiIlIh0n1pZVruaHi9Hu6993aysrJ46633iY6OLvc2C6OETEREREREKkScI75My5VWIBDgkUceYOvWLYwb9w41atQs1/aORAmZiIiIiIhUiKTYViQ4Eo84bTHRUY2k2FblGsdLLz3HokU/M3r07WRnZ/Pnn6v+P8akZBwOR7m2/29KyEREREREpEJYDAuXNx3OG+teLrLMkKbDsBjlu5br119/AWDs2P8WuPfFF1OoU6duubb/b0rIRERERESkwnSs1pmbW95Z4ByyREc1hjQdViHnkH355dRybyNcSshERERERKRCdazWmfaJnVifsZZ0XxpxjniSYluV+8hYVaSETEREREREKpzFsNAy7uTKDqPSnXgpqIiIiIiISBVxzCdkW7du5dFHH2Xw4MGcdNJJnHfeeWHVM02Tt99+m969e9O2bVsuu+wy/vjjj/INVkRERERE5F+O+YRsw4YNzJ8/n0aNGtGsWbOw673zzju89tprDB8+nLfeeosaNWpwzTXXsH379nKMVkRERERE5P8d8wlZnz59mD9/Pq+99honnxzeHFSv18tbb73FNddcw/Dhw+natSsvv/wy8fHxTJgwoZwjFhERERERyXXMJ2QWS8nfwvLly8nKyuKcc87Ju+ZwOOjbty8//fRTWYYnIiIiIiJSpGM+ISuNTZs2AdC0adN815s1a8auXbvweDyVEZaIiIiIiJxgTsht7zMyMnA4HDidznzXY2NjMU2T9PR0XC5XqZ9vs52Qee5xx2q15PuvSFWgfilVlfqmVEXql0cvFDIqO4Qqz2o1jurn/xMyIStPFotBQkJUZYchZSg2NqKyQxApQP1Sqir1TamK1C9Lz+OxcuCA5aiTjuNRKGRgsViIi4s8usGcMozpmBEbG4vP58Pr9eYbJcvIyMAwDOLi4kr97FDIJCMjpyzClEpmtVqIjY0gI8NNMBiq7HBEAPVLqbrUN6UqUr88ej6fl1AoRDBoEggcP5/h4sULmDTpQ7Zs2UR2djbVq9ekZ89ejBhxPdHR0WE9Ixg0CYVCpKfn4HYHC9yPjY0Ia3T2hEzIDq0d27x5My1btsy7vmnTJurWrXtUGS5wXHVWgWAwpK+pVDnql1JVqW9KVaR+WXrBoFnZIZSLjIwMTjrpZC6++DJiY+PYvHkj7733Nps2beSVV8aV6FlHm6yekAlZhw4diI6O5vvvv89LyPx+PzNnzqRnz56VHJ2IiIiIiJSnfv3Ozfe6Q4dO2O0Onn/+aQ4c2E/16jUqLJZjPiFzu93Mnz8fgJ07d5KVlcWMGTMA6Ny5M4mJiQwbNoxdu3Yxa9YsAJxOJzfccAOvv/46iYmJJCUl8emnn5KWlsa1115bae9FREREROREYYZMDqw/iCfdgyvORfWkahiWyttE5NCyJb/fX6HtHvMJ2cGDB7ntttvyXTv0+sMPP6RLly7/zHvNP69z5MiRmKbJe++9R0pKCq1atWLChAk0aNCgwmIXERERETkR7Vy2i5WfrcKd+v/HTUUkuGg7pA31OtatsDiCwSCBQIAtWzbz/vvv0qNHT+rUqbj2AQzTNI/PiaGVJBgMkZKSXdlhSBmw2SwkJESRmpqteedSZahfSlWlvilVkfrl0fP7fRw8uJtq1epgtzvK5Jk7l+1iyZu/Fnm/y02nVlhSdsEF57J//77cdrt046mnniMiIrxdOYv7bBITo8La1EN7V4qIiIiISIUwQyYrP1t1xDIrP/sTM1QxY0YvvPAq48e/x333PczWrZu57747CsysK2/H/JRFERERERE5NhxYfzDfNMXCuFPdHFh/kBotq5d7PM2btwCgdeu2tGx5EiNGXMFPP83jjDPOKve2D9EImYiIiIiIVAhP+pGTsZKWK0vNm7fAZrOxY8eOCm1XCZmIiIiIiFQIV1x45/2GW64srV79J4FAgLp161Vou5qyKCIiIiIiFaJ6UjUiElxHnLYYkRBB9aRq5RrHgw/eQ8uWrWjWrAVOp5O//17Pp59+RLNmLejZs3e5tn04JWQiIiIiIlIhDItB2yFtjrjLYtshrcv9PLJWrU5m7tyZfPzxREwzRO3adRg48AIuv/xK7HZ7ubZ9OCVkIiIiIiJSYep1rEuXm04t5ByyCNoOaV0hW95fddVwrrpqeLm3Ew4lZCIiIiIiUqHqdaxL3fZ1OLD+IJ50D644F9WTqpX7yFhVpIRMREREREQqnGExKmRr+6pOuyyKiIiIiIhUEiVkIiIiIiIilUQJmYiIiIiISCVRQiYiIiIiIlJJlJCJiIiIiIhUEiVkIiIiIiIilUQJmYiIiIiISCVRQiYiIiIiIie0nJwcLrjgXHr06MS6dWsqtG0lZCIiIiIickL74IN3CQaDldK2EjIRERERETlhbd26ha+//oJrrrm+Utq3VUqrIiIiIiJyYgsFse9ehCV7D6Go2vjrdAOLtcLDeOWV5xk8+CIaNmxU4W2DEjIREREREalgjo1TiP75XqzZu/KuBaPqknX68/iaDaqwOObNm82mTRt5+unn+euvdRXW7r9pyqKIiIiIiFQYx8YpxM64Csu/kjEAS/ZuYmdchWPjlAqJw+Px8Prrr3D99TcTFRVdIW0WRgmZiIiIiIhUjFCQ6J/vBUyMw24ZmABEL7gPQuW/wcbEiRNITKzGgAEVNyJXGCVkIiIiIiJSIey7F2HN3lUgGTvEwMSatRP77kXlGseePbv57LOPufba68nKyiIzMxO32w3kboGfk5NTru3/m9aQiYiIiIhIhbBk7ynTcqW1a9dO/H4/99xze4F7t956Iyed1Jq33/6gXGM4pMQJ2eLFi9m0aRMJCQn07NmT6OiC8y3/+OMPJk+ezLPPPlsmQYqIiIiIyLEvFFW7TMuVVosWybz22vh81/7+ez2vvfYyd9/9AK1anVyu7f9b2AmZz+dj5MiRLF26FNPMnd8ZExPD3XffzWWXXZav7LZt2/jmm2+UkImIiIiISB5/nW4Eo+piyd6dt2bs30wMQtF1c7fAL0cxMTF06NCp0HstW7YiObllubb/b2GvIZswYQK//voro0ePZsqUKUyYMIHWrVvz+OOP8+ijjxIKhcozThEREREROdZZrGSd/jxQcFuPQ6+zejxXKeeRVZawR8imT5/OBRdcwKhRowBISkqie/fujB8/nldffZUDBw7w3//+F4fDUW7BioiIiIjIsc3XbBAZ/T8qcA5ZKLouWT2eq9BzyP6tQ4dOLFjwW4W3G3ZCtmPHDq6++uoC12+88UYaNmzIfffdx4gRIxg/fnwhtUVERERERHL5mg0ipckA7LsXYcneQyiqdu40xRNoZOyQsBOyuLg4UlJSCr137rnnEhcXx+jRoxk6dCiDBlXuXv4iIiIiIlLFWaz4651e2VFUurDXkLVq1Yp58+YVeb979+588MEH7Nu3j1deeaVMghMRERERETmehZ2Q9e3blz/++IM//vijyDLt2rVj0qRJ1KhRoyxiExEREREROa6FPWXxggsuoH///tjt9iOWa9asGd999x1paWlHG5uIiIiIiMhxLeyEzDAMIiMjwyobFRVFVFRUqYMSEREREZGq49A5xPL/yuozCXvKooiIiIiInFis1txdD30+byVHUvUc+kys1rDHuAp1dLVFREREROS4ZbFYiYiIJisrFQCHw4lhGMXUOr6ZponP5yUrK5WIiGgslqMb41JCJiIiIiIiRYqNTQTIS8okV0REdN5nczSUkImIiIiUI8MALb+RY5lhGMTFVSMmJoFgMFDZ4VQJVqvtqEfGDlFCJiIiIlLGrFYLEU4Dl9OGYXMAEPJ78PhCuD0hQiFlaHLssVgsWCyOyg7juFOqtK5Vq1ZMnTq1yPvTp0+nVatWpQ5KRERE5FgVE2khIc6O6++vMT7oBWMS4LlELJP6E7HtBxLjXURFWCs7TBGpIko1QlbcFo/BYPCEX+wnIiIiJ57YKAuO7G0Y48+CzF35b26Zj7FlPiQ2J2LYXIzIRHI8JhFOKy4HWBwRAJgBHx5vALfXJBgMVcK7EJGKVOopi0UlXFlZWSxYsICEhIRSByUiIiJyrHG57Dh8+zDe6wHulKILpvyNMaEbrptW4EqIg79/wFjyX9jzB5ghjGpJuDqNwtX6ErweP5k5SspEjmeGGeaJZmPHjmXcuHFhPdQ0Ta666ioeeuihowruWBQMhkhJya7sMKQM2GwWEhKiSE3NJhDQP4ZSNahfSlWlvgmJMQbWadfBn5PDq3DabdD2Snj71MLvx9TBvHImvpgmZGSfmJ/p0VK/lMqUmBiF1Vr8CrGwR8jatGnDFVdcgWmafPLJJ3Tv3p3GjRvnK2MYBhEREZx88smcffbZJQ5aRERE5Fhkt1uxmD5Y+7/wK/0xEc58Bmq1hb0rC97P3I3x/uk4bvidCFdt3B5/2QUsIlVG2AlZr1696NWrFwBut5shQ4bQrl27cgtMRERE5Fhht1th40wIliBp8qTBtgVQv0vhCdk/ZYxZdxMxeCJuT3iPNQxwOu04LH4MQphY8IXseL1+bb8vUgWVag3Zs88+W9ZxiIiIiByzDIPcBKukvJlgjzpymXXfYjnPg8MRgc8XPGLR6AgLrggH7PsT48/PwJsOrgTsba8iOrE5bo+fbLem7olUJaXe1CMYDLJgwQK2b99Oenp6gZ0XDcNg1KhRRx2giIiISFUXCgFRtUpeMbJabtJ0xIcH4K+p2JIuLzIhMwyIjzKwHlyD8fH1uRuE/ItlwRiodyoRgyZgj2lCWraGykSqilIlZKtWreLWW29lz549RW6Br4RMREREThR+fwCanw2OaPBlhVcppi406AbfjCi2qOFJ5UgnCsVGGlj3Lsf4+GwIeAsvtPNXjHdPwzbiJ2LiksnMUVImUhWUKiF74okn8Hg8jBs3jk6dOhEbG1vWcYmIiIgcMwKBEMFACFvbofDbW+FV6jgyd91Z2pZii5pRtYtc/2WzWbA7rBiTzy86GTvEn4Px6UCct28jx+shGFRSJlLZit+HsRB//fUXI0eOpE+fPkrGRERERIAcvw3zrOcgsVnxheu0h653wuKXiy9rj4Dkgfj9hU9XjHAAKyeBOzW8QDN3w19TcDmt4ZUXkXJVqoSsdu3aRU5VFBERETkReb0B3AE75rW/QP3Tii7Y7GzMYfNg/pOweV7xDz75MkImRSZkTocVY/m7JYrVWPYWLps29xCpCko1ZXHkyJFMmDCByy67jOjo6LKOSUREROSYlO0OEnJFEjXiJ9i3GmPJq3BgXe6uG7XaYp52B8Q3BgzYMr/4B8Y1wDz7RbJ9ViBQaBHD7oKM7SULNH0bhs0OFDPFUUTKXakSsuzsbKKioujbty8DBgygdu3aWK35h70Nw2D48OFlEaOIiIjIMcPtCeLxBnHFtMR19qtYbDYwTYLBIJ6gA0+qjwiXjajh8zA+vwT+nlH4g+q0x7ziOzymC6+38GQMwAwFMayOkgVpc2KGNEImUhWUKiF77rnn8v7/448/LrSMEjIRERE5UZkmuN1+3BjAoamGBpB7cLTbE8DERvSQbyBtC8bil2HvCggFoVoSZpdboU4HcnL85OQc+eyxkDcHa8MekLo5/AAb9iDoL8Eh1iJSbkqVkM2ZM6es4xARERE5oXg8ATwecLka4TrzBaw2G2AQCgbwBO14Uj1F7qz4bzkBO9Gn3YWx4qOw2za73oU7YKOoaZAiUnFKlZDVq1evrOMQEREROSF5PH48+UbS4NBIWji8Xj/RNU+CFufAhu+Lr9D6MszoOnjTNEImUhWUapfFQ/bu3cu0adOYOHEie/bsASAYDJKWlkYweOThdRERERE5eqYJmdkBzEu/gsa9j1y4xTmY508kM0frx0SqilKNkJmmyZgxY5g0aRKBQADDMEhKSqJ27drk5OTQp08fbr31Vq0hExEREakAuZt+2Ii58gdY9zXGL/+FHb/8f4FGPTFPux1aDCAjO4jPp1+ci1QVpUrI3n33XT788ENGjhxJ165dGTFiRN69mJgYzj77bGbOnKmETERERKSCeL0BAoEQriYDiWh5PvjdmL4sDGcsWB24fSHc6T5CIZ0lK1KVlCoh++KLLzj//PO58847SU0teCp8cnIyP/3001EHJyIiIiLhCwZDZOdAdk4Qm82OYSRiuk0CAa0XE6mqSpWQ7d69m/bt2xd5PyIigqysrFIHJSIiIiJHJxDQOjGRY0GpNvWoVq0au3fvLvL+6tWrqVOnTqmDEhERERERORGUKiHr27cvn332Gdu3b8+7ZhgGAAsWLODrr7+mf//+ZROhiIiIiIjIccowzXCOHMwvMzOToUOHsmPHDjp16sTPP/9Mt27dyMnJ4Y8//qBVq1ZMmjSJiIiI8oi5SgsGQ6SkZFd2GFIGbDYLCQlRpKZma9qHVBnql1JVqW9KVaR+KZUpMTEKq7X48a9SjZDFxMTw+eefc91117F3716cTie//vormZmZjBo1ik8++eSETMZERERERERKolQjZFI0jZAdP/RbNamK1C+lqlLflKpI/VIqU7mOkImIiIiIiMjRK9W29wAbN27kq6++YseOHaSnp3P4QJthGEycOPGoAxQRERERETlelSoh++abb3jwwQex2Ww0adKE2NjYAmU0E1JEREREROTISpWQjR07llatWvHOO++QmJhY1jGVyMaNG3nqqaf4/fffiYqKYvDgwdx+++04HI4j1uvTpw87d+4scH3lypU4nc7yCldERERERCRPqRKyffv2cc0111R6Mpaens6wYcNo3Lgxr7/+Onv37mXMmDF4PB4effTRYuv369ePa665Jt+14hI5ERERERGRslKqhCw5OZl9+/aVdSwl9tlnn5Gdnc3YsWOJj48HIBgM8sQTT3DDDTdQq1atI9avXr06p5xySvkHKiIiIiIiUohS7bJ4//338+WXX7J8+fKyjqdEfvrpJ7p27ZqXjAGcc845hEIhFi5cWHmBiYiIiIiIhKFUI2TvvPMOMTExDB06lObNm1OnTh0slvy5nWEYvPnmm2USZFE2bdrERRddlO9abGwsNWrUYNOmTcXWnzp1Kp9//jl2u51OnTpx9913k5ycXF7hioiIiIiI5FOqhGz9+vUA1KlTh+zsbP7+++8CZQzDOLrIwpCRkVHoDo9xcXGkp6cfsW6fPn1o27YtdevWZfv27YwfP54rrriCb775hgYNGhxVXDabjnc7Hhw6yC+cA/1EKor6pVRV6ptSFalfyrGgVAnZ3LlzyzqOCvfwww/n/X+nTp3o3r0755xzDhMmTODxxx8v9XMtFoOEhKgyiFCqitjYiMoOQaQA9UupqtQ3pSpSv5SqrNQHQ1cFsbGxZGZmFrienp5OXFxciZ5Vs2ZNOnbsyOrVq48qplDIJCMj56ieIVWD1WohNjaCjAw3wWCossMRAdQvpepS35SqSP1SKlNsbERYo7NHlZAtXbqUH3/8kV27dgFQt25devfuTefOnY/msWFr2rRpgbVimZmZ7N+/n6ZNm1ZIDIUJBPQNfzwJBkP6mkqVo34pVZX6plRF6pdSlZUqIfP5fNx1113Mnj0b0zTz1nFlZGTw/vvv07dvX1566SXsdnuZBnu4nj17Mn78+HxryWbMmIHFYqF79+4letbevXtZtmwZgwcPLo9QRURERERECihVQjZu3DhmzZrFNddcwzXXXEP16tUBOHjwIO+99x4TJkxg3Lhx3H777WUZawFDhgzho48+YtSoUdxwww3s3buX559/niFDhuQ7g2zYsGHs2rWLWbNmATBt2jTmzZtHr169qFmzJtu3b+ftt9/GarUyYsSIco1ZRERERETkkFIlZFOnTuWCCy7g3nvvzXe9WrVq3HPPPRw8eJApU6aUe0IWFxfHxIkT+c9//sOoUaOIiori4osv5o477shXLhQKEQwG817Xr1+fffv28cwzz5CZmUlMTAynnXYat95661HvsCgiIiIiIhKuUiVk+/fvp23btkXeb9u2Ld99912pgyqJZs2a8cEHHxyxzEcffZTv9SmnnFLgmoiIiIiISEUr1aEMtWvXZunSpUXe//XXX6ldu3apgxIRERERETkRlGqE7Pzzz+f1118nJiaG4cOH06hRIwzDYMuWLUycOJEZM2Zwyy23lHWsIiIiIiJShgwD7HYbFouBaZoEAiEdEVDBSpWQ3XjjjWzfvp3PP/+cL774Aosld6AtFAphmiYXXHABN954Y5kGKiIiIiIiZcNqteBwWXC57OzL3keaNw2n1Umj+EZ4fD6CXgOfL1DZYZ4QSpWQWa1WxowZw/Dhw5k/f37eOWT16tWjZ8+etGzZskyDFBERERGRsuF02oiMsjN722ymbZrCtsytefdi7DGc2egsLm5xKRF2O+5sJWXlzTBN06zsII4nwWCIlJTsyg5DyoDNZiEhIYrU1GwdJilVhvqlVFXqm1IVqV8WZLdbiYqx88zSp1i297ciyyW6Enm2x/PEWOKVlJVSYmIUVmvxW3aUaoTskPXr1zN//nx27twJ5G4nf/rpp5OcnHw0jxURERERkXLgjLLw1so3j5iMAaR4Unho4QOMP+tt/N6QEtpyVKqEzOfz8eijj/Ltt99imma+NWQvvfQSAwcO5KmnnsLhcJRpsCIiIiIiUjoOhxV/yM+cbbPDKn/AvZ8ft8+jW82eSsjKUam2vX/hhRf45ptvuPzyy5k+fTorV65k1apVTJ8+nSFDhjBlyhReeOGFso5VRERERERKyeKAGVu+I2gGw64zbdNUXC57OUYlpUrIpkyZwuDBg3n00Udp2rQpNpsNq9VK06ZNeeyxxxg4cCBTpkwp61hFRERERKSUDMNkQ9qGEtXZmrEFi2HBYjHKKSopVUIWCARo165dkffbt29PMBh+5i0iIiIiIuXMgJLu52dilriOlEypErIePXqwYMGCIu///PPPdO/evdRBiYiIiIhI2TJDUCeqTonq1IiogWEYSsrKUakSsttuu40dO3YwevRoFi9ezM6dO9m5cyeLFi1i1KhR7Nq1i9tuu420tLR8f0REREREpHKYfgsDmg4sUZ3+jc8hx+NB+Vj5KdUui+eeey6Qu+39nDlz8t07lD0PGDCgQL21a9eWpjkRERERETlKXm+AxIRE2tfswO/7lhdbPsIWwTlNBhDIqYDgTmClSshGjRqFYWhhn4iIiIjIscTjDnJvp/u5+6c72Zm1o8hydoudBzs/ghGy4vdX7YOhbTYLdqcFw2piMQyCZggCVryeAKFQ1R/aM0xNCC1TwWCIlJTsyg5DyoDNZiEhIYrU1GydvSFVhvqlVFXqm1IVqV8WzhVhw+aE9/58l/k7fsQT9OS7367GKQw/+RrqRNQlJzNQZacrWiwGrmgrdpuVudvmsHTPEjxBD7GOWM5ocCadanUix+PFmxOslPeQmBiF1Vr8CjElZGVMCdnxQ3+JS1WkfilVlfqmVEXql0VzOm1YnSY2q5Vfdi/moOcALmsEnWqdSpwzDr8nhNtddUfGrFaDqFgHc7bNZOKaD3AH3AXKJLqqcVfHu2kW26JSEstwE7JSTVkEyMnJYebMmWzfvp309PRCyzz88MOlfbyIiIiIiJQTrzcAXrDZTDoldgXDxMBCIBAkI9VX2eEVKyLGxvTN03h/9YQiy6R4DvLoood5sttTNIlujjurah7LVaqEbPHixdx2221kZGQUWcYwDCVkIiIiIiJVWCAQIhCo+gnYvzmdNnIC2Xyw+r1iywbNIC/+9jzv9ZuIN8ddJdeUlSohe+KJJ4iIiOCVV16hXbt2REdHl3VcIiIiIiIiBVgcJlP+/gaT8JKrVG8qv+5ZSuu49rhz/OUcXcmV6hyy3bt3c91119G9e3clYyIiIiIiUmGiXZH8tGN+ierM3T4Hw1Y1pyyWKiFLTk4mMzOzrGMREREREREp0qGjtzJ8RS+dKky6Nx2LxVoeIR21UiVkd999N5988gmrVq0q63hEREREREQKdWiDeJfVVaJ6LpuLUKhq7rRZqjVknTt35sEHH2TIkCE0bdqUOnXqYLHkz+0Mw+DNN98skyBFREREREQAcnxuOtTqyPwdP4Zd59RanTGDRvkFdRRKlZD98MMP3HvvvQSDQfbu3Ut2dsFztw4NJ4qIiIiIiJSVkM/g/GYXhJ2QOa1OzmrUF3dm1VxDVqqE7KWXXqJJkya89tprNGnSpKxjEhERERERKZTH46dhQmO61+3Bwl0Lii0/tOVVhIJmlT0cvFRryPbt28eQIUOUjImIiIiISIUyTcjJ8nFnx7vpXrfHEcte2epqzm0yAE921Rwdg1KOkLVp04bdu3eXdSwiIiIiIiLF8vmCkAV3dbyHC1tczLcbv2bZ3t9wB9zEOuLoWb8ng5qeT6wjjqwMP8Fg1TsQ+pBSJWQPP/wwN910EyeddBLnnntuWcckIiIiIiJyRD5fEH+qmzquBtzc9hYiHRF597I8OYR8BplpvkqMMDyGeWjvyBIYOHAg6enp7N+/n8jISGrXrl3oLotTpkwps0CPFcFgiJSUgpucyLHHZrOQkBBFamp2lZ1zLCce9UupqtQ3pSpSvzyxGEZuDhIKVY3RsMTEKKzW4leIlWqELD4+nvj4eBo1alSa6iIiIiIiImXKNP//nLJjSakSso8++qis4xARERERETnhlGqXRRERERERETl6pRohAwgGg0yZMoUff/yRXbt2AVC3bl3OOOMMBg4ciNVqLbMgRUREREREjkelSsgyMzO59tprWbVqFVFRUTRo0ACARYsWMXPmTD799FMmTJhAdHR0mQYrIiIiIiJyPClVQvbKK6+wevVqHn74YS699FLsdjsAfr+fL774gqeffppXXnmFRx55pEyDFREREREROZ6Uag3ZrFmzuPzyyxk6dGheMgZgt9u54ooruPzyy/nhhx/KLEgREREREZHjUakSsrS0NJo0aVLk/SZNmpCenl7qoERERERERE4EpUrIGjVqxNy5c4u8P3fuXBo2bFjqoERERERERE4EpUrILr/8chYuXMjIkSNZsGABO3bsYMeOHfz8889cf/31LFq0iKFDh5Z1rCIiIiIiIseVUm3qMXToUFJSUnj77bdZsGBB/gfabIwaNYorrriiTAIUERERERE5XpX6HLJbbrmFoUOHsnjxYnbu3AlAvXr16Nq1K4mJiWUWoIiIiIiIyPGq1AkZQGJiIgMGDCirWERERERERE4oYa8hO3QY9Pjx449Y7s033+S6664jOzv7qIMTERERERE5noWdkH388cf8/vvvXHrppUcsd+mll/L7778zadKkow5ORERERETkeBZ2QjZr1iwGDBhQ7PqwatWqMWDAAGbOnHnUwYmIiIiIiBzPwk7INm/eTOvWrcMqe/LJJ7Nx48ZSByUiIiIiInIiCDshM02zRA8uaXkREREREZETTdgJWZ06dVi9enVYZVevXk2dOnVKHZSIiIiIiMiJIOyErHfv3kyZMoUtW7YcsdyWLVuYMmUKvXv3PsrQREREREREjm9hJ2TXXXcdLpeLK6+8kunTpxMIBPLdDwQCTJ8+nauvvhqXy8W1115b5sGKiIiIiIgcT8I+GLpatWq8/fbbjB49mrvuuguXy0Xjxo2JiooiOzubLVu24PF4qF69Om+//TbVq1cvz7hFRERERESOeWEnZABt27blu+++49NPP2XevHls2rSJrKwsoqOjSU5Opk+fPgwZMoTY2NjyildEREREROS4YZjaDrFMBYMhUlKyKzsMKQM2m4WEhChSU7MJBEKVHY4IoH4pVZf6plRF6pdSmRITo7Bai18hFvYaMhERERERESlbSshEREREREQqiRIyERERERGRSqKETEREREREpJIoIRMREREREakkSshEREREREQqSVjnkH3zzTelevj5559fqnpy9AwDdKCBiIiIiEjVFlZCdv/995f4wYZhKCGrYDabBZcVXJFODFvulzaY48YTMvB4AwBYLAY2mwUwCIVCBAIhQiFlbiIiIiIilSGshGzOnDnlHYccpViXBbvNSs6XX7H/889xdOtG9LCrscREE2GzERFlA6sVw2LB9HgwnE5Mnw+iXATcXtwhCz5foNh27HYrTitYzCBWux3TYsUfNPH7g2HVFxERERGR/xdWQlavXr3yjkOOQpzLgvnXOvYMG46zSxeqTfoIS2Qkga1bMZ0OyMrGv3EjhtWCrXlzjOgY3LNmAQaONm2w16mNzTQJuqx4/SY2K1iDATDBtFrxBHJH0CKtJoYBeLxYYmMI7t5NcOs2SEkhuktniI3FEzTIcfsr9fMQERERETlWhJWQSdUV6bLB9i0cvGwIzr5nkfDyS/hXrMRauxahffvJePI/eObOw3C5iLjoQqKvvgpbQgKu7t0xHA6wWgm53QTWrSO4Zy/2mjVxdGiPf/NGvIsWYRgWoi+9BKxW8PvBasU9Zw6hAwcwIiNxndEbo1kzsid+iG/1amLvvpv4Jk1J9wTz1rBZLAZOhxVbKIBhmoSsVnxhjsiJiIiIiBzPSp2Q7d+/ny+//JI1a9aQmZlJKBTKd98wDCZOnHjUAcqRRTgsHHz4EYyYGBJeehHvL0uwNWqI5+cFpD/0MIRC2Jo3p9rHHxJKTSXr3fdwf/stpscDgL1NG6KuvYbI8wdDewuhAwfw/PwzgW3bibriCtIffIjdTz1N5PmDiXv6KTL/+ypZ497Iaz/dYsHZuxdxD9yPo0sXDlx6GQljXye2SxcyvSZRdgNnpBPv4l/wzpuH6fFgqVmT6MuHYMTG4Q6iETUREREROWEZplnyvfjWrVvH1VdfjcfjoUmTJqxfv57mzZuTkZHB3r17adiwIbVr1+bDDz8sj5irtGAwREpKdoW05XTaiEjZx77uPYh79hkiL7mY7IkfYj+pFQevuBJME2uDBtSY+i05n35GxnPPF/ksW8uWVJ/0Eb5Vq7C3aIGldm2C+/djrVEDz9y5BNZvwMxxE3P7raTeehue72fkq29EReUmffv2kXr/g9ScNwdLTAye2bPJeOoZgtu352/QMHD2OYOEl1+GiAjSvSGCwaq1uYjNZiEhIYrU1GwCgVDxFUQqgPqlVFXqm1IVqV9KZUpMjMJqLf6UsVKdQ/bSSy8RGRnJjBkzeP/99zFNkwcffJD58+fzyiuvkJ6ezt13312aR0sJ2Czg+e47sFqJGDyInK/+R+TFF5H1xpt5e97HPzcG9/czjpiMAQTWrePA0Ktwdu/OwZHXk/32O1gTEjAMA1f//jj6nEHkZZeA30/8c2MwIiPz1Tezs0m55lpcZ51F3T9XYo2Jwf3Fl6TecFPBZAzANPHOmcv+c86BrEziox1hdVgRERERkeNJqX4CXr58OZdddhl169bFYsl9xKGBtnPOOYeBAwfy/PNHTgDk6FlCIczsbKwNGmBxuQhu34aZmYl3wUIAbM2a4uzSmcwXXwrreYF163B/8y3RV19FxnPPkzP5c4K7doPXiyMpCWvdumS+9RbB7dupMX0aloSEfPVDqWlkT/4c39q1BPftJ+3Bh4ptM7hrNym33Ap+PwlRNqrFOYmPcRLrshDjMIiKsP2zTb+IiIiIyPGnVD/phkIhqlevDkBsbCxWq5W0tLS8+8nJyaxevbpMApSihaxWLAkJWKIiwW7HiIzCv2ZN3uhY5NChuKd/T+jgwbCfmT3xQyIuvBAjKoqMF1/CUqsm/rXrCO7ZA4EAMbfcQigUwoiMpObCn4m85hpwOvPq50yahK1BQ7LGvwWh8KYG+BYuIrh3L8HUVAyLhcBP8/GMG4t37GuYU78lzmUl3mVgt1tL9gEVwuGwERHhIDLSgctlxzCMo36miIiIiEhplSohq1+/Pjt27Mh9gMVC/fr1Wbx4cd795cuXExMTUzYRSpH8ARPX+YMJud0QDGI4HJj/SoLsLVviXbSoZM/8808IBrE2aICZkYH7628IpaVhOBwE9+4Fvx9H69b41q/H/fkXxNwwkjqrV5H40USsSUkY1aphREYQ2LmD+JdepNqkj6n20YfEj3kGe/tTimw3Z9InhPbvx/R4cLRpjaNdO4zoGAyXC9/SJZibNhEbacPlsgOHEis7ERF2nM7i96aJjHAQHxOBLWiyb9Vedi/bhXt3FokJkURFaLqkiIiIiFSOUu2y2KNHD2bMmMEdd9wBwOWXX86YMWPYvn07pmmydOlSRowYUaaBFmXjxo089dRT/P7770RFRTF48GBuv/12HA7HEeuZpsk777zDJ598QkpKCq1ateKBBx7glFNOqZC4y4LPFyA6Khp7iyTMnBws1atja9o0777hdGJ6vSV+run1YrhcAHjmzyfm5pswnE5yvvqKyEGDsMTH4zr1VHZfdz3pjz+Bo3s34h5/jJrTp2HYbBAKkTj+TdzTvsM9fToYBvaTTqL6p58Q2LyZ9MeewLd0ab42g7t2YTgcWKKjyVm4CFeP7jhOaUf2J58SXLwXw+XC2aMH0Wf2IcoaIpiWSmD1GkzTxJnUgug6dfH4grh9QUKh/98cxDAMYiIdpO/KZP6kFWz/fRf8a++Q2NrRtB7YkpP6tSArx4vPFyzx5yUiIiIiUlqlSshuvPFGBgwYgN/vx263M2zYMHJycpg5cyYWi4Wbb76ZG264oaxjLSA9PZ1hw4bRuHFjXn/9dfbu3cuYMWPweDw8+uijR6z7zjvv8Nprr3H33XeTnJzMpEmTuOaaa/j2229p0KBBucdeVnKCEPf0f/AuWYLztC5YEhKwt2uHf8UKQmlpWGvVKtkDXS4scXGEUlMBMN1uDFcEwT17CPy5GstVV2OGQliiooi67NLc88cWLuLAwMFU++JzbE0aQyCAER1N5OBBRJx7DsG9e/H8OJ/0p57BUi2RapM+IvXmUXhmzf7/dh0OME1CHg/Ojh1IuelmvD/Oz5t+CZA94T2sdesSe/+9OE47jfRHHyO4bVtu9U4diR49mvgePUh3BwkGc0cKoyMd7Fq5h9kvLCBUyO5KGXuyWPTOb+z+cy9n3t2DjJBHuzCJiIiISIUp1bb3VcVbb73F+PHjmTdvHvHx8QBMnjyZJ554gnnz5lGriGTE6/XSrVs3hg4dyp133gmAz+ejf//+9OzZk8cff7zUMVXktveHxLgsWDPSsFWvjvfXXwntP0Dq6FuIvPRSoq8fyb6z+ob9rMhLLib6xhvZd+ZZua8vvYTIy4dgiY8n/cn/EDNqFGYwgK1ZM0yPh309eoLVStwjDxN19dX41qzGzMnB2akTgc2bCaWlYalVC2vduhAKYdjtmD4/mCEynnue7A8mQjBI/Esv4ji1E5bYWPadcy6h3XuOGGfcE4/jPKM3+87uD/+cqQYQc/ddRN14I2k5ARwOG6FsP5+PmlpoMna49pe2ps3gVmS5fYC2ypWqSf1Sqir1TamK1C+lMpXrtvf/dvDgQVauXMnKlSs5WILNI8rCTz/9RNeuXfOSMcjd5TEUCrFw4cIi6y1fvpysrCzOOeecvGsOh4O+ffvy008/lWfI5SLTE8IXEw82G84uXXD1OYPo60finjIFa+3aOE47LexnRQ0bRva/zo+LOP98vIsWY2vYkMDmLZh+H6bHS3DHDiyxsWAYJLz+Gs6ep5Px0ovYk5MJ/LWefWf358DFl2L6/Vhr1iRn8uccvOJK9vU5iwMXXkTm62OJueUW6qxdTdTNNxF5wflY69YlZdToYpMxgPQnngR/gMhBg/J/Fi++hHfePCIcFuwWCyv+tyasZAxgzfT1OJy2cl9PZhgGVquBxaINRUREREROdKWasgiwePFiXnjhBdauXZvveqtWrbj77rvp1q3bUQdXnE2bNnHRRRfluxYbG0uNGjXYtGnTEesBNP3XeiuAZs2aMXHiRDweD65/1lAdK3K8Idw+NzHRThxRUcTcew+25GSyv/yShJdeZP/5FxDav/+Iz4i58w4sNWuQ89X/ALA1bYKzS2d8y5fj/fVXglu2YK1Xj8DGTZjZ2WAYRN9wPY62bch89XXinnqSg8NH4Fu4CCM+nhpff0Vgwwb2dDwVMzMzX1v+VavIGvcG0SOvI+7++zHNEKHUVHwL/9mExGbD1e9snKedhhEVhZmdjXfJEjwzfoBAAEIhsj/8kKhhV5Pz+ef5np31+liqn3UWISxsmL857M/Qm+Vj06Jt1O1Yl5x/RsnKktNpw2G14opyEAqEsNgs+D0BfIEgHq8/39o3ERERETkxlCohmzVrFrfddhvVqlXjuuuuo3HjxgBs3ryZb7/9lpEjR/Lf//6Xvn3DnypXGhkZGcTGxha4HhcXR3p6+hHrORwOnP/arh1ykznTNElPTz+qhKwyz83KcftwGxAR4SBi0CAMh53QwYPU+G4qqbfchm/JkgJ1LAkJxNx5BxGDB3Hgkssws7IwIiJIePW/5Hw7haghl5H2yKM4OnXCWr06htWG99el2Dweoq+7lrSHHyH+2WdIu+e+vIQq4aUXCWzcRMqNNxe9/X0oRNZbb2N6PMQ99ijW6tWJefABzMxMoocPx/R68Pwwk+C2bVji4oh78AHin3iCrIkTyRr3BjlffkXcf57EWrdO7nlp//CvXElgyxaCtRoQ8ARK9Pkd3JxK/Y51sdkseSNlRztiZrEYRLoc5KS4+fXbVfz902Z82X4sVoN6p9Sh7aBW1G1dC7fXj89XsnjlxFNW/VKkrKlvSlWkfinHglIlZP/9739p0aIFkyZNIjo6Ot+9G2+8kcsvv7xCErKqyGIxSEiIquww/pG7Rby1Vi3MQIDqn31CcOdOsj+aRHDvXgynE2e304g47zx8y5axf+Bgglu3YmvahIRXX8X0+bAnJ+P97Tc8M34gYdxYPAsX4ezYAXtySwJbt2GrXy93N8fsHNxTp+a217gxrjN6s6dL17DOIsue+CGRVw7F+GejEEyT1Dvvwjvvx3ybeqQ/+R+cvXsR9+gjONq3J+X6GzAzMrAkJOZLyAACa9dgrduwdJ+aw0pE9P8n67GxEaV6ziFBf5AV36zh149X5LseCppsX7aL7ct2Ua9tbfo/3JuoKGcRTxHJ72j7pUh5Ud+Uqkj9UqqyUiVk27dv56677iqQjAFER0dz8cUX8/LLLx91cMWJjY0l87CpcJC7+2JcXNwR6/l8Prxeb75RsoyMDAzDOGLd4oRCJhkZOaWuX94cNesSdecdWEJBMAwC27eT/vQzBDZtxtn5VCKefQZn19PwrVqFrVEjvL/9SuptdxB11ZW4evUksG8fOTNmEH3FFWR/+RWBVauIvOwysj/+OC95irrqStwzfih2iuS/Zb/7HnH/eYKUm24m8Y1xhNLS8iVjAJgm3nk/sn/Zcqp//hnxTz8FDgemr+D0QjNkYnfZsblsJRolq9YkAX8gRGZ2NlarhdjYCDIy3ASDIWw2CzaLFafLRtb+bPyeAM4oBxEJEfi8fnyBYIFphxFOOxvmbiqQjB1u58o9zHj6R859tA8ZWR6O4b12pJwd3i9Fqgr1TamK1C+lMsXGRoQ1OluqhKxp06akpKQUef/gwYN50xjLU9OmTQusFcvMzGT//v0F1ocdXg9yp1i2bNky7/qmTZuoW7fuUa8fq8q7+AQCPnIAl8tOtMuGtV49Yu+9BwDT7889WNo0MTOzSHvoYXzLlxN7911EXXUlgR07CB04gPOUU/AuXozFZiWQno6tYUMyV63Ka8PZtStZb75Zorjc331Hwssv4jrzTHI+/4Lo4cNIXf57oWXNjAxSrrmWWgsXYAaDBHfuLFDG0aolvhwfLXo3Ye2MDWHF4Ixx0LR7Q9IzPPn+0g4GQ9htVlwOG6unr2f19+vJ3JuVd79akwRaD0imRe8mZLt9eL25CaDNZsFms/LbpCMnY4fsXLGHXav3Et8sAbfbH1YdOXEFg6Eq/XeNnLjUN6UqUr+UqqxUE2rvuecePvvsM2bPnl3g3qxZs5g8eTL33XffUQdXnJ49e7Jo0SIyMjLyrs2YMQOLxUL37t2LrNehQweio6P5/vvv8675/X5mzpxJz549yzXmqsLjCZCS4cVnc4LTCTYbluho/CtWkPnWO3gXLiRi0EBqL/2FiAEDwGYjuGUrRmQkRmwsB0dcSyjHjREVBVYL/CuBMaKjCKUVvYavMGZWFmYohL1FC7InfkjEgAFYEuKLLB/ctRvP7Nm5G4zk5B+RtJ98EtYmTfntk5W0OS8Zqz28bn7yucn4PIHcw6adNpzO3N9XOJ12bBh8fc8Mfvlgeb5kDHLXnc0f+wvf/2cekS4HDkduPYfdyob5m/DlhJ9crfp2HU5bqffaEREREZFjTKl+8vvoo49ISEjglltuoWbNmjRsmLtWZ9u2bezbt4/GjRvz4Ycf8uG/tk83DIM3SzhqUpwhQ4bw0UcfMWrUKG644Qb27t3L888/z5AhQ/KdQTZs2DB27drFrFmzAHA6ndxwww28/vrrJCYmkpSUxKeffkpaWhrXXnttmcZYlYVCJlk5frIAu91KdLQF1+mn4+xyGtisGA4HpteLf/162LQJ15l98P22jP3/nP3l++03Ym69hdD+/dgaNcL3yy8AmNnZGLExJYrFiIrCsFjAaiHw99+EUtOwNW2Kb9nyIutkf/gxCa/9t8D1mPvvI31XOq161SM6xsLQceewauYW1s78G0+Gt9BnNe3ekA6XtMbvD5IQH8mBTal4s3y4E1wkNIjj63tnkLI17YjvYeeKPfz46iJ63doVny+ABYPty3aV5GNgx4rd2F02LNmGdl0UEREROQGUKiFbv349AHXq1AFg5z9TxqxWK3Xq1MHr9eaVOcQwyv7Mpbi4OCZOnMh//vMfRo0aRVRUFBdffDF33HFHvnKhUIhgMJjv2siRIzFNk/fee4+UlBRatWrFhAkTaNCgQZnHeSzw+4OkproBiIx04AoGMAIBDLsdZ4/uYLWSM+MHsl59LW9Eyv3ddOKeeBz3ggVEXjGEnMmTAfAt/ZWIfmfj+W562O27+p1NcM/evHVnpseDEXHkBbiBbduwJCTkvbY2aEC1SR9ja1Cf4Nff4vtxHhluN5Zq1Wh72WV0uux8/pr9Nwsm/J53NllcvVjanJdMy77NMU2TlV+vYd3Mv3Gn5R423enytmTtz+bA3wWn6FrtFpr2aESLXk2IqhaJGTLJ2p9NwOPH6bRhGAYBb7BAvSMJBUKENMddRERE5IRRqoRs7ty5ZR1HqTVr1owPPvjgiGU++uijAtcMw+CGG27ghhtuKKfIjl05ObnrzMD7zzooCy6LQUTfs4g89xwC27YROnAAS1wclpgYnN17YK1fD3v7U/D//gfZH35EzZkzSH/8SUJHWGv4b1HDrga7Dfd334PViiUxgVBq2hHrGDYbZiB3vZar39kkvPYq7m++Zf/AZzEPO/Yg57PJ2Jo1o9n4N2k0fgC71qYQVS2KGi2qsf/vg4QCIea9toisfTkY/zqwuWXf5swf90uBtlud3ZzOV7XHne5m7cy/SduRAQZUa5xAtcYJRMY6CfhDRMSVbD2iM9qBxWrRph4iIiIiJwgtVpEjCgRyF8F6/tmpMDLSgqtuPaz/jI6aXi/WOrUJHjxI4lvjOXDBRQQ2bsS7+BfinnyC1FtuLbhb4mEiL70Ee3IypteL+/vvcZ11FqHMTPyHHTp+OHu7tpiZWdSYNhVby2SyJ35Ixn+eKvq9bNzIgcHnU+3rr4mpnsC6eZtYO3M9rc9ric1p4/QbumBi4opxsmvVXtbO3EBUtUj2bziY7zntL2lNm0EtmfvKQrYvzz8lcfuyXaz4eg1NuzfijNu60rJvM9bPK/qQ8sM179UET7avuI9MRERERI4TYSVku3bl/tBZt27dfK+Lc6i8HD8OjZ5ZLAZOpw2H3YU1FMCamAg2GzW+/470J54k9b77qPH558S//BJpDzwIHk+hz4u84nLinngc0+0h87XXwe8navjVZH88qdgzzKKvvRb/qlUE9+7BiIkh46mni43fzMkh7aYbqT57Ds0DBnF1Y1gzYwMznvoxb5piRJyL5LOa0e26TgR8QU46J4kN8zaRuS+bRp3r0+78Vnz7wExStxW+cYkZMtn48xaC3gB97+9JXN0Y0ncVPJ6hMG0Ht8IXLNk0RxERERE5dhlmGHOjWrZsiWEYrFixAofDkfe6OGuLGeE4HgWDIVJSsis7jErhdNqIdNqwBP0QCuGZMwdHx45YYmPJ/vQz3F/9j+DBg1giI3D26kXUsKuxVq+OGTJxf/016Y89TtQ1I4i5/Tb2nXEmoYMHi2zL0b0b1T54nz0dT6X6xx+S8823ZL/3fniBOhzU+HUZB/Z4mfHUj/iL2GLe5rLR78FeJDaKxxnlYMcfu4muGcW6mX/z57S/wmrqwpfPwbBY+Pa+GcWuJ+t8dXtOHpBEembhyWtRLBYDi8UCmIRCpjYDOc7ZbBYSEqJITc3WFs5SpahvSlWkfimVKTExKqxzyMJKyP73v/9hGAbnn38+hmHkvS7OBRdcEF60x5ETOSH7N7vdisNhxWaA1W7N3SDEMDCcTkyfj+CePblb5vv8ZI4dS86XXxF9803E3HQjqfc/iPufDUIKfXa7dlSf9DHpzzyD+7vp1F3zJ7tbtyl2zdkhUTdcD8Nu5qt7ZxV7aLTNYeX85/uzc9VuYmvHULdNbXzZPvxuP5l7s/lrzka2LNlOKFj4t1FcvVgufuVc0nZlMPuFBaTvzChQxhFlp/NV7Uk6symZWd6wD650Om3YrRacLjveLB8Y4Ixy4HX78QVD+HzhH4gtxw79cCFVlfqmVEXql1KZyjQhk/ApISucxWIQG+3AGvBjerwEtm7Ft2QJ/rVrcXTqRORFFxJYvwHv778TffkQsj/7jOz3PyCw8f/XX9maNSXq6quIvPxyMp57nuwJ72Ft2JBaP89nV6Mm4QViGFRftJifPtvIpoXbwqrS+LQGnHlndzL2ZrHm+/W50w+N3AOhT+rXAqvDysJ3fmPzosKfd9F/zyWqVjROp429f+3nr9kbyUnzYHPaaNSpHs17NsbvC5Dt8Yc1umUYBtGRDvzZflZ+s4b18zbhy84d5YuId9Gyb3PaDGwJNoOsHF94n0shHA4rdqsVQiamARjg8QY0AlfJ9MOFVFXqm1IVqV9KZQo3IdOmHlIhQiGTtH/OAHO5InG1aEFk8+YYmITSM/D98Qc4nERffRV+rw/7JZdR86qrCOzaRSgjE0tsDLa6dQn5fJjBELaGDYm+4QYs1RIxbDaw28Ff/AHMztNPx4yKYcuSHWHHvnXpDrzZPpZ88Dvblu3Mu77j992s+HoNzbo3ovetXXFE2PlrzsYC9XNSPbhqRJKSmkNMwzg6j+iIxcjd6yRkQHqmJ+xRMcOAmEgHu1buYfYLC/K27z/Enebh9y/+ZPX0vzj3sT7E1o8tcVLmdNpw2W0EfUHWzdhA1v5sLDYLddvWplGnenjdfnK84SWPIiIiInJkpUrIXnnlFX788Ue+/fbbQu+ff/75nHXWWYwePfqogpPjk8fj59AqKZvNii2+OkZCDUzTJDvdk/eDvuHxYI+rjhGfe8+f5sE0zdzpkEOuwBYMYhoGIbcH5+k98M6dV2zbtuQk9q7dXyCRORIzZLJ79T4SGsblS8hyb8LGBVvJSXFzzqNnkLo9jX3r8699s7tsmCaYpom7iPVqhxwalbJaDAyLQSgYImiC558EKMLlIG17OrOf/7nIaZIAvmw/3z02l4tfHYAr0o7HU3yyChDhsmO3WPjxtcVs+WU75r+Srj+n/UVkYgQdh7SlRe8mZGaHP71SRERERApX/BhaIX744Qd69uxZ5P1evXoxfXr4hwLLiSt3S30/brcPz2FT9kzTxOcL4vUG8PmCeWdz+f1Bst0BMn0mWd4Q7iBEXz8yrPYMZ+75YCUV9AWxOaxF3t+9Zh9rZmyg7eBW+a7bI+zUaF6NQCB3Qw/DAKvVgtVqybcO02azEhfjwmFYWD1lHTOfmc/0x+bw89glpP6dQkJ8JJEuO06HlaUf/XHEZOwQv9vP8skrsYcxVA7/rEmzWPj67u/ZvGhbvmTskJwUNz+/sYQVX68hJspJOZz3LiIiInJCKdUI2e7du2nYsGGR9+vXrx/21vgiR8vjDZDYtSvOHt3xLlh4xLKh1FRiaseUuI2oapHs/7voXR8B1sxYz6VjBxKZEEFOqhuApDOaEPAHMQyDqAgHrkgHQV8A0wS704Ynx0fIAJfDxuIPlrP2+/UFkq1Ni7YRWzuagU/3xe0OsGvV3rDj3vjzVrqNPBWbzVLs3HmX3cb81xaHtUX/sk9X0rBDXSLqRIc9+iYiIiIiBZVqhCwyMpKdO3cWeX/Hjh04nc5SByVSEqGQSWaOn8QP3sfZo/sRy9qaN6d6Uk1iakaF/fyo6pHUObkmW38tus8DZOzJ4sCmFOq1rQ3kbrDR4bI2YEBUhIOQJ4Df7ccMmeSkuPnj69WsnbEeS8AkfXcmmxdto0nXhrQ9vxVtz29Fs9MbYXNa8579909b2LlyT9hxAwR8QQ5uTsVmK3p0D3KnSgb9QTb/sj3sZ6/4Zg2OYp4rIiIiIkdWqhGyzp07M3nyZC6//HJq1aqV797u3buZPHkyXbp0KZMARcLh9QYAG9UmfYxn4SKy334H708/QSiEERVFxIUXEH3D9Vhq18Hr8XPyucn88sHysJ59Uv8WbF++i6z9xe+e6Un34oiyE1UtkvP+cxb2SDsWw+DAphTWfL+BA5tTMEMm8XVjaXl2c+q1rc2f360joX48Q94YROaBbFK3pgMm8Wc05fQbu7B+3ib++N9qDMModpv+wgR9xR80bbda+Wvm34VOUyzKliU76H2bEdbom4iIiIgUrlQJ2W233cYll1zCgAEDuPjii2nevDkAGzZs4KuvvsI0TW677bYyDVSkOF5vAL8/iKvDqSS82xlrhAvT58dw2PFnZuPBgifLj81mofV5yexYsZsdv+8+4jPrta1Nm4Gt+O6x2WHFYI+w06xHI7pe05GQaWIGQkx/Zn6BaYap29LZ/Mt24hvE0f/BXuxZu5+UbWnsXLGHXyetyCtXq2V12p1/Ehe+eA4bF24lqlpkiT+XqOqRFHe6hRkyw0o4/y0UCOHJ8GLYw1tI5nBYsVusWK0GhmEQDIYIYuLxBIqNT0REROR4VaqErGnTpkyaNImnnnqKDz74IN+9U089lYceeohmzZqVRXwiJRIKmeR4AuQAlpwAhgGhkPefH/hzR3ECgRDZbh/9H+rN4veWsW72xgKjSFa7haQ+zeg6ogM/j1/C3nUHim3bEeWgVsvqeP0Bcjw+Ipx2vn1wFgc3pxZZJ217OlMemsX5z/dn8+JttDy7Ocsmr8rbBXLvugPMHPMTnS5vS6t+LXBEOXDFOvH8c4RAcRIbxxNbO4bUtGKSrX8O8C4pq91CkCMnU3a7lUiXnaA3yJ9T17F37X6CgSDRNaI4qX8StZKrk5Pjw621aCIiInICKvU5ZC1btuTjjz8mJSWFHTtyz3SqX78+iYmJZRacyNE40jlZ3n8OOO58dXtOHXoKf83ZSMq2NDAhoUEcSWc2xWqzsuKbNWyYtzms9pLOaILPFyA7x0d0pIOV3647YjJ2SE6Km18/+oP2l7bGl+2nyWkN2Lhga74yv326kvgGcdRsXo1WZzfn9y9XhxVTm4Et8Xj8FDcAZRq5o4Erv10b1nMBomtE4Ypx4k7LKbKMw2ElOtLJond/Y22BKZH7+Xv+ltxRwod6ExXjINtd+oOsRURERI5FpdrU498SExNp27Ytbdu2VTImxxS/P4jHnztdLjLBRfOejWneqzGuWCezn/+ZP776kyanNcTmKv73FpGJEXS4rA3+YAiLxcDpsrNmxvqwY9m0aCuuGCfpuzJIaBhfaJkVX6/BFeukw6VtqH1SjWKf2bR7Q1r0aoLXl7vuzDAMbDYrdru1wKnxXm+A+u3rlGhK5EnntMDjLvqAaIvFIDrSybz/LmLNjA1Frk9L257O1/d8TyDbT4TLHnb7IiIiIseDUo+QBYNBFixYwPbt20lPTy+wBsQwDEaNGnXUAYqUJ683gC3CQY0W1Zn2yOx866j2rN1P3Ta1OffRM/jhmfl4swofvYmuEcV5T52FaTHwuv04nTZStqWTfaDokaPDBf0htv22k4QGcUWed7Z/w0HSdmUSmeBiwBNnsfDtX9nw4yaCh52rZo+wc9I5LTj1inZk5XixWAxcDgeuCDveLB+hYAhntItgIIg/FMo7/83j9nPq0Hb8+NriYuONqh7Jyeckk+Mrepqhy2lj+x+7C4z2Fcab6WP+64vp/8gZmrooIiIiJ5RSJWSrVq3i1ltvZc+ePUUuxldCJseKbLePyBg7Q8YPZtPCraz+7i9StuXudLhs8kp639aNoRMu5K/Zf7N6xgbSd2ZgWAyqNU7g5POSad6jER6vP2+6nWEYeLPCW+P1b55ML45oxxHrpm1Pp1qTeLKyvJx2TQe6XtOBdbM3krYjA8OA6s0TadGrCQF/iIwsDw67DbvVwurp61kzYz1Z+3ITTovNQtPuDWl3wUnE1okhK8eH2+unaY9G5KS5WfrhH0XGEFU9koFP98UfCuH3F72Do8NuY1UJpkDuWrUXd7oHp8v2z66ZIiIiIse/UiVkTzzxBB6Ph3HjxtGpUydiY2PLOi6RCpXj9uP1BanbsQ5NuzXM2+AiFAjh9flx+/w07d2Ek85JwvLPdL9gIIjHEyA900Mw+P+jVKZp4oh0lDgGR5SD2JrRbFm6o8gyhgUC/hBebwCvN4DdbqVZn6YY/0wHNC2Qme0lEAgRGWEnkOXj64dmFRitCwVC/D1/C3/P30Lnq9vT+rxkMrI8ZGZ7OXlAMg3a12XFN2vYtHBb3gYjNVokctqIjtRolojVYQUM7FYL/mAIjzf/1EWbzUIoECrRIdYAG+ZuotV5yZQ8nRURERE5NpUqIfvrr7+444476NOnT1nHI1JpgsEQOe4QOW4/hpGbVMTHR+HJDBAIhPCSO5pmsRiYJkWODvv9Qao1jicyIYKcVHdYbVusBo071yd1Rzqp29KLLJfYOAHvv6YJ+v3BQkep7PbcLea/fmh6sVMnl374O5HxLhp0qU+220dGlgdXzUh63NiZXqO74s3yYnfZsDlt7F6zj7kvLyRlaxoA8fXjaD0wmXptaufbKdEwDHzZJd+gw53hpdgdSERERESOI6VKyGrXrq1zg+S4lptwFX7vSLs3HrrvdftpeXZzlk9eFVZ7jbs0wOa0sWRi0YdVV2+WSFzdGFKPsKvhIQ6bldXT/wp7Hduvn6ygRe8muP8Z6XK7/bgBq9VChMtOwBdkSiFb+GfsyWLbbzuJbxDHgMf7EBlhJ8edu6ujzVnyv17sLlsxm+iLiIiIHF9KtcviyJEj+fzzz8nKyirreESOC95AkFMuPIn4esVP53XFOOl6TUe2L9/J9uVFH1R9ykUn/3OI8pGfZ7EYuCLsrJmxIex4sw/ksOOP3bic+Xc5tFotWEz45t4fij1P7Zv7fsASAqfTRjAYxBnlILFRfNgxADTp2gAzvHOmRURERI4LpRohy87OJioqir59+zJgwABq166N1Zp/ZzjDMBg+fHhZxChyzPH7g3itFgaNOZvpj8/lwMaUQstF14hiwON9yDqQzaznfy7yeadcdDINO9UjI8tTbNtWqwV3hjffjpHh2LlyD9WSquW75rBaWPbZSjL3/v8vX6wOK027N6RaowSsDiveLB9bl+5g/98H+fWjP+g8vANeM4DH4+fkAcn8/MaSsNpPbBRPtSaJxR9iLSIiInIcKVVC9txzz+X9/8cff1xoGSVkcqJze/y4XDYueKE/u9fs58+pazmwORUzZBJXJ4aTByTTuHN9goEQqTvTqdGsGvv/PpjvGdWbJnLKxbnJWFaOt9jpkocc2oijJIL+EP8enLJaLTicNv6aswkAm8tGpyFtST6rGTkpbnau2kPAEyCmZhTn/edM0ndlsuLbtVhtFmw2C15/gOQ+TVn7w4YiE9JDLFaD7tefisft0xIyEREROaGUKiGbM2dOWcchclzyeAJ4vUHimsRxxh3dsTttGBYDvzeAzx8gLT0H04SaJ9dk8Jh6ZOzJ4uCWVDBNEhsnEFc3Bo8nQEaWJ+xkzDRNXLFOLFaDUDD87CamRhSm8f8pmd1uZe9f+/Fl+3DGOBjw+JkEvAFmPjOf3Wv25atrj7DRondTTr+hM5l7snBUc+F2+8nx+DnvP2cx/fE57Ft/8PAmAbA5rJx5z+lUa5pAZo72VxQREZETS6kSsnr16pV1HCLHLdM8tEmGH4pYdpnj9uP2+HHEOajToQ6Qu+tjalpOiUeMAoEQZsikcZcGbFq0Law6FqtB0plN8QX/f8dGwzDwZPowLAb9HuhN1oFsZr+woNDRN787wLpZf2OPsNHhkjbYnFaio10E/EEC/iCDx/Rj56q9rJqylr1r9xP0B4muGU3Ls5rRql8LTCAzx6vRMRERETnhlCohE5GyZ5qU2YHIvmCQdhecFHZC1rhLA6x2K76s/99S3zRNXDEOGp1aj+iaUXz3+Jwip0LWblWDs+7tid/t57dPVrB9+S783gARcS6a92pMq7NbUCu5OrXv7YndlfvXjhkycef4cPsDRzxguiowDHA67VgsuSOIoZCJ1+tXAikiIiJHLayErE+fPlgsFr7//nvsdjt9+vTBMI68FZphGMyePbtMghSRkvF4/CQ0iqfDkDYs/+zIW+/H1Yul1y2n4fHnTwb9/iC1WtbADMHaGesJ+gpPmuqcVJNzHj2DXz5YXmBnx+wDORzYmMKvH6+g56guND6tAQcPZh3xHLeqxGIxcLjsuJx2th/MZt3uDEwTmtWKpnmtGNwePz6PP+zppCIiIiKHCysh69y5M4ZhYLFY8r0WkarJNCEz20v7i04mKiGCZZ+tKnBItWExaHxaA3qNPg1fMFRgdC4YDOHzBqjbuhZzXlxQaDv2CDtnP9CLRROWsW7W30XGE/QFmffKIs6653TqnlKbLHfJD42uaFarhchoJ4v/PsAHP23mr90Z+e43qRHFVT2acObJtcnJ8hAoxUYqIiIiIoZ5LPya+hgSDIZISdG23ccDm81CQkIUqanZx+wP2xaLQaTTjjPCztbfdrJr5R6CgRAxNaJo2bc5VqcVjy9Q5FRJl8tOhMPGhEs/K/T+yecmkXRGU76+Z0ZY8bhinFz5wUWkZ7gJBqvuZ2qxGETFuPhk8Vbenlt0oglwaZeGjOqbRFaGu0JGyo6HfinHJ/VNqYrUL6UyJSZGYbUWf+xzideQud1u7rnnHs4++2wGDRpUquBEpGKEQiZZbh85Xj81T65BrZNqgAlYDHzBIL5M/xHr+/1BIg47LPrfTuqfxIpv1oQdjyfTy6ZFW6nboS45VXiUzOmy8/vW1GKTMYDPl2wjuU4sPZOq48mpuu9JREREqqbiU7bDREREsGjRIjye4g+oFZGqIRQyyXH7yfb4yfb6yXb78BWxJix/vRAWq0Fc3ZgC9xxRDhIbxbNlyfYSxbJp4baS/8VTwewOGx/8tCns8h8v3EyEy45mcouIiEhJlernoo4dO/L777+XdSwiUsWYJnjcfk4+N7nAPXtE7gC7L+fIo2yH82X78nYrrIocDhspWV5WbEsLu87m/dn8vTcT5xFGE0sag8tlx+Wy43BoM1wREZHjWakSskcffZRly5bxyiuvsGfPnrKOSUSqEK8/SMu+zYhMjMh33e/OTcScUY4SPc8Z5cCswrsSWq0GWw6UfB3oxr1ZR5VoGoZBRISdmPhIvBis2ZvF6r1ZuE2IjY8kIsKhzZRERESOQ6X61eugQYMIBoO8/fbbvP3221itVhyO/D+UGYbBsmXLyiRIEak8gUAQf8DKef85i6kPzsKdnjtd2Zft5+DmVBqf1oC/Zm8M+3nNejYmSNVNyAAMSp74HE2uZLUaRES5WLMrgw9+2sivm1Ly3e/QOIFhpzelXcN4vFV47Z2IiIiUXKkSsn79+uk3tSInkGy3j6h4Fxe/fh5/fPEnf83dhC/bx+rv13PyuclhJ2SuOCdNTmtAWnpOOUdcesGgSdOa0RgGJTr4Oal2bKl2WTSM3GRs6u87eWXGukLbXL4lleVbljGqbwsu6dywxG2IiIhI1VWqhGzMmDFlHYeIVHHZbh9Op432l7ehy7D2pGxPJ+QLktAglpMHJLH6u/VHfoABPUedhsftJxisuiNkPl+AuPhITm1SjaWbDoZVJ7lODI1qRJGeWvKpji6XnVU70opMxv5t3KwNNKkRzWnNq5e4HREREamaSpSQeb1e5syZw44dO0hISKBXr17UrFmzvGITkSrG6w3gBazeAM7qERiGgccXpOuIjljtVlZNWVfo+jB7hI3et3WjXtvaZGR7Kz7wEvL7Aozo1ZRfNx8Ma5Rs+OlN8Xj8JRpRO8TuzN3RMdy67/+0iS5KyERERI4bYSdkBw8eZMiQIezYsYNDZ0lHREQwbtw4unXrVm4BikjVEwyG8h3s7PcH6Hh5W9qdfxKrpq1j+7JdBLwBXLEuWpzRhOQzmuIPhMjI9nIsnEXvcftpWSeWu89txYvT1x4xWRp5RnO6tqhOdmbJjwI5tKPj8i2pYddZvSOd3WluqrlsBAJaTyYiInKsCzshe+ONN9i5cyfDhw/ntNNOY+vWrbzxxhs8+uijzJ49uzxjFJEqLhAIkZ7pweGw0faCk+h4WRssVgtBfwhfIEhmjpdAIFT8g6oI0zTJyfJwbru6NKkRzRdLtlEtxkGtuNydJvdneNiVmsOFpzakQ+MEcrK8pVo/ZrUa/L07s8T11u/OoHuzaiWuJyIiIlVP2AnZggULGDx4MPfdd1/eterVq3PXXXexadMmmjZtWi4Bisixw+cL4ANwV3YkRy8UMnFne2lVJ4b/XNKW9XsyWbsrHYC+bepwUr04vL4A7mxvvtHCkirNiOHhVaxWCw6HFcMwME0Tvz94TCXAIiIiJ7KwE7Ldu3fTsWPHfNc6duyIaZocPHhQCZmIHFdsNguR0S7mrdnLxJ83sXl//g07GiRGMrR7Y849pS7ZmV4CgWCJ2wiFTBrXiC5xvaY1own9X3t3Ht9Umfd9/Js0XeiSQikgtAgtQpFVVEAW5bagAnoLDDDCCDojsuiAiM6jqOjjguDtLYo34ohYvEeUbVgcxYq4FkQHN2RTFmltaUd22nRL0yTn+YNpHkKBpoVyUvp5v16+XubkOuf8kl60+eY613W8hsLCbAoJDVF4mE0//HpM+SUuRUfYdGXrOHk8hrzlbpWVuat9fAAAcOEEHMhcLpfCw8P9tlXce8zt5g8+gIuH1WpRZHSE0r7Yp7e+zDptm/3HSvTc+z9pz4FC3X9TiooKS6u9emRZmVvNG0WpQ0KsfsorCGiftpfEqFV8lMrKymWLCNXrn/2i9B/zVOj8/7+HI0JDdFOX5pqUepkiIsPkLGGuGQAAwapaqyzm5eVp586dvseFhSfmPmRnZ8tut1dq37Fjx3MsDwAuvPCIUH2998gZw9jJVn+7Xx1a2NUvpYk8NQg+zrJy3Xltkh5e9mNA7cf0aS1DklsW3b3ga+0/Wvmebs5yj/7xfa427Tms18f1UEyDMDm5oTQAAEHJYgQ4gaF9+/anvRm0YRiVtlds+/nnn89PlXWIx+PVsWPVvxcRgo/NZlWjRlE6fryY+Tj1TGyjSN2z6FvtDHDUKqlJlBbf01v5x4urvfS91WpRVEwDvblhn/628ewBcHSvVprUv61CrBZNWvSNduRWXV9CowZaPqWvCvJLarTwCBAofmciGNEvYaa4uCiFhFirbBfwCNns2bPPqSAAqAvCw206WOAMOIxJUtbhYv1ysFAJMeFyOsurdb4Ti4c4dVe/NmrTLEZvbczSLwf9V15MbhqtsX1bK7XDJTI8Hv1yuDSgMCZJecdLtWnPYV11aUOVBvmlixXf7dWBOyMAAHDeBBzIhg0bVpt1AEBQsFotyjlS/VHurMPFahkbUaNzut1eFTlK1Ss5TqkdminzUJH2HiiUIUOXNYvRZc1iVOosV5GjVOGR4Vr2dXa1jr9ic46uuSw+KANZSIhVoeE2RUSEKvTf3yK63B65ytxylbnPaQVLAADqgmrNIQOA+uA0V2dXyVqDfU7m9RpylrhUVupS8+gwJbSL920/+VLIUJu10oqPVck6XKTw0JBzK7AWRESGKTzcpvXbD2jVNzn69UixLJLaNIvRyB6XKrVjM5WWljP/DQBwUSOQAcBJPB5DlzWzy2Kp3qVz7Zvbz8tojmGo2pc9VuUcs2KtaBAVrkNFZZry6lc6WuQfuLbvz9f2/fn666cReuXO7oqNDAvK0T0AAM6HqmeZAUA94nK5ZW8Qqu5JjQPep2NCrFo0irwg9/wqd3vVpmn17l2W3DRaTlf175NWWyIiQlXk8mjSom8rhbGT/Zbv1IS0zSo3TsztAwDgYkQgA4BTuF1u3dUvOeBLF//UL1llZed3VOtMrIZXt/VqVa19ft+zlcpdwXO/yJDQEL36yV45Sqt+z44WufTGF/tkDcJLLgEAOB8IZABwCqfTpXbN7Xrolg5Vzg2bcmM7XZUUp7LzfJnhmbhcbrVpGq0uLRsG1L5lXKR6tY2X6wIFxqqEhobII+nznw4EvM+H2/6lUFuIbDb+ZAEALj78dQOAUxiGVFrk1E2dm+u1u3qod9t4v2BmsUg9khvrlTuv1u+ubqnSIucFu8eXYUhWi0Uv3H6lWsdHnbVtE3u45t15tUpLXUFzDzKbLUTf7Tuqck/g9ZSUebQjN182G6NkAICLDxflA8BpeL2GSgpLlRTXQM/+vqtKXR5lHzmx2mHLxpGKiQiV2+VWcaFTxgW+cZbValGI4dWiCddoUcY+vfdDnt/lf5FhIRrYtYUmXH+ZQnRi9cZgYbFIRTWYa1dc5q7R6pcAAAQ7AhkAnIFhSM7Scqm0XGFhIbqscaQkyev1qrCgxNTaXGVuWa0e3dk3SRP7t9W2nOPKL3YpOiJUV7RqpHK3R95yj5wXYKGR6jAMQ42jw6u9X1xUODeMBgBclAhkABAAl8sjKXhWKpT+XZPLo3JnudrFR8naNFqGYaikyCm3OzhvqOxyeXR1cpyiI2wqcgYWFuNjwtW+hV0F+eaGYAAAagNzyACgjvN4vHI6y1VS4lJpaXnQhjHpRK0ul0eDr2gR8D5Dr0pUaZk7aObBAQBwPhHIAAAXlKfco0mpbatclESSUprbNbZvkjxBtGw/AADnE4EMAHBBuVxuecrdWnh3T13ZOu6M7Xq1jddrd3VXmbNc5eXBdbkoAADnC3PIAAAXnLO0XOERhuaOvVJ5x0q1fHO2sg8Xy2KRkpvGaFSvVmoaE64yp0tlAc41AwCgLiKQAQBMUeZ0q8zpVnyDUP25f1uFhFglQ/J4vTLcHhbxAADUCwQyAICpnM7yqhsBAHCRYg4ZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmsZldwLn67LPPNHfuXGVlZalFixaaMGGChg8fftZ9cnNz1b9//0rbu3btqhUrVtRWqQAAmCY83KaQkBPfw3q9hsrKymUYJhcFAKjbgey7777T5MmTNWLECD366KP65z//qccee0xRUVEaOHBglfs/8MAD6tmzp+9xVFRUbZYLAMAFZbFYFNkgRA3CrFJhnpTzvWS4ZTTpoOgmHVTmdKnYacjrJZkBgFnqdCD761//qi5duujpp5+WJF1zzTXav3+//ud//iegQNaqVStdccUVtVwlAAAXntVqUcNoq6y5X8qS8ZSUs8n3nEWSmnZSeO//o/COtym/yCO322NarQBQn9XZOWQul0ubN2+uFLwGDx6sffv2KTc316TKAAAwl8WiE2FsS5osb9/kF8Z8Du2Q5d07pfUPqGFMiO9yRgDAhVVnf/vm5OSovLxcycnJftvbtGkjScrMzKzyGE8++aQuv/xy9erVSzNmzFB+fn5tlAoAwAXVICJU1gPfy/LRVFU1Uczy7avSj39TVDiXLQKAGersJYsFBQWSJLvd7re94nHF86cTFham0aNHq2/fvrLb7dq6datee+017dixQ3//+98VGhp6TrXZbHU25+IkFd8W860xggn9EoFoEGbIsnFWlWGsguWr/1bYlXcptNwlo4YrfdA3EYzol6gLgiqQFRYW6tChQ1W2a9my5Tmdp2nTpnryySd9j3v06KG2bdtq4sSJ+vjjjzV48OAaH9tqtahRIxYHuZjY7Q3MLgGohH6Jsyo+JO37KPD2x36RJfcbNby09zmfmr6JYES/RDALqkC2bt06zZgxo8p26enpio2NlXQixJ3M4XBIku/5QPXr10+RkZHauXPnOQUyr9eQw1FS4/0RPEJCrLLbG8jhKJXH4zW7HEAS/RJVCwuzKfLIHlmqOdJl/PaDypp2V2mpq0bnpW8iGNEvYSa7vUFAo7NBFchGjhypkSNHBtTW5XIpNDRUmZmZuvbaa33bK+aOnTq37EJyu/kHfzHxeLz8TBF06Jc4E5vNkKF/r6RYHRaLvF7jnPsVfRPBiH6JYFZnL6gNCwtTz5499dFH/pdkpKenq02bNkpMTKzW8T7//HOVlJSoc+fO57NMAAAuKI/HK0t8imSp3p94o/mV8nr5wAoAF1pQjZBV1z333KM77rhDTz75pAYNGqTNmzdr7dq1eumll/zadejQQUOHDtWsWbMkSc8995wsFouuuOIK2e12bdu2TQsWLFCnTp00YMAAM14KAADnRXm5R0ZklCxtB0l7Pghsp8btZGnRXc7jztotDgBQSZ0OZFdffbXmzZunuXPnauXKlWrRooVmzpypQYMG+bXzeDx+3/q1adNGS5cu1YoVK+R0OtWsWTONGDFC9913n2y2Ov2WAACgUpdVkdfOkGXvh5JR9aiX0Xe6ypzOGq+wCACoOYvBb9/zyuPx6tixYrPLwHlgs1nVqFGUjh8v5rpzBA36JQJhsUiNYqyybn9blg/uOevy98Y102T0n6X8Qrc8npp/JKBvIhjRL2GmuLiogBb1qLNzyAAAwOkZhpRfZMjbeayMOz+XklIrN2p+pYwRy2T0n6WCIs85hTEAQM1xfR4AABchr9fQ8UKPIuN7KOIPH8hSfEg6uE2G1y1LfHupUbKcznKVONzyegljAGAWAhkAABcpw5CKS90qLpXCwpooJGGAJIu8Xq9c+WVnu5IRAHCBEMgAAKgHXC632SUAAE6DOWQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmIZABAAAAgEkIZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmIZABAAAAgEkIZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmIZABAAAAgEkIZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmIZABAAAAgEkIZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmIZABAAAAgEkIZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGASm9kFAAAAAKhaSIhVVqtFhmHI7faaXQ7Okzo9QrZp0yY9+OCDGjBggFJSUvT0008HvG9hYaEeffRR9ejRQ926ddN9992nQ4cO1WK1AAAAQPVYLBY1aBCqmIZhio4NlSWiXBHRVjWMi1CDSJtCQur0x3mojo+Qbdy4Ubt27VL37t1VUFBQrX3vv/9+/fLLL3ryyScVHh6uuXPnavz48Vq1apVstjr9tgAAAOAiEBoaosiYUO05tkvv7lij7w58K69OjIy1bdhOt7YZoj4JfVVaXC6n021ytaipOp08HnroIU2fPl2StHnz5oD327Jli7788kulpaWpb9++kqSkpCQNHjxY69ev1+DBg2ulXgAAACAQNptVUTFhem3bfH2cvb7S83vz92jO9/+ttZnv6+neMxVu2FRWRiiri+r0GKfVWrPyN2zYILvdrj59+vi2JScn6/LLL9eGDRvOV3kAAABAjUREhWjxz387bRg72e7ju/TUP/+voqLDZLVaLlB1OJ/qdCCrqczMTCUlJcli8e+0ycnJyszMNKkqAAAA4MSlih65tXbfewG1/+noTu04skPh4XX64rd6q17+1BwOh2JiYiptj42N1Y4dO875+DZbvcy5F52KSbJMlkUwoV8iWNE3EYzqar8MjZDSsz6Q2wj8EsR/7Fujh7s/ovLyuvVaEWSBrLCwMKCVDlu2bKmwsLALUFH1Wa0WNWoUZXYZOI/s9gZmlwBUQr9EsKJvIhjVtX5Z6i7VjqPVGyTYeXSHwm3hCm8UXktVobYEVSBbt26dZsyYUWW79PR0tWnTpsbnsdvtOnDgQKXtBQUFio2NrfFxJcnrNeRwlJzTMRAcQkKsstsbyOEolcfDvT4QHOiXCFb0TQSjutovI6Ktcnlc1dqn3FMuScrPL5FhGLVRFqrJbm8Q0OhsUAWykSNHauTIkbV+nuTkZH399dcyDMNvHllWVpbatWt3zsfnRn0XF4/Hy88UQYd+iWBF30Qwqmv90uOV4hvEV2ufxg0ayzAMlZd7aqkq1JZ6eZHpddddp4KCAn399de+bVlZWfrpp5903XXXmVgZAAAA6r3yEN3UalC1dul/6Q0qdpbWUkGoTUE1QlZdeXl52r59uySptLRUOTk5WrdunSRp4MCBvnYdOnTQ0KFDNWvWLElSt27d1LdvXz366KN6+OGHFR4erpdeekkpKSm68cYbL/wLAQAAAP7N6XTr8saXKyE6QXlFeVW2t1ltGpx0szzOC1Aczrs6Hcg2b96sRx55xPd448aN2rhxoyRp9+7dvu0ej0der/8w9dy5czV79mw98cQTcrvd6tu3r2bMmCGbrU6/JQAAAKjjDMNQSWmZHu3xuB7a+KCKy4vP2NYqq6Zd+RfZFKpiFzeGrossBrP+ziuPx6tjx878jwZ1h81mVaNGUTp+vLhOXXeOixv9EsGKvolgVNf7ZWS0TQXuY3rphxe1+/iuSs9fEnmJJnSZpI5xnVXscLOYR5CJi4uqe4t6AAAAADihpMitmMhGmtX3OR0sOaBPcj6Ro6xAEbYIXdO8tzo27qhSZ5mKHeUii9VdBDIAAAAgSDlLPHKWeBQb0UTDk34vWU4kL4vHpvzjpfJ6SWJ1HYEMAAAACHJOZ/kpW059jLqqXi57DwAAAADBgEAGAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmIZABAAAAgEkIZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJLIZhGGYXcTExDENeL2/pxSIkxCqPx2t2GYAf+iWCFX0TwYh+CbNYrRZZLJYq2xHIAAAAAMAkXLIIAAAAACYhkAEAAACASQhkAAAAAGASAhkAAAAAmIRABgAAAAAmIZABAAAAgEkIZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACaxmV0AEIz27dunmTNnasuWLYqKitKQIUN0//33KywszOzSUE9lZ2crLS1NW7du1d69e5WcnKy1a9eaXRbquQ8//FDvvfeedu7cKYfDoVatWmns2LEaPny4LBaL2eWhnsrIyNDChQv1yy+/qKioSM2aNdOAAQM0efJkxcTEmF0eUAmBDDhFQUGB7rzzTrVu3Vrz5s3TwYMH9dxzz8npdOqJJ54wuzzUU3v37lVGRoa6du0qr9crwzDMLgnQ//7v/yohIUHTp09Xo0aN9NVXX+nxxx/XgQMHNHnyZLPLQz2Vn5+vLl26aOzYsWrYsKH27t2refPmae/evVq0aJHZ5QGVWAz+qgN+FixYoNdee02ff/65GjZsKElavny5nnrqKX3++edq1qyZuQWiXvJ6vbJaT1xlPn36dO3YsYMRMpju2LFjiouL89v2+OOPKz09Xd9++62vzwJmW7FihR5//HFt2LCBv+MIOvymBE6xYcMG9erVyxfGJGnQoEHyer3atGmTeYWhXuODLYLRqWFMki6//HIVFRWppKTEhIqA06v4m15eXm5uIcBp8BceOEVmZqaSk5P9ttntdjVp0kSZmZkmVQUAdcP333+vZs2aKTo62uxSUM95PB6VlZVp586dmj9/vlJTU5WYmGh2WUAlzCEDTuFwOGS32yttj42NVUFBgQkVAUDd8N133yk9PV0PP/yw2aUAuv7663Xw4EFJ0rXXXqs5c+aYXBFweoyQAQCAc3bgwAFNmzZNPXv21B133GF2OYBef/11LVu2TDNnzlRmZqYmTZokj8djdllAJYyQAaew2+0qLCystL2goECxsbEmVAQAwc3hcGj8+PFq2LCh5s2bx5xHBIX27dtLkrp166bOnTtryJAh+vjjjzVw4ECTKwP8EciAUyQnJ1eaK1ZYWKjDhw9XmlsGAPWd0+nUxIkTVVhYqOXLl3OfJwSllJQUhYaGKicnx+xSgEr4Cgs4xXXXXaevvvpKDofDt23dunWyWq3q06ePiZUBQHBxu926//77lZmZqTfeeIPlxBG0tm7dqvLychb1QFBihAw4xahRo7R48WL9+c9/1sSJE3Xw4EE9//zzGjVqFB82YJrS0lJlZGRIkvLy8lRUVKR169ZJknr06HHa5ceB2lZxf8bp06erqKhIP/74o++5Dh06KCwszLziUG9NnjxZnTp1UkpKiiIiIrRr1y6lpaUpJSVFAwYMMLs8oBJuDA2cxr59+/TMM89oy5YtioqK0pAhQzRt2jQ+XMA0ubm56t+//2mfe+utt9SzZ88LXBEgpaamKi8v77TPffrpp4xGwBSvv/660tPTlZOTI8MwlJCQoBtuuEHjxo3jdgwISgQyAAAAADAJc8gAAAAAwCQEMgAAAAAwCYEMAAAAAExCIAMAAAAAkxDIAAAAAMAkBDIAAAAAMAk3hgYAAABQ52VnZystLU1bt27V3r17lZycrLVr11b7OMeOHdOrr76qrVu36ueff1ZoaKi2bNly1n127NihkSNHKiIiosq2p2KEDABQpenTpys1NbXWjr969WqlpKQoNze31s6Rm5urlJQUrV69utbOAQAwz969e5WRkaFWrVqpTZs2NT7OwYMHlZ6ersaNG6tTp05VtjcMQ88884zi4uJqdD5GyADgIrd69Wo98sgjvsdhYWFq0aKF+vTpo3vvvVfx8fEmVhe8jhw5orS0NH3++ef67bffZLFYlJycrAEDBmjMmDGy2+1ml1inZWRkaNu2bZoyZUpA7bdt26bVq1dr27Zt2r17t9xut3bv3l3LVQKoS1JTUzVgwABJJ75I3LFjR42Ok5KSoq+++kqSNG/evCp/16xatUrHjx/X8OHDtXjx4mqfj0AGAPXEfffdp8TERLlcLn3//fdaunSpMjIytHbtWjVo0OCs+z7zzDMyDKPWahsyZIhuvvlmhYWF1do5qmPbtm2aMGGCSkpKdOutt6pjx46STlySsnDhQn333XdatGiRyVXWbRkZGXrnnXcCDmQZGRlauXKl2rVrp8TERP3666+1WyCAOsdqrfriP8MwtGjRIq1YsUJ5eXlq1qyZxo4dqz/+8Y/VOk4Fh8OhOXPmaNasWTUOgAQyAKgnrrvuOnXu3FmSNHLkSDVs2FBvvvmmPv30U91yyy2n3aekpESRkZEKDQ2t1dpCQkIUEhJSq+cIlMPh0OTJkxUSEqI1a9ZUuuxl2rRpWrFihUnV1V+jR4/W+PHjFRERoaeffppABqBGnn32Wf3973/XpEmT1LVrV/3www964YUXFB4ertGjR1f7eHPnzlXHjh11/fXX1ziQMYcMAOqpa665RpJ887amT5+ubt26KScnR+PHj1e3bt30l7/8xffcyXPIKuZjpaWlafny5RowYIA6deqk4cOHa9u2bZXOtW/fPk2dOlXXXHONunTpoptuukkvvfSS7/nTzSFLTU3VxIkT9eWXX2rIkCHq3LmzBg8erPXr1/sdOz8/X//1X/+l//zP/1S3bt105ZVX6u6779auXbtq9L4sW7ZMBw8e1PTp0087ByE+Pl733nuv37Z33nlHN998szp16qS+ffvqqaeeksPh8GszduxY3XLLLdq1a5fGjBmjrl276oYbbtC6deskSd98841Gjhzpe38qLpepMG/ePKWkpPjeyyuvvFI9e/bUzJkzVVZW5tfW7XZr/vz5vp9LamqqXnzxRblcLr92Fe/xd999pxEjRqhz587q37+/3n333Uqv2+Fw6Nlnn1W/fv3UqVMn3XDDDXr99dfl9Xp9bQLtF9OnT9c777wj6cSlQRX/nU18fLwiIiLO2gYAziYnJ0dvv/22Hn30Ud1zzz3q3bu3Jk+erD/+8Y+aP3++3++zQPz8889auXKl37SAmmCEDADqqZycHElSw4YNfdvcbrfGjRunq666Sg8//HCVH4DXrl2r4uJi3XbbbbJYLHrjjTc0ZcoUffLJJ75RtV27dun222+XzWbTbbfdpoSEBOXk5Oizzz7TtGnTznr8X3/9VdOmTdOoUaM0bNgwrVq1SlOnTtUbb7yhPn36SJL279+vTz75RAMHDlRiYqKOHDmi5cuXa8yYMfrggw/UrFmzar0vn332mSIiInTTTTcF1H7evHl65ZVX1Lt3b40ePVpZWVlaunSptm/frqVLl/qNLhYUFGjSpEkaPHiwBg4cqKVLl+qBBx6Q1+vVrFmzNGrUKN1yyy1KS0vTfffdpy+++ELR0dF+57v//vuVkJCgBx98UD/++KMWL14sh8Oh559/3tdmxowZWrNmjW666Sb96U9/0rZt27RgwQLt27dP8+fP9ztedna2pk6dqhEjRvje4+nTp6tjx45q27atJKm0tFRjxozRwYMHNWrUKDVv3lxbtmzRiy++qMOHD+uxxx7zO2ZV/eK2227ToUOHtGnTJr+6AaA2VXzRdeONN8rtdvu29+7dWwsXLtRvv/2mhISEgI5lGIaeeuop/eEPfzinBUQkAhkA1BtFRUU6duyYXC6XfvjhB82fP18RERG6/vrrfW1cLpcGDhyoBx98MKBj/utf/9L69esVGxsrSUpKStK9996rL7/80nfcmTNnyjAMrVmzRi1atPDtWzH6dja//vqr5s2bpxtvvFGSNGLECA0cOFAvvPCCL5ClpKToo48+8rvmf8iQIRo0aJBWrlypP//5zwG9lgqZmZlq3bp1QPPZjh07pgULFqhv375auHChr4bk5GQ9/fTTeu+99zR8+HBf+0OHDmnOnDm+S0R79+6tQYMG6cEHH9SyZcvUtWtXSVKbNm00btw4rV+/Xr/73e/8zpmYmKi//vWvkqTbb79d0dHRWrJkie666y61b99eu3bt0po1azRy5EjNnDnT1y4uLk6LFi3SP//5T9/oqCRlZWXpnXfe0dVXXy1JGjRokPr166fVq1fr4YcfliS9+eab2r9/v9asWaPWrVtLkkaNGqWmTZsqLS1Nd911l5o3b+47ZlX9olu3bmrdurU2bdqkIUOGBPiTAYBzc/z4cRmG4fc78GTVCWTp6enKzMzUnDlzfFdEVFyt4HA4FB4ervDw8ICORSADgHri5AnLkpSQkKAXXnih0ghSda6hHzx4sO9DtyTfh/r9+/dLOhFYvv32W91xxx1+YUySLBZLlcdv2rSpbrjhBt/j6OhoDR06VAsXLtThw4fVpEkTv+Dk8XjkcDgUGRmppKQk/fTTTwG/lgpFRUWKiooKqO1XX32l8vJy3XHHHX6BcOTIkXrxxReVkZHhF8giIyN18803+x4nJyfLbrerWbNmvjAmyff/Fe/jyW6//Xa/x2PGjNGSJUu0YcMGtW/fXhkZGZKkP/3pT37t7rrrLi1atEgZGRl+H0Yuu+wy389NkuLi4pSUlOR37nXr1umqq66S3W7XsWPHfNt79+6t119/Xd9++61uvfVW3/aq+gUAmCE2NlYWi0VLliw57dzopKSkgI+VmZmpgoKC094Spnv37ho/fnxAXzxKBDIAqDeeeOIJJSUlKSQkRPHx8UpKSqq0kpTNZtMll1wS8DFPHhWR5PsQXvFtYcUH8Hbt2tWo5latWlUKbhUjNHl5eWrSpIm8Xq/eeustLVmyRLm5ufJ4PL62J1+OGajo6GgVFxcH1PZf//qXpBPB6mRhYWFq2bKl8vLy/LZfcskllV5PTExMpfc8JiZGkirNQ5NOvCcnu/TSS2W1Wn3z7/Ly8mS1WnXppZf6tWvSpInsdnulmk79GUonfo4FBQW+x9nZ2dq9e7d69epVqa0kv5B2umOe2i8AwAwVv8Py8/PP+d6aw4YNU48ePfy2rVmzRunp6Vq4cGGlLyHPhkAGAPVEly5dfKssnklYWFi1lvs908qItblE/qlee+01vfzyyxo+fLimTp2q2NhYWa1WzZo1q0Z1JCcn6+eff5bL5Trvy/Cf6f06l/fxTCONgYxAnu3cJ/N6verTp4/uvvvu0z5fEZKrOuaF7BcA6p/S0lLfVQJ5eXkqKiryLZzUo0cPJSUl6fbbb9dDDz2kcePGqWvXriovL9evv/6qzZs369VXX/Udq2K/X375RR6Px/e4c+fOSkhIUGJiohITE/3O/8033ygkJEQ9e/asVt0EMgBArWnZsqUkac+ePTXaPzs7W4Zh+IWLiuXOK67z/+ijj9SzZ0/NmjXLb1+Hw6FGjRpV+5zXX3+9tmzZovXr15/xdgAVKr4BzczM9L1W6cRcvNzcXPXu3bva569Kdna237mys7Pl9Xp9HwwSEhLk9XqVnZ3tN9H8yJEjcjgcAc+PONmll16qkpKS8/p6Ag2MABCoo0ePaurUqX7bKh6/9dZb6tmzp2bMmKGkpCQtX75c8+fPV1RUlJKSkjRw4MDT7nfq49mzZ1ea23uuWPYeAFBr4uLi1L17d61atcp3eV+FQEZLDh06pI8//tj3uKioSO+++64uv/xyNWnSRNKJ0ZhTj/Xhhx/q4MGDNap51KhRatKkiZ577jllZWVVev7o0aO+b1F79+6t0NBQLV682K+GlStXqrCwUP369atRDWdTsVx8hbffflvSifvMSfKd829/+5tfuzfffNPv+eoYNGiQtmzZoo0bN1Z6zuFw+K1WFqiKm5FzGSOA8yUxMVG7d+8+7X8Vo1YWi0VjxozR+++/rx07dmjz5s1atmxZpXnWZzrO2cLYlClTtGXLlmrXzQgZAKBWzZgxQ6NHj9awYcN02223KTExUXl5efriiy/0j3/846z7tm7dWo899pi2b9+uxo0ba9WqVTp69Khmz57ta/Mf//Efmj9/vh555BF169ZNe/bs0fvvv+83ilQdsbGxmj9/viZMmKChQ4fq1ltvVceOHSVJP/30k9auXatu3bpJOhE4J06cqFdeeUV33323UlNTlZWVpSVLlqhz585+C12cL7m5uZo0aZKuvfZa/fjjj3rvvfd0yy23qH379pKk9u3ba9iwYVq+fLkcDoe6d++u7du3a82aNRowYMAZVxc7m3Hjxumzzz7TpEmTNGzYMHXs2FGlpaXas2ePPvroI3366aeKi4ur1jEr3tOZM2eqb9++CgkJ8Vvw5FR5eXm+/lJx89WKYNyiRQsNHTq02q8LAIIBgQwAUKvat2+vFStW6OWXX9bSpUtVVlamFi1aaNCgQVXu27p1az3++ON6/vnnlZWVpcTERL300ku69tprfW0mTZqk0tJSvf/++0pPT1eHDh20YMECzZkzp8Y1d+3aVe+//77S0tJ8wdFqtSo5OVkTJkzQmDFjfG2nTJmiuLg4vf3225o9e7ZiY2P1+9//Xg888MBpV/E6V3PnztXLL7+sOXPmyGazacyYMXrooYf82sycOVOJiYlas2aNPvnkE8XHx2vixImaPHlyjc7ZoEEDLV68WAsWLNC6dev07rvvKjo6Wq1bt9aUKVN8i5BUx4033qixY8fqgw8+0HvvvSfDMM4ayHJzc/Xyyy/7bat43KNHDwIZgDrLYjDDFgAQhFJTU9W2bVstWLDA7FKCQsUNqL/++utqj0YBAIIXc8gAAAAAwCQEMgAAAAAwCYEMAAAAAEzCHDIAAAAAMAkjZAAAAABgEgIZAAAAAJiEQAYAAAAAJiGQAQAAAIBJCGQAAAAAYBICGQAAAACYhEAGAAAAACYhkAEAAACASQhkAAAAAGCS/wcW/75S5eYsdAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "outputId": "32bbf403-0044-473a-8f50-feaf2caf2ac8",
        "id": "SOgsQZS0lc9G"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "..                                           ...                          ...   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  k-means++ 5  \n",
              "0              0            0            0  \n",
              "1              0            0            0  \n",
              "2              0            3            3  \n",
              "3              2            3            3  \n",
              "4              2            3            3  \n",
              "..           ...          ...          ...  \n",
              "114            0            3            3  \n",
              "115            0            0            0  \n",
              "116            0            0            0  \n",
              "117            0            0            0  \n",
              "118            1            2            2  \n",
              "\n",
              "[119 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-870d0585-e4c5-4db8-b8ac-fd58f590a98d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "      <th>k-means++ 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-870d0585-e4c5-4db8-b8ac-fd58f590a98d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-870d0585-e4c5-4db8-b8ac-fd58f590a98d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-870d0585-e4c5-4db8-b8ac-fd58f590a98d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0f7eac3b-7634-4058-8178-63f9060c1275\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f7eac3b-7634-4058-8178-63f9060c1275')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0f7eac3b-7634-4058-8178-63f9060c1275 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['k-means++ 5'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cfa8e1db-dc57-4731-f438-7e9abc5aa586",
        "id": "LF5ydPVNlc9H"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    85\n",
              "3    22\n",
              "1     5\n",
              "4     4\n",
              "2     3\n",
              "Name: k-means++ 5, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0 = df.loc[df['k-means++ 5']==0]\n",
        "all1 = df.loc[df['k-means++ 5']==1]\n",
        "all2 = df.loc[df['k-means++ 5']==2]\n"
      ],
      "metadata": {
        "id": "OwSpd9PMlc9H"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "outputId": "6d21a70d-c0be-4e96-8830-1055f6447de9",
        "id": "TLSgpZ5zlc9H"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          provinsi               kota  \\\n",
              "0           Banten         Kab. Lebak   \n",
              "1           Banten    Kab. Pandeglang   \n",
              "5           Banten        Kota Serang   \n",
              "8    DI Yogyakarta        Kab. Bantul   \n",
              "9    DI Yogyakarta  Kab. Gunung Kidul   \n",
              "..             ...                ...   \n",
              "111     Jawa Timur        Kota Blitar   \n",
              "113     Jawa Timur        Kota Madiun   \n",
              "115     Jawa Timur     Kota Mojokerto   \n",
              "116     Jawa Timur      Kota Pasuruan   \n",
              "117     Jawa Timur   Kota Probolinggo   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "0                                     94.299500    1.979186e+13   \n",
              "1                                     92.035400    1.880812e+13   \n",
              "5                                    100.000000    2.154588e+13   \n",
              "8                                    100.000000    1.825054e+13   \n",
              "9                                     99.768533    1.303754e+13   \n",
              "..                                          ...             ...   \n",
              "111                                  100.000000    4.573370e+12   \n",
              "113                                  100.000000    1.002101e+13   \n",
              "115                                  100.000000    4.694168e+12   \n",
              "116                                   99.019600    5.611072e+12   \n",
              "117                                  100.000000    7.842530e+12   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0                         376.7500        245416.500000   \n",
              "1                         439.2500        206134.250000   \n",
              "5                        2519.5000        196289.250000   \n",
              "8                        1974.8675        370664.250000   \n",
              "9                         493.3500        241273.500000   \n",
              "..                             ...                  ...   \n",
              "111                      4313.5000         34113.333333   \n",
              "113                      5201.2500         17280.666667   \n",
              "115                      7752.0000         24618.333333   \n",
              "116                      5620.0000         34564.666667   \n",
              "117                      4131.2500         26674.000000   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "5                      27425.75            6.864417e+05   \n",
              "8                      20781.50            1.022138e+06   \n",
              "9                       9371.00            7.476099e+05   \n",
              "..                          ...                     ...   \n",
              "111                     4340.25            1.435798e+05   \n",
              "113                     5829.75            1.829170e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "5                358571.333333                           85.084066   \n",
              "8                375738.166667                           80.492049   \n",
              "9                296254.833333                           94.868551   \n",
              "..                         ...                                 ...   \n",
              "111              428145.833333                           77.449045   \n",
              "113              453130.166667                           63.273951   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                       21699.000000   \n",
              "1                      65.052239                       21699.000000   \n",
              "5                      85.493165                       21699.000000   \n",
              "8                      86.179912                       13508.166667   \n",
              "9                      77.346043                       13508.166667   \n",
              "..                           ...                                ...   \n",
              "111                    85.797419                       12994.500000   \n",
              "113                    85.444512                       12994.500000   \n",
              "115                    86.527718                       12994.500000   \n",
              "116                    83.494919                       12994.500000   \n",
              "117                    86.171077                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "5                                      83.231667                    67.822500   \n",
              "8                                      84.061667                    73.723333   \n",
              "9                                      84.061667                    74.000000   \n",
              "..                                           ...                          ...   \n",
              "111                                    75.026667                    73.608333   \n",
              "113                                    75.026667                    72.712500   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  k-means++ 5  \n",
              "0              0            0            0  \n",
              "1              0            0            0  \n",
              "5              0            0            0  \n",
              "8              0            0            0  \n",
              "9              0            0            0  \n",
              "..           ...          ...          ...  \n",
              "111            0            0            0  \n",
              "113            0            0            0  \n",
              "115            0            0            0  \n",
              "116            0            0            0  \n",
              "117            0            0            0  \n",
              "\n",
              "[85 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-066f02e4-c48a-4842-8314-2452c5016828\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "      <th>k-means++ 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.299500</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.7500</td>\n",
              "      <td>245416.500000</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.035400</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.2500</td>\n",
              "      <td>206134.250000</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>2.154588e+13</td>\n",
              "      <td>2519.5000</td>\n",
              "      <td>196289.250000</td>\n",
              "      <td>27425.75</td>\n",
              "      <td>6.864417e+05</td>\n",
              "      <td>358571.333333</td>\n",
              "      <td>85.084066</td>\n",
              "      <td>85.493165</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.822500</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Bantul</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>1.825054e+13</td>\n",
              "      <td>1974.8675</td>\n",
              "      <td>370664.250000</td>\n",
              "      <td>20781.50</td>\n",
              "      <td>1.022138e+06</td>\n",
              "      <td>375738.166667</td>\n",
              "      <td>80.492049</td>\n",
              "      <td>86.179912</td>\n",
              "      <td>13508.166667</td>\n",
              "      <td>84.061667</td>\n",
              "      <td>73.723333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Gunung Kidul</td>\n",
              "      <td>99.768533</td>\n",
              "      <td>1.303754e+13</td>\n",
              "      <td>493.3500</td>\n",
              "      <td>241273.500000</td>\n",
              "      <td>9371.00</td>\n",
              "      <td>7.476099e+05</td>\n",
              "      <td>296254.833333</td>\n",
              "      <td>94.868551</td>\n",
              "      <td>77.346043</td>\n",
              "      <td>13508.166667</td>\n",
              "      <td>84.061667</td>\n",
              "      <td>74.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Blitar</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.573370e+12</td>\n",
              "      <td>4313.5000</td>\n",
              "      <td>34113.333333</td>\n",
              "      <td>4340.25</td>\n",
              "      <td>1.435798e+05</td>\n",
              "      <td>428145.833333</td>\n",
              "      <td>77.449045</td>\n",
              "      <td>85.797419</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.608333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>1.002101e+13</td>\n",
              "      <td>5201.2500</td>\n",
              "      <td>17280.666667</td>\n",
              "      <td>5829.75</td>\n",
              "      <td>1.829170e+05</td>\n",
              "      <td>453130.166667</td>\n",
              "      <td>63.273951</td>\n",
              "      <td>85.444512</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.712500</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.0000</td>\n",
              "      <td>24618.333333</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.019600</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.0000</td>\n",
              "      <td>34564.666667</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.2500</td>\n",
              "      <td>26674.000000</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-066f02e4-c48a-4842-8314-2452c5016828')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-066f02e4-c48a-4842-8314-2452c5016828 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-066f02e4-c48a-4842-8314-2452c5016828');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ef291468-d7c0-4e2a-bff8-da6c8afd9028\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef291468-d7c0-4e2a-bff8-da6c8afd9028')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ef291468-d7c0-4e2a-bff8-da6c8afd9028 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f1edd55e-a081-48bc-eed9-53fe781201f7",
        "id": "gmiaGFvFlc9H"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.806111e+01\n",
              "PDRB ADHK (Rp)                                 1.895526e+13\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  2.212599e+03\n",
              "Jumlah Motor (unit)                            3.586305e+05\n",
              "Jumlah Pengangguran (Jiwa)                     2.808162e+04\n",
              "Jumlah Penduduk (Jiwa)                         9.389602e+05\n",
              "Garis Kemiskinan (Persen)                      3.699452e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             8.577554e+01\n",
              "Rasio RT memiliki Spd Motor                    7.832493e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.382602e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.635592e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.267134e+01\n",
              "k-means++ 3                                    0.000000e+00\n",
              "k-means++ 4                                    0.000000e+00\n",
              "k-means++ 5                                    0.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0[['provinsi','kota']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "ded5fa3b-93f2-4715-a1d3-6eece7522490",
        "id": "_VR_fa-blc9H"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          provinsi               kota\n",
              "0           Banten         Kab. Lebak\n",
              "1           Banten    Kab. Pandeglang\n",
              "5           Banten        Kota Serang\n",
              "8    DI Yogyakarta        Kab. Bantul\n",
              "9    DI Yogyakarta  Kab. Gunung Kidul\n",
              "..             ...                ...\n",
              "111     Jawa Timur        Kota Blitar\n",
              "113     Jawa Timur        Kota Madiun\n",
              "115     Jawa Timur     Kota Mojokerto\n",
              "116     Jawa Timur      Kota Pasuruan\n",
              "117     Jawa Timur   Kota Probolinggo\n",
              "\n",
              "[85 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-74b9548b-c093-496f-9392-63abb481a0d4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Bantul</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Gunung Kidul</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Blitar</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74b9548b-c093-496f-9392-63abb481a0d4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-74b9548b-c093-496f-9392-63abb481a0d4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-74b9548b-c093-496f-9392-63abb481a0d4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fc6d4fde-c51a-4c52-9ec3-2c6d308dd3fd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc6d4fde-c51a-4c52-9ec3-2c6d308dd3fd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fc6d4fde-c51a-4c52-9ec3-2c6d308dd3fd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a65cd78d-cf67-422b-dac2-5da4aa329162",
        "id": "CCqgmnXwlc9H"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Lebak', 'Kab. Pandeglang', 'Kota Serang', 'Kab. Bantul',\n",
              "       'Kab. Gunung Kidul', 'Kab. Kulonprogo', 'Kab. Sleman',\n",
              "       'Kota Yogyakarta', 'Kab. Kepulauan Seribu', 'Kab. Bandung Barat',\n",
              "       'Kab. Ciamis', 'Kab. Cianjur', 'Kab. Cirebon', 'Kab. Garut',\n",
              "       'Kab. Kuningan', 'Kab. Majalengka', 'Kab. Pangandaran',\n",
              "       'Kab. Subang', 'Kab. Sumedang', 'Kab. Tasikmalaya', 'Kota Banjar',\n",
              "       'Kota Bogor', 'Kota Cimahi', 'Kota Cirebon', 'Kota Sukabumi',\n",
              "       'Kota Tasikmalaya', 'Kab. Banjarnegara', 'Kab. Banyumas',\n",
              "       'Kab. Batang', 'Kab. Blora', 'Kab. Boyolali', 'Kab. Brebes',\n",
              "       'Kab. Demak', 'Kab. Grobogan', 'Kab. Jepara', 'Kab. Karanganyar',\n",
              "       'Kab. Kebumen', 'Kab. Kendal', 'Kab. Klaten', 'Kab. Magelang',\n",
              "       'Kab. Pati', 'Kab. Pekalongan', 'Kab. Pemalang',\n",
              "       'Kab. Purbalingga', 'Kab. Purworejo', 'Kab. Rembang',\n",
              "       'Kab. Semarang', 'Kab. Sragen', 'Kab. Sukoharjo', 'Kab. Tegal',\n",
              "       'Kab. Temanggung', 'Kab. Wonogiri', 'Kab. Wonosobo',\n",
              "       'Kota Magelang', 'Kota Pekalongan', 'Kota Salatiga',\n",
              "       'Kota Surakarta', 'Kota Tegal', 'Kab. Bangkalan', 'Kab. Blitar',\n",
              "       'Kab. Bondowoso', 'Kab. Jombang', 'Kab. Kediri', 'Kab. Lamongan',\n",
              "       'Kab. Lumajang', 'Kab. Madiun', 'Kab. Magetan', 'Kab. Nganjuk',\n",
              "       'Kab. Ngawi', 'Kab. Pacitan', 'Kab. Pamekasan', 'Kab. Ponorogo',\n",
              "       'Kab. Probolinggo', 'Kab. Sampang', 'Kab. Situbondo',\n",
              "       'Kab. Sumenep', 'Kab. Trenggalek', 'Kab. Tuban',\n",
              "       'Kab. Tulungagung', 'Kota Batu', 'Kota Blitar', 'Kota Madiun',\n",
              "       'Kota Mojokerto', 'Kota Pasuruan', 'Kota Probolinggo'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "outputId": "87e6b2e7-6ce4-42d0-a597-b0355365971e",
        "id": "TC_VHe8elc9H"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi           kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "22    Jawa Barat     Kab. Bogor                                   99.693500   \n",
              "28    Jawa Barat  Kab. Karawang                                   99.352767   \n",
              "37    Jawa Barat   Kota Bandung                                   99.779233   \n",
              "78   Jawa Tengah  Kota Semarang                                   99.435033   \n",
              "104   Jawa Timur  Kab. Sidoarjo                                   98.275867   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "22     1.483495e+14                        2131.25            1404250.0   \n",
              "28     1.559002e+14                        1407.75             755961.0   \n",
              "37     1.850610e+14                       14910.25            1256057.0   \n",
              "78     1.321015e+14                        4741.18             877398.0   \n",
              "104    1.320949e+14                        2680.75             140813.0   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "22                    310916.50            5.839390e+06   \n",
              "28                    121015.50            2.334536e+06   \n",
              "37                    127074.75            2.502052e+06   \n",
              "78                     72148.50            1.732847e+06   \n",
              "104                    92098.00            2.162529e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "22               368321.000000                           81.201374   \n",
              "28               438255.500000                           84.446690   \n",
              "37               460053.000000                           53.059216   \n",
              "78               458919.666667                           68.826660   \n",
              "104              449743.666667                           81.079978   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "22                     73.244944                            17332.5   \n",
              "28                     77.940043                            17332.5   \n",
              "37                     74.964031                            17332.5   \n",
              "78                     87.596349                            11593.0   \n",
              "104                    91.895753                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "22                                     77.125000                    71.097500   \n",
              "28                                     77.125000                    72.056667   \n",
              "37                                     77.125000                    74.213333   \n",
              "78                                     74.826667                    77.448333   \n",
              "104                                    75.026667                    73.934167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  k-means++ 5  \n",
              "22             2            1            1  \n",
              "28             2            1            1  \n",
              "37             2            1            1  \n",
              "78             2            1            1  \n",
              "104            2            1            1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-605483c6-e915-4bac-af88-0c571b67c9fd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "      <th>k-means++ 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bogor</td>\n",
              "      <td>99.693500</td>\n",
              "      <td>1.483495e+14</td>\n",
              "      <td>2131.25</td>\n",
              "      <td>1404250.0</td>\n",
              "      <td>310916.50</td>\n",
              "      <td>5.839390e+06</td>\n",
              "      <td>368321.000000</td>\n",
              "      <td>81.201374</td>\n",
              "      <td>73.244944</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.097500</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Karawang</td>\n",
              "      <td>99.352767</td>\n",
              "      <td>1.559002e+14</td>\n",
              "      <td>1407.75</td>\n",
              "      <td>755961.0</td>\n",
              "      <td>121015.50</td>\n",
              "      <td>2.334536e+06</td>\n",
              "      <td>438255.500000</td>\n",
              "      <td>84.446690</td>\n",
              "      <td>77.940043</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>72.056667</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bandung</td>\n",
              "      <td>99.779233</td>\n",
              "      <td>1.850610e+14</td>\n",
              "      <td>14910.25</td>\n",
              "      <td>1256057.0</td>\n",
              "      <td>127074.75</td>\n",
              "      <td>2.502052e+06</td>\n",
              "      <td>460053.000000</td>\n",
              "      <td>53.059216</td>\n",
              "      <td>74.964031</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.213333</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kota Semarang</td>\n",
              "      <td>99.435033</td>\n",
              "      <td>1.321015e+14</td>\n",
              "      <td>4741.18</td>\n",
              "      <td>877398.0</td>\n",
              "      <td>72148.50</td>\n",
              "      <td>1.732847e+06</td>\n",
              "      <td>458919.666667</td>\n",
              "      <td>68.826660</td>\n",
              "      <td>87.596349</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>77.448333</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Sidoarjo</td>\n",
              "      <td>98.275867</td>\n",
              "      <td>1.320949e+14</td>\n",
              "      <td>2680.75</td>\n",
              "      <td>140813.0</td>\n",
              "      <td>92098.00</td>\n",
              "      <td>2.162529e+06</td>\n",
              "      <td>449743.666667</td>\n",
              "      <td>81.079978</td>\n",
              "      <td>91.895753</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.934167</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-605483c6-e915-4bac-af88-0c571b67c9fd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-605483c6-e915-4bac-af88-0c571b67c9fd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-605483c6-e915-4bac-af88-0c571b67c9fd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8432a8a5-32f7-4ba1-bb7a-11e8b1fa4604\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8432a8a5-32f7-4ba1-bb7a-11e8b1fa4604')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8432a8a5-32f7-4ba1-bb7a-11e8b1fa4604 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "31ac4178-cd7e-4dd5-d5c0-a946a1004359",
        "id": "oFWZml5_lc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.930728e+01\n",
              "PDRB ADHK (Rp)                                 1.507014e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  5.174236e+03\n",
              "Jumlah Motor (unit)                            8.868958e+05\n",
              "Jumlah Pengangguran (Jiwa)                     1.446506e+05\n",
              "Jumlah Penduduk (Jiwa)                         2.914271e+06\n",
              "Garis Kemiskinan (Persen)                      4.350586e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             7.372278e+01\n",
              "Rasio RT memiliki Spd Motor                    8.112822e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.531700e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.624567e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.375000e+01\n",
              "k-means++ 3                                    2.000000e+00\n",
              "k-means++ 4                                    1.000000e+00\n",
              "k-means++ 5                                    1.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e1ddcf53-cc27-468e-b3ab-1762b1d38dad",
        "id": "2Pcifpdflc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Bogor', 'Kab. Karawang', 'Kota Bandung', 'Kota Semarang',\n",
              "       'Kab. Sidoarjo'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "outputId": "8cd5bf9f-13ee-4242-deff-64d55887a93e",
        "id": "TImxxatalc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi                  kota  \\\n",
              "15   DKI Jakarta    Kota Jakarta Pusat   \n",
              "16   DKI Jakarta  Kota Jakarta Selatan   \n",
              "118   Jawa Timur         Kota Surabaya   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "15                                     100.0000    4.274374e+14   \n",
              "16                                     100.0000    3.974829e+14   \n",
              "118                                     98.7013    3.842024e+14   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "15                      18785.5575         1.473874e+07   \n",
              "16                      15489.6675         1.473874e+07   \n",
              "118                      8215.5000         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "15                      38675.0            9.692097e+05   \n",
              "16                      89288.5            2.234179e+06   \n",
              "118                    122910.0            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "15               599169.666667                           42.309587   \n",
              "16               699988.333333                           46.733298   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "15                     70.390338                       26093.833333   \n",
              "16                     78.396880                       26093.833333   \n",
              "118                    85.464276                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "15                                     88.951667                    74.049167   \n",
              "16                                     88.951667                    74.119167   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  k-means++ 5  \n",
              "15             1            2            2  \n",
              "16             1            2            2  \n",
              "118            1            2            2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a7ece0b4-2635-4203-8cba-4dd48e474b08\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "      <th>k-means++ 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Pusat</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.274374e+14</td>\n",
              "      <td>18785.5575</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>38675.0</td>\n",
              "      <td>9.692097e+05</td>\n",
              "      <td>599169.666667</td>\n",
              "      <td>42.309587</td>\n",
              "      <td>70.390338</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.049167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Selatan</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>3.974829e+14</td>\n",
              "      <td>15489.6675</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>89288.5</td>\n",
              "      <td>2.234179e+06</td>\n",
              "      <td>699988.333333</td>\n",
              "      <td>46.733298</td>\n",
              "      <td>78.396880</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.119167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.5000</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.0</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7ece0b4-2635-4203-8cba-4dd48e474b08')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a7ece0b4-2635-4203-8cba-4dd48e474b08 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a7ece0b4-2635-4203-8cba-4dd48e474b08');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a32dd5d0-c244-40bd-b78d-ca22c7821f72\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a32dd5d0-c244-40bd-b78d-ca22c7821f72')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a32dd5d0-c244-40bd-b78d-ca22c7821f72 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "05703d64-45cb-4cd2-ead2-7205054381d1",
        "id": "w_-wCpShlc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.956710e+01\n",
              "PDRB ADHK (Rp)                                 4.030409e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.416357e+04\n",
              "Jumlah Motor (unit)                            9.909220e+06\n",
              "Jumlah Pengangguran (Jiwa)                     8.362450e+04\n",
              "Jumlah Penduduk (Jiwa)                         2.027432e+06\n",
              "Garis Kemiskinan (Persen)                      6.116028e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             4.891009e+01\n",
              "Rasio RT memiliki Spd Motor                    7.808383e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.172739e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.431000e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.408083e+01\n",
              "k-means++ 3                                    1.000000e+00\n",
              "k-means++ 4                                    2.000000e+00\n",
              "k-means++ 5                                    2.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3008ca00-c440-4cf6-af8d-3d1fe6d84789",
        "id": "xtOWYv_Qlc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Pusat', 'Kota Jakarta Selatan', 'Kota Surabaya'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3 = df.loc[df['k-means++ 5']==3]\n",
        "all3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "33b61387-5a7f-4623-8cd3-762d0b1c6ba8",
        "id": "bomH-4qrlc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi                    kota  \\\n",
              "2         Banten             Kab. Serang   \n",
              "3         Banten         Kab. Tanggerang   \n",
              "4         Banten            Kota Cilegon   \n",
              "6         Banten  Kota Tangerang Selatan   \n",
              "7         Banten         Kota Tanggerang   \n",
              "19    Jawa Barat            Kab. Bandung   \n",
              "27    Jawa Barat          Kab. Indramayu   \n",
              "32    Jawa Barat         Kab. Purwakarta   \n",
              "34    Jawa Barat           Kab. Sukabumi   \n",
              "39    Jawa Barat             Kota Bekasi   \n",
              "43    Jawa Barat              Kota Depok   \n",
              "52   Jawa Tengah            Kab. Cilacap   \n",
              "60   Jawa Tengah              Kab. Kudus   \n",
              "82    Jawa Timur         Kab. Banyuwangi   \n",
              "84    Jawa Timur         Kab. Bojonegoro   \n",
              "86    Jawa Timur             Kab. Gresik   \n",
              "87    Jawa Timur             Kab. Jember   \n",
              "94    Jawa Timur             Kab. Malang   \n",
              "95    Jawa Timur          Kab. Mojokerto   \n",
              "100   Jawa Timur           Kab. Pasuruan   \n",
              "112   Jawa Timur             Kota Kediri   \n",
              "114   Jawa Timur             Kota Malang   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "2                                     98.773000    5.166992e+13   \n",
              "3                                     99.270100    9.159683e+13   \n",
              "4                                    100.000000    7.079368e+13   \n",
              "6                                     99.382700    5.644622e+13   \n",
              "7                                     99.358967    1.038955e+14   \n",
              "19                                    99.404767    7.783522e+13   \n",
              "27                                    99.579400    5.856784e+13   \n",
              "32                                    98.611133    4.419376e+13   \n",
              "34                                    97.409333    4.434422e+13   \n",
              "39                                   100.000000    6.561680e+13   \n",
              "43                                   100.000000    4.606371e+13   \n",
              "52                                    96.478867    9.474960e+13   \n",
              "60                                   100.000000    7.005176e+13   \n",
              "82                                    99.846400    5.213556e+13   \n",
              "84                                    94.806200    6.526294e+13   \n",
              "86                                    99.344567    9.551984e+13   \n",
              "87                                    98.924733    5.138213e+13   \n",
              "94                                    99.829067    6.466987e+13   \n",
              "95                                    99.342100    5.554828e+13   \n",
              "100                                   99.543367    9.977910e+13   \n",
              "112                                  100.000000    8.402232e+13   \n",
              "114                                  100.000000    4.957143e+13   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "2                         863.2500         3.737372e+05   \n",
              "3                        3596.2500         1.222381e+06   \n",
              "4                        2439.2500         2.067328e+05   \n",
              "6                       11350.7500         6.777738e+05   \n",
              "7                       14046.7500         9.956895e+05   \n",
              "19                       2085.2500         9.577970e+05   \n",
              "27                        840.5000         4.855360e+05   \n",
              "32                       1148.2500         2.757110e+05   \n",
              "34                        592.7500         4.771970e+05   \n",
              "39                      14015.0000         1.250955e+06   \n",
              "43                      11447.7500         9.664510e+05   \n",
              "52                        803.3700         3.605370e+05   \n",
              "60                       2014.4075         2.478633e+04   \n",
              "82                        278.0000         9.799900e+04   \n",
              "84                        566.2500         4.108000e+04   \n",
              "86                       1084.5000         6.136700e+04   \n",
              "87                        787.2500         6.879100e+04   \n",
              "94                        731.7500         9.429267e+04   \n",
              "95                       1538.2500         3.567600e+04   \n",
              "100                      1092.7500         5.809033e+04   \n",
              "112                      4493.0000         3.614233e+04   \n",
              "114                      5944.5000         4.483433e+04   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "6                      54459.75            1.540204e+06   \n",
              "7                      89333.00            2.055251e+06   \n",
              "19                    120278.00            3.715660e+06   \n",
              "27                     78553.25            1.719218e+06   \n",
              "32                     45519.50            9.528468e+05   \n",
              "34                    102190.50            2.459060e+06   \n",
              "39                    146532.25            2.931669e+06   \n",
              "43                     95238.50            2.331134e+06   \n",
              "52                     71381.25            1.795050e+06   \n",
              "60                     20609.00            8.545575e+05   \n",
              "82                     42301.00            1.642492e+06   \n",
              "84                     31283.50            1.265024e+06   \n",
              "86                     47261.00            1.299902e+06   \n",
              "87                     60059.50            2.471276e+06   \n",
              "94                     64255.25            2.609669e+06   \n",
              "95                     29793.25            1.110119e+06   \n",
              "100                    51523.25            1.610123e+06   \n",
              "112                     7715.50            2.856215e+05   \n",
              "114                    37472.50            8.572278e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "6                569896.000000                           77.073268   \n",
              "7                572316.000000                           60.592195   \n",
              "19               339063.333333                           77.885703   \n",
              "27               445538.666667                           79.782066   \n",
              "32               353913.500000                           86.098524   \n",
              "34               306154.166667                           87.469963   \n",
              "39               602937.666667                           62.038584   \n",
              "43               622132.833333                           63.465709   \n",
              "52               328724.333333                           93.803447   \n",
              "60               401730.166667                           91.997631   \n",
              "82               347580.833333                           88.700709   \n",
              "84               337696.666667                           96.265710   \n",
              "86               451782.166667                           87.036100   \n",
              "87               336670.666667                           90.982777   \n",
              "94               318125.000000                           78.998459   \n",
              "95               377477.833333                           83.005988   \n",
              "100              335358.500000                           86.081302   \n",
              "112              457813.666667                           71.677772   \n",
              "114              509449.500000                           64.222282   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "6                      88.132278                            21699.0   \n",
              "7                      87.961656                            21699.0   \n",
              "19                     73.109074                            17332.5   \n",
              "27                     77.396357                            17332.5   \n",
              "32                     71.243830                            17332.5   \n",
              "34                     58.290219                            17332.5   \n",
              "39                     88.254391                            17332.5   \n",
              "43                     86.648911                            17332.5   \n",
              "52                     81.341424                            11593.0   \n",
              "60                     90.874716                            11593.0   \n",
              "82                     83.785780                            12994.5   \n",
              "84                     82.944792                            12994.5   \n",
              "86                     91.277329                            12994.5   \n",
              "87                     80.309401                            12994.5   \n",
              "94                     83.857915                            12994.5   \n",
              "95                     86.937132                            12994.5   \n",
              "100                    81.704555                            12994.5   \n",
              "112                    88.131285                            12994.5   \n",
              "114                    81.436044                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "6                                      83.231667                    71.526667   \n",
              "7                                      83.231667                    72.380833   \n",
              "19                                     77.125000                    73.476667   \n",
              "27                                     77.125000                    71.465000   \n",
              "32                                     77.125000                    70.876667   \n",
              "34                                     77.125000                    70.825000   \n",
              "39                                     77.125000                    74.965000   \n",
              "43                                     77.125000                    74.478333   \n",
              "52                                     74.826667                    73.612500   \n",
              "60                                     74.826667                    76.655000   \n",
              "82                                     75.026667                    70.526667   \n",
              "84                                     75.026667                    71.392500   \n",
              "86                                     75.026667                    72.564167   \n",
              "87                                     75.026667                    69.002500   \n",
              "94                                     75.026667                    72.429167   \n",
              "95                                     75.026667                    72.409167   \n",
              "100                                    75.026667                    70.126667   \n",
              "112                                    75.026667                    73.918333   \n",
              "114                                    75.026667                    73.144167   \n",
              "\n",
              "     k-means++ 3  k-means++ 4  k-means++ 5  \n",
              "2              0            3            3  \n",
              "3              2            3            3  \n",
              "4              2            3            3  \n",
              "6              0            3            3  \n",
              "7              2            3            3  \n",
              "19             2            3            3  \n",
              "27             0            3            3  \n",
              "32             0            3            3  \n",
              "34             0            3            3  \n",
              "39             2            3            3  \n",
              "43             0            3            3  \n",
              "52             2            3            3  \n",
              "60             2            3            3  \n",
              "82             0            3            3  \n",
              "84             2            3            3  \n",
              "86             2            3            3  \n",
              "87             0            3            3  \n",
              "94             2            3            3  \n",
              "95             0            3            3  \n",
              "100            2            3            3  \n",
              "112            2            3            3  \n",
              "114            0            3            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2810238f-0cbb-4dbe-ad09-6e8d7bc60619\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "      <th>k-means++ 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.773000</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.2500</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.270100</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.2500</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.2500</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tangerang Selatan</td>\n",
              "      <td>99.382700</td>\n",
              "      <td>5.644622e+13</td>\n",
              "      <td>11350.7500</td>\n",
              "      <td>6.777738e+05</td>\n",
              "      <td>54459.75</td>\n",
              "      <td>1.540204e+06</td>\n",
              "      <td>569896.000000</td>\n",
              "      <td>77.073268</td>\n",
              "      <td>88.132278</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>71.526667</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tanggerang</td>\n",
              "      <td>99.358967</td>\n",
              "      <td>1.038955e+14</td>\n",
              "      <td>14046.7500</td>\n",
              "      <td>9.956895e+05</td>\n",
              "      <td>89333.00</td>\n",
              "      <td>2.055251e+06</td>\n",
              "      <td>572316.000000</td>\n",
              "      <td>60.592195</td>\n",
              "      <td>87.961656</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>72.380833</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bandung</td>\n",
              "      <td>99.404767</td>\n",
              "      <td>7.783522e+13</td>\n",
              "      <td>2085.2500</td>\n",
              "      <td>9.577970e+05</td>\n",
              "      <td>120278.00</td>\n",
              "      <td>3.715660e+06</td>\n",
              "      <td>339063.333333</td>\n",
              "      <td>77.885703</td>\n",
              "      <td>73.109074</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.476667</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Indramayu</td>\n",
              "      <td>99.579400</td>\n",
              "      <td>5.856784e+13</td>\n",
              "      <td>840.5000</td>\n",
              "      <td>4.855360e+05</td>\n",
              "      <td>78553.25</td>\n",
              "      <td>1.719218e+06</td>\n",
              "      <td>445538.666667</td>\n",
              "      <td>79.782066</td>\n",
              "      <td>77.396357</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.465000</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Purwakarta</td>\n",
              "      <td>98.611133</td>\n",
              "      <td>4.419376e+13</td>\n",
              "      <td>1148.2500</td>\n",
              "      <td>2.757110e+05</td>\n",
              "      <td>45519.50</td>\n",
              "      <td>9.528468e+05</td>\n",
              "      <td>353913.500000</td>\n",
              "      <td>86.098524</td>\n",
              "      <td>71.243830</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>70.876667</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Sukabumi</td>\n",
              "      <td>97.409333</td>\n",
              "      <td>4.434422e+13</td>\n",
              "      <td>592.7500</td>\n",
              "      <td>4.771970e+05</td>\n",
              "      <td>102190.50</td>\n",
              "      <td>2.459060e+06</td>\n",
              "      <td>306154.166667</td>\n",
              "      <td>87.469963</td>\n",
              "      <td>58.290219</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>70.825000</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bekasi</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>6.561680e+13</td>\n",
              "      <td>14015.0000</td>\n",
              "      <td>1.250955e+06</td>\n",
              "      <td>146532.25</td>\n",
              "      <td>2.931669e+06</td>\n",
              "      <td>602937.666667</td>\n",
              "      <td>62.038584</td>\n",
              "      <td>88.254391</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.965000</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Depok</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.606371e+13</td>\n",
              "      <td>11447.7500</td>\n",
              "      <td>9.664510e+05</td>\n",
              "      <td>95238.50</td>\n",
              "      <td>2.331134e+06</td>\n",
              "      <td>622132.833333</td>\n",
              "      <td>63.465709</td>\n",
              "      <td>86.648911</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.478333</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Cilacap</td>\n",
              "      <td>96.478867</td>\n",
              "      <td>9.474960e+13</td>\n",
              "      <td>803.3700</td>\n",
              "      <td>3.605370e+05</td>\n",
              "      <td>71381.25</td>\n",
              "      <td>1.795050e+06</td>\n",
              "      <td>328724.333333</td>\n",
              "      <td>93.803447</td>\n",
              "      <td>81.341424</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>73.612500</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Kudus</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.005176e+13</td>\n",
              "      <td>2014.4075</td>\n",
              "      <td>2.478633e+04</td>\n",
              "      <td>20609.00</td>\n",
              "      <td>8.545575e+05</td>\n",
              "      <td>401730.166667</td>\n",
              "      <td>91.997631</td>\n",
              "      <td>90.874716</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>76.655000</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Banyuwangi</td>\n",
              "      <td>99.846400</td>\n",
              "      <td>5.213556e+13</td>\n",
              "      <td>278.0000</td>\n",
              "      <td>9.799900e+04</td>\n",
              "      <td>42301.00</td>\n",
              "      <td>1.642492e+06</td>\n",
              "      <td>347580.833333</td>\n",
              "      <td>88.700709</td>\n",
              "      <td>83.785780</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.526667</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Bojonegoro</td>\n",
              "      <td>94.806200</td>\n",
              "      <td>6.526294e+13</td>\n",
              "      <td>566.2500</td>\n",
              "      <td>4.108000e+04</td>\n",
              "      <td>31283.50</td>\n",
              "      <td>1.265024e+06</td>\n",
              "      <td>337696.666667</td>\n",
              "      <td>96.265710</td>\n",
              "      <td>82.944792</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.392500</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Gresik</td>\n",
              "      <td>99.344567</td>\n",
              "      <td>9.551984e+13</td>\n",
              "      <td>1084.5000</td>\n",
              "      <td>6.136700e+04</td>\n",
              "      <td>47261.00</td>\n",
              "      <td>1.299902e+06</td>\n",
              "      <td>451782.166667</td>\n",
              "      <td>87.036100</td>\n",
              "      <td>91.277329</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.564167</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Jember</td>\n",
              "      <td>98.924733</td>\n",
              "      <td>5.138213e+13</td>\n",
              "      <td>787.2500</td>\n",
              "      <td>6.879100e+04</td>\n",
              "      <td>60059.50</td>\n",
              "      <td>2.471276e+06</td>\n",
              "      <td>336670.666667</td>\n",
              "      <td>90.982777</td>\n",
              "      <td>80.309401</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>69.002500</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Malang</td>\n",
              "      <td>99.829067</td>\n",
              "      <td>6.466987e+13</td>\n",
              "      <td>731.7500</td>\n",
              "      <td>9.429267e+04</td>\n",
              "      <td>64255.25</td>\n",
              "      <td>2.609669e+06</td>\n",
              "      <td>318125.000000</td>\n",
              "      <td>78.998459</td>\n",
              "      <td>83.857915</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.429167</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Mojokerto</td>\n",
              "      <td>99.342100</td>\n",
              "      <td>5.554828e+13</td>\n",
              "      <td>1538.2500</td>\n",
              "      <td>3.567600e+04</td>\n",
              "      <td>29793.25</td>\n",
              "      <td>1.110119e+06</td>\n",
              "      <td>377477.833333</td>\n",
              "      <td>83.005988</td>\n",
              "      <td>86.937132</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.409167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Pasuruan</td>\n",
              "      <td>99.543367</td>\n",
              "      <td>9.977910e+13</td>\n",
              "      <td>1092.7500</td>\n",
              "      <td>5.809033e+04</td>\n",
              "      <td>51523.25</td>\n",
              "      <td>1.610123e+06</td>\n",
              "      <td>335358.500000</td>\n",
              "      <td>86.081302</td>\n",
              "      <td>81.704555</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.126667</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Kediri</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>8.402232e+13</td>\n",
              "      <td>4493.0000</td>\n",
              "      <td>3.614233e+04</td>\n",
              "      <td>7715.50</td>\n",
              "      <td>2.856215e+05</td>\n",
              "      <td>457813.666667</td>\n",
              "      <td>71.677772</td>\n",
              "      <td>88.131285</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.918333</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.5000</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2810238f-0cbb-4dbe-ad09-6e8d7bc60619')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2810238f-0cbb-4dbe-ad09-6e8d7bc60619 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2810238f-0cbb-4dbe-ad09-6e8d7bc60619');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-070a2e78-7ecf-4f56-9721-66e0047f0b1f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-070a2e78-7ecf-4f56-9721-66e0047f0b1f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-070a2e78-7ecf-4f56-9721-66e0047f0b1f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "008e3b6e-36ca-44bb-98a3-e03e648c66a8",
        "id": "MTD0burSlc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.908658e+01\n",
              "PDRB ADHK (Rp)                                 6.789621e+13\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  3.716354e+03\n",
              "Jumlah Motor (unit)                            4.006163e+05\n",
              "Jumlah Pengangguran (Jiwa)                     6.723565e+04\n",
              "Jumlah Penduduk (Jiwa)                         1.772511e+06\n",
              "Garis Kemiskinan (Persen)                      4.196721e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             8.100683e+01\n",
              "Rasio RT memiliki Spd Motor                    8.268268e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.602848e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.744553e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.166402e+01\n",
              "k-means++ 3                                    1.090909e+00\n",
              "k-means++ 4                                    3.000000e+00\n",
              "k-means++ 5                                    3.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8ffaf247-50f8-4ed7-e30a-3850bdcb4c60",
        "id": "2fMsoXHKlc9I"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Serang', 'Kab. Tanggerang', 'Kota Cilegon',\n",
              "       'Kota Tangerang Selatan', 'Kota Tanggerang', 'Kab. Bandung',\n",
              "       'Kab. Indramayu', 'Kab. Purwakarta', 'Kab. Sukabumi',\n",
              "       'Kota Bekasi', 'Kota Depok', 'Kab. Cilacap', 'Kab. Kudus',\n",
              "       'Kab. Banyuwangi', 'Kab. Bojonegoro', 'Kab. Gresik', 'Kab. Jember',\n",
              "       'Kab. Malang', 'Kab. Mojokerto', 'Kab. Pasuruan', 'Kota Kediri',\n",
              "       'Kota Malang'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all4 = df.loc[df['k-means++ 5']==4]\n",
        "all4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 403
        },
        "id": "D4rKtSZol2wO",
        "outputId": "f63ce942-d25a-47f1-bfb1-d99e871facd1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi                kota  \\\n",
              "14  DKI Jakarta  Kota Jakarta Barat   \n",
              "17  DKI Jakarta  Kota Jakarta Timur   \n",
              "18  DKI Jakarta  Kota Jakarta Utara   \n",
              "21   Jawa Barat         Kab. Bekasi   \n",
              "\n",
              "    Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "14                                  100.000000    3.013646e+14   \n",
              "17                                   98.974367    2.952711e+14   \n",
              "18                                  100.000000    3.136514e+14   \n",
              "21                                   99.287000    2.387286e+14   \n",
              "\n",
              "    Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "14                     19838.5500         1.473874e+07   \n",
              "17                     15557.6800         1.473874e+07   \n",
              "18                     12345.7525         1.473874e+07   \n",
              "21                      2911.7500         1.261729e+06   \n",
              "\n",
              "    Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "14                   103508.50            2.507990e+06   \n",
              "17                   106630.50            2.951502e+06   \n",
              "18                    83284.50            1.778313e+06   \n",
              "21                   181931.25            3.633105e+06   \n",
              "\n",
              "    Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "14              500273.166667                           49.711463   \n",
              "17              517909.000000                           50.373830   \n",
              "18              528524.833333                           45.078933   \n",
              "21              477325.166667                           77.196490   \n",
              "\n",
              "    Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "14                    81.397537                       26093.833333   \n",
              "17                    81.541047                       26093.833333   \n",
              "18                    76.575130                       26093.833333   \n",
              "21                    84.335558                       17332.500000   \n",
              "\n",
              "    Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "14                                    88.951667                    73.545833   \n",
              "17                                    88.951667                    74.404167   \n",
              "18                                    88.951667                    73.191667   \n",
              "21                                    77.125000                    73.601667   \n",
              "\n",
              "    k-means++ 3  k-means++ 4  k-means++ 5  \n",
              "14            1            2            4  \n",
              "17            1            2            4  \n",
              "18            1            2            4  \n",
              "21            1            1            4  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f610a75f-d807-4fb9-8bbe-cf7f518b711d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>k-means++ 3</th>\n",
              "      <th>k-means++ 4</th>\n",
              "      <th>k-means++ 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Barat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.013646e+14</td>\n",
              "      <td>19838.5500</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>103508.50</td>\n",
              "      <td>2.507990e+06</td>\n",
              "      <td>500273.166667</td>\n",
              "      <td>49.711463</td>\n",
              "      <td>81.397537</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.545833</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Timur</td>\n",
              "      <td>98.974367</td>\n",
              "      <td>2.952711e+14</td>\n",
              "      <td>15557.6800</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>106630.50</td>\n",
              "      <td>2.951502e+06</td>\n",
              "      <td>517909.000000</td>\n",
              "      <td>50.373830</td>\n",
              "      <td>81.541047</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.404167</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Utara</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.136514e+14</td>\n",
              "      <td>12345.7525</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>83284.50</td>\n",
              "      <td>1.778313e+06</td>\n",
              "      <td>528524.833333</td>\n",
              "      <td>45.078933</td>\n",
              "      <td>76.575130</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.191667</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bekasi</td>\n",
              "      <td>99.287000</td>\n",
              "      <td>2.387286e+14</td>\n",
              "      <td>2911.7500</td>\n",
              "      <td>1.261729e+06</td>\n",
              "      <td>181931.25</td>\n",
              "      <td>3.633105e+06</td>\n",
              "      <td>477325.166667</td>\n",
              "      <td>77.196490</td>\n",
              "      <td>84.335558</td>\n",
              "      <td>17332.500000</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.601667</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f610a75f-d807-4fb9-8bbe-cf7f518b711d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f610a75f-d807-4fb9-8bbe-cf7f518b711d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f610a75f-d807-4fb9-8bbe-cf7f518b711d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0b24949a-9f98-44ab-bfc0-76a46f3539cf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b24949a-9f98-44ab-bfc0-76a46f3539cf')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0b24949a-9f98-44ab-bfc0-76a46f3539cf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all4.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QrDEjfmXl6Y5",
        "outputId": "42ddbc0c-d4af-4a39-c648-814686c3ff72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.956534e+01\n",
              "PDRB ADHK (Rp)                                 2.872539e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.266343e+04\n",
              "Jumlah Motor (unit)                            1.136949e+07\n",
              "Jumlah Pengangguran (Jiwa)                     1.188387e+05\n",
              "Jumlah Penduduk (Jiwa)                         2.717727e+06\n",
              "Garis Kemiskinan (Persen)                      5.060080e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             5.559018e+01\n",
              "Rasio RT memiliki Spd Motor                    8.096232e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.390350e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.599500e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.368583e+01\n",
              "k-means++ 3                                    1.000000e+00\n",
              "k-means++ 4                                    1.750000e+00\n",
              "k-means++ 5                                    4.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all4['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7Qhjbsall7-V",
        "outputId": "5a9f6dba-a57e-4315-f6bb-c91fc8f024d1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Barat', 'Kota Jakarta Timur', 'Kota Jakarta Utara',\n",
              "       'Kab. Bekasi'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "5-wcd-EADERq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Kmedoids"
      ],
      "metadata": {
        "id": "posrvA4_0SoJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_excel('data_used_1622_revisi_bismillah.xlsx')\n",
        "#mask = df['kota'] != \"Kab. Kepulauan Seribu\"\n",
        "#df_filtered = df[mask]\n",
        "#df = df_filtered\n",
        "#df.drop(columns='year', inplace=True)\n",
        "df.drop(columns='Unnamed: 0', inplace=True)\n",
        "#df.drop(columns='Kepadatan Penduduk (Jiwa/Km2)', inplace=True)\n",
        "#df.drop(columns='Jumlah Pekerja (Jiwa)', inplace=True)\n",
        "#df.drop(columns='Laju Pertumbuhan PDRB (Persen)', inplace=True)\n",
        "#df.drop(columns='Jumlah Rumah Tangga', inplace=True)\n",
        "#df.drop(columns='Jumlah Penduduk 15th Bekerja (Jiwa)', inplace=True)\n",
        "\n",
        "\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "id": "pn4phWz10zvh",
        "outputId": "028c01b4-d04f-4371-e6d3-5900dcab4af4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \n",
              "0                                      83.231667                    67.060000  \n",
              "1                                      83.231667                    64.515833  \n",
              "2                                      83.231667                    64.494167  \n",
              "3                                      83.231667                    69.773333  \n",
              "4                                      83.231667                    66.565833  \n",
              "..                                           ...                          ...  \n",
              "114                                    75.026667                    73.144167  \n",
              "115                                    75.026667                    73.194167  \n",
              "116                                    75.026667                    71.383333  \n",
              "117                                    75.026667                    70.165833  \n",
              "118                                    75.026667                    74.074167  \n",
              "\n",
              "[119 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0ff1a7ce-06e3-44cc-a3e8-4baf1648511b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ff1a7ce-06e3-44cc-a3e8-4baf1648511b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0ff1a7ce-06e3-44cc-a3e8-4baf1648511b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0ff1a7ce-06e3-44cc-a3e8-4baf1648511b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-61e80af2-40b1-4362-89b3-1c25e9f02c05\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61e80af2-40b1-4362-89b3-1c25e9f02c05')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-61e80af2-40b1-4362-89b3-1c25e9f02c05 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:,3:]\n",
        "X\n",
        "random_state = 99 #jangan lupa random state"
      ],
      "metadata": {
        "id": "WxP7LNyB08SW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pip install pyclustering\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YXnTd6d82BXn",
        "outputId": "5021847b-f923-49e0-9edf-df8a38f92803"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pyclustering in /usr/local/lib/python3.10/dist-packages (0.10.1.2)\n",
            "Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from pyclustering) (1.11.3)\n",
            "Requirement already satisfied: matplotlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pyclustering) (3.7.1)\n",
            "Requirement already satisfied: numpy>=1.15.2 in /usr/local/lib/python3.10/dist-packages (from pyclustering) (1.23.5)\n",
            "Requirement already satisfied: Pillow>=5.2.0 in /usr/local/lib/python3.10/dist-packages (from pyclustering) (9.4.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.0->pyclustering) (1.1.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.0->pyclustering) (0.12.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.0->pyclustering) (4.43.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.0->pyclustering) (1.4.5)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.0->pyclustering) (23.2)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.0->pyclustering) (3.1.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.0->pyclustering) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib>=3.0.0->pyclustering) (1.16.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 3cluster"
      ],
      "metadata": {
        "id": "Je8WDQlMn24Q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_excel('data_used_1622_revisi_bismillah.xlsx')\n",
        "#mask = df['kota'] != \"Kab. Kepulauan Seribu\"\n",
        "#df_filtered = df[mask]\n",
        "#df = df_filtered\n",
        "#df.drop(columns='year', inplace=True)\n",
        "df.drop(columns='Unnamed: 0', inplace=True)\n",
        "#df.drop(columns='Kepadatan Penduduk (Jiwa/Km2)', inplace=True)\n",
        "#df.drop(columns='Jumlah Pekerja (Jiwa)', inplace=True)\n",
        "#df.drop(columns='Laju Pertumbuhan PDRB (Persen)', inplace=True)\n",
        "#df.drop(columns='Jumlah Rumah Tangga', inplace=True)\n",
        "#df.drop(columns='Jumlah Penduduk 15th Bekerja (Jiwa)', inplace=True)\n",
        "\n",
        "\n",
        "df\n",
        "\n",
        "X = df.iloc[:,3:]\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "id": "FzD-AkSjn_ur",
        "outputId": "56942f11-4bbb-4e88-d171-0f5f92c77975"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \n",
              "0                                      83.231667                    67.060000  \n",
              "1                                      83.231667                    64.515833  \n",
              "2                                      83.231667                    64.494167  \n",
              "3                                      83.231667                    69.773333  \n",
              "4                                      83.231667                    66.565833  \n",
              "..                                           ...                          ...  \n",
              "114                                    75.026667                    73.144167  \n",
              "115                                    75.026667                    73.194167  \n",
              "116                                    75.026667                    71.383333  \n",
              "117                                    75.026667                    70.165833  \n",
              "118                                    75.026667                    74.074167  \n",
              "\n",
              "[119 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0e40b3b3-0632-437f-b7e4-c7d6273c2630\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e40b3b3-0632-437f-b7e4-c7d6273c2630')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0e40b3b3-0632-437f-b7e4-c7d6273c2630 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0e40b3b3-0632-437f-b7e4-c7d6273c2630');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e842690a-739d-4c5a-836a-654b2d60397e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e842690a-739d-4c5a-836a-654b2d60397e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e842690a-739d-4c5a-836a-654b2d60397e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from pyclustering.cluster import cluster_visualizer\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Specify the number of clusters (K)\n",
        "k = 3\n",
        "\n",
        "# Create a KMedoids instance\n",
        "X_np = X.to_numpy()  # Convert DataFrame to NumPy array\n",
        "kmedoids_instance = kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), k, replace=False))\n",
        "\n",
        "# Run the K-Medoids algorithm\n",
        "kmedoids_instance.process()\n",
        "clusters = kmedoids_instance.get_clusters()\n",
        "medoids = kmedoids_instance.get_medoids()\n",
        "\n",
        "df['Cluster'] = None\n",
        "\n",
        "# Print the cluster labels\n",
        "for i, cluster in enumerate(clusters):\n",
        "    df.loc[cluster, 'Cluster'] = i + 1\n",
        "\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "id": "SiAVdv7tn24R",
        "outputId": "aac3e00e-b702-4ea8-fc6a-0b16b8eaa1ba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "..                                           ...                          ...   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "    Cluster  \n",
              "0         3  \n",
              "1         3  \n",
              "2         3  \n",
              "3         1  \n",
              "4         1  \n",
              "..      ...  \n",
              "114       3  \n",
              "115       3  \n",
              "116       3  \n",
              "117       3  \n",
              "118       2  \n",
              "\n",
              "[119 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a1903f9a-4d71-4d2c-bab6-725c2ae7cb94\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1903f9a-4d71-4d2c-bab6-725c2ae7cb94')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a1903f9a-4d71-4d2c-bab6-725c2ae7cb94 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a1903f9a-4d71-4d2c-bab6-725c2ae7cb94');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-301ef1f1-870d-4aa1-9d28-5374cd2adffd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-301ef1f1-870d-4aa1-9d28-5374cd2adffd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-301ef1f1-870d-4aa1-9d28-5374cd2adffd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "# Assuming you have already defined k, kmedoids_instance, clusters, medoids, and df as in your code.\n",
        "\n",
        "# Perform PCA to reduce the dimensionality\n",
        "pca = PCA(n_components=2)\n",
        "X_pca = pca.fit_transform(X_np)\n",
        "\n",
        "# Add PCA components to the DataFrame\n",
        "df['PCA1'] = X_pca[:, 0]\n",
        "df['PCA2'] = X_pca[:, 1]\n",
        "\n",
        "# Create a scatter plot with colors indicating cluster assignments\n",
        "plt.figure(figsize=(10, 6))\n",
        "for i, cluster in enumerate(clusters):\n",
        "    plt.scatter(df.loc[cluster, 'PCA1'], df.loc[cluster, 'PCA2'], label=f'Cluster {i + 1}')\n",
        "\n",
        "# Plot medoids as black stars\n",
        "medoid_indices = medoids\n",
        "medoid_coordinates = X_pca[medoid_indices]\n",
        "plt.scatter(medoid_coordinates[:, 0], medoid_coordinates[:, 1], marker='*', s=100, c='black', label='Medoids')\n",
        "\n",
        "plt.title('PCA Visualization of K-Medoids Clusters')\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.legend()\n",
        "plt.grid()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "nLsZkr743Yqy",
        "outputId": "4883e63e-ee8f-4de9-89f5-b31af7694cca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "outputId": "4607d7ce-1b56-44d1-8ab6-2e43a0383b1b",
        "id": "TTWsjWH3n24R"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "..                                           ...                          ...   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "    Cluster          PCA1          PCA2  \n",
              "0         3 -3.244814e+13  1.358112e+05  \n",
              "1         3 -3.343187e+13  1.348005e+05  \n",
              "2         3 -5.700715e+11 -6.392208e+05  \n",
              "3         1  3.935684e+13 -1.101763e+06  \n",
              "4         1  1.855369e+13 -1.210701e+06  \n",
              "..      ...           ...           ...  \n",
              "114       3 -2.668567e+12 -8.312352e+05  \n",
              "115       3 -4.754582e+13  4.634520e+05  \n",
              "116       3 -4.662892e+13  4.401284e+05  \n",
              "117       3 -4.439746e+13  3.676121e+05  \n",
              "118       2  3.319624e+14 -1.007023e+07  \n",
              "\n",
              "[119 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7d0170e6-ad05-42b6-9d71-3281e9993b0e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>3</td>\n",
              "      <td>-3.244814e+13</td>\n",
              "      <td>1.358112e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>3</td>\n",
              "      <td>-3.343187e+13</td>\n",
              "      <td>1.348005e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>3</td>\n",
              "      <td>-5.700715e+11</td>\n",
              "      <td>-6.392208e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>1</td>\n",
              "      <td>3.935684e+13</td>\n",
              "      <td>-1.101763e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>1</td>\n",
              "      <td>1.855369e+13</td>\n",
              "      <td>-1.210701e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>3</td>\n",
              "      <td>-2.668567e+12</td>\n",
              "      <td>-8.312352e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>3</td>\n",
              "      <td>-4.754582e+13</td>\n",
              "      <td>4.634520e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>3</td>\n",
              "      <td>-4.662892e+13</td>\n",
              "      <td>4.401284e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>3</td>\n",
              "      <td>-4.439746e+13</td>\n",
              "      <td>3.676121e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>2</td>\n",
              "      <td>3.319624e+14</td>\n",
              "      <td>-1.007023e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d0170e6-ad05-42b6-9d71-3281e9993b0e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7d0170e6-ad05-42b6-9d71-3281e9993b0e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7d0170e6-ad05-42b6-9d71-3281e9993b0e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b55b6e21-c233-4911-bed4-aba101a1b975\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b55b6e21-c233-4911-bed4-aba101a1b975')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b55b6e21-c233-4911-bed4-aba101a1b975 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Cluster'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b8bfaf66-4597-4adf-cb59-00e02e0d3b80",
        "id": "WJdA1Y72n24R"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3    95\n",
              "1    17\n",
              "2     7\n",
              "Name: Cluster, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0 = df.loc[df['Cluster']==1]\n",
        "all1 = df.loc[df['Cluster']==2]\n",
        "all2 = df.loc[df['Cluster']==3]"
      ],
      "metadata": {
        "id": "SXH7Qnl-n24S"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "efe5da0b-89d3-46e9-98f0-5471f08f376e",
        "id": "oj0qisnqn24S"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [provinsi, kota, Persentase Jalan Antar Desa Dilalui Roda 4, PDRB ADHK (Rp), Kepadatan Penduduk (Jiwa/Km2), Jumlah Motor (unit), Jumlah Pengangguran (Jiwa), Jumlah Penduduk (Jiwa), Garis Kemiskinan (Persen), Kepemilikan Rumah Sendiri (Persen), Rasio RT memiliki Spd Motor, Upah Rata - Rata per jam (Rp/jam), Rumah Tangga dengan Akses Internet (Persen), Angka Harapan Hidup (Tahun), Cluster, PCA1, PCA2]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-133c1a38-f884-4e02-8c75-a2b87d4a9f71\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-133c1a38-f884-4e02-8c75-a2b87d4a9f71')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-133c1a38-f884-4e02-8c75-a2b87d4a9f71 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-133c1a38-f884-4e02-8c75-a2b87d4a9f71');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f2e3727c-7992-4def-c112-589522b97505",
        "id": "WfiVFmWwn24S"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "provinsi                                       NaN\n",
              "kota                                           NaN\n",
              "Persentase Jalan Antar Desa Dilalui Roda 4     NaN\n",
              "PDRB ADHK (Rp)                                 NaN\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  NaN\n",
              "Jumlah Motor (unit)                            NaN\n",
              "Jumlah Pengangguran (Jiwa)                     NaN\n",
              "Jumlah Penduduk (Jiwa)                         NaN\n",
              "Garis Kemiskinan (Persen)                      NaN\n",
              "Kepemilikan Rumah Sendiri (Persen)             NaN\n",
              "Rasio RT memiliki Spd Motor                    NaN\n",
              "Upah Rata - Rata per jam (Rp/jam)              NaN\n",
              "Rumah Tangga dengan Akses Internet (Persen)    NaN\n",
              "Angka Harapan Hidup (Tahun)                    NaN\n",
              "Cluster                                        NaN\n",
              "PCA1                                           NaN\n",
              "PCA2                                           NaN\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0[['provinsi','kota']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "outputId": "40f73258-3944-47ca-a0eb-abf57b468eaf",
        "id": "fcKOEBX_n24S"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [provinsi, kota]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0388e86f-5eb3-4532-b41e-e5702b6956ac\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0388e86f-5eb3-4532-b41e-e5702b6956ac')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0388e86f-5eb3-4532-b41e-e5702b6956ac button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0388e86f-5eb3-4532-b41e-e5702b6956ac');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e75ec6b2-fdb5-458a-c707-12995cfd5a7c",
        "id": "_pZemEO3n24S"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 984
        },
        "outputId": "ac420f82-944b-4bca-e558-117dee65c516",
        "id": "NbYSj3yNn24S"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi             kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "3         Banten  Kab. Tanggerang                                   99.270100   \n",
              "4         Banten     Kota Cilegon                                  100.000000   \n",
              "7         Banten  Kota Tanggerang                                   99.358967   \n",
              "19    Jawa Barat     Kab. Bandung                                   99.404767   \n",
              "22    Jawa Barat       Kab. Bogor                                   99.693500   \n",
              "28    Jawa Barat    Kab. Karawang                                   99.352767   \n",
              "37    Jawa Barat     Kota Bandung                                   99.779233   \n",
              "39    Jawa Barat      Kota Bekasi                                  100.000000   \n",
              "52   Jawa Tengah     Kab. Cilacap                                   96.478867   \n",
              "60   Jawa Tengah       Kab. Kudus                                  100.000000   \n",
              "78   Jawa Tengah    Kota Semarang                                   99.435033   \n",
              "84    Jawa Timur  Kab. Bojonegoro                                   94.806200   \n",
              "86    Jawa Timur      Kab. Gresik                                   99.344567   \n",
              "94    Jawa Timur      Kab. Malang                                   99.829067   \n",
              "100   Jawa Timur    Kab. Pasuruan                                   99.543367   \n",
              "104   Jawa Timur    Kab. Sidoarjo                                   98.275867   \n",
              "112   Jawa Timur      Kota Kediri                                  100.000000   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "3      9.159683e+13                      3596.2500         1.222381e+06   \n",
              "4      7.079368e+13                      2439.2500         2.067328e+05   \n",
              "7      1.038955e+14                     14046.7500         9.956895e+05   \n",
              "19     7.783522e+13                      2085.2500         9.577970e+05   \n",
              "22     1.483495e+14                      2131.2500         1.404250e+06   \n",
              "28     1.559002e+14                      1407.7500         7.559610e+05   \n",
              "37     1.850610e+14                     14910.2500         1.256057e+06   \n",
              "39     6.561680e+13                     14015.0000         1.250955e+06   \n",
              "52     9.474960e+13                       803.3700         3.605370e+05   \n",
              "60     7.005176e+13                      2014.4075         2.478633e+04   \n",
              "78     1.321015e+14                      4741.1800         8.773980e+05   \n",
              "84     6.526294e+13                       566.2500         4.108000e+04   \n",
              "86     9.551984e+13                      1084.5000         6.136700e+04   \n",
              "94     6.466987e+13                       731.7500         9.429267e+04   \n",
              "100    9.977910e+13                      1092.7500         5.809033e+04   \n",
              "104    1.320949e+14                      2680.7500         1.408130e+05   \n",
              "112    8.402232e+13                      4493.0000         3.614233e+04   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "7                      89333.00            2.055251e+06   \n",
              "19                    120278.00            3.715660e+06   \n",
              "22                    310916.50            5.839390e+06   \n",
              "28                    121015.50            2.334536e+06   \n",
              "37                    127074.75            2.502052e+06   \n",
              "39                    146532.25            2.931669e+06   \n",
              "52                     71381.25            1.795050e+06   \n",
              "60                     20609.00            8.545575e+05   \n",
              "78                     72148.50            1.732847e+06   \n",
              "84                     31283.50            1.265024e+06   \n",
              "86                     47261.00            1.299902e+06   \n",
              "94                     64255.25            2.609669e+06   \n",
              "100                    51523.25            1.610123e+06   \n",
              "104                    92098.00            2.162529e+06   \n",
              "112                     7715.50            2.856215e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "7                572316.000000                           60.592195   \n",
              "19               339063.333333                           77.885703   \n",
              "22               368321.000000                           81.201374   \n",
              "28               438255.500000                           84.446690   \n",
              "37               460053.000000                           53.059216   \n",
              "39               602937.666667                           62.038584   \n",
              "52               328724.333333                           93.803447   \n",
              "60               401730.166667                           91.997631   \n",
              "78               458919.666667                           68.826660   \n",
              "84               337696.666667                           96.265710   \n",
              "86               451782.166667                           87.036100   \n",
              "94               318125.000000                           78.998459   \n",
              "100              335358.500000                           86.081302   \n",
              "104              449743.666667                           81.079978   \n",
              "112              457813.666667                           71.677772   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "7                      87.961656                            21699.0   \n",
              "19                     73.109074                            17332.5   \n",
              "22                     73.244944                            17332.5   \n",
              "28                     77.940043                            17332.5   \n",
              "37                     74.964031                            17332.5   \n",
              "39                     88.254391                            17332.5   \n",
              "52                     81.341424                            11593.0   \n",
              "60                     90.874716                            11593.0   \n",
              "78                     87.596349                            11593.0   \n",
              "84                     82.944792                            12994.5   \n",
              "86                     91.277329                            12994.5   \n",
              "94                     83.857915                            12994.5   \n",
              "100                    81.704555                            12994.5   \n",
              "104                    91.895753                            12994.5   \n",
              "112                    88.131285                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "7                                      83.231667                    72.380833   \n",
              "19                                     77.125000                    73.476667   \n",
              "22                                     77.125000                    71.097500   \n",
              "28                                     77.125000                    72.056667   \n",
              "37                                     77.125000                    74.213333   \n",
              "39                                     77.125000                    74.965000   \n",
              "52                                     74.826667                    73.612500   \n",
              "60                                     74.826667                    76.655000   \n",
              "78                                     74.826667                    77.448333   \n",
              "84                                     75.026667                    71.392500   \n",
              "86                                     75.026667                    72.564167   \n",
              "94                                     75.026667                    72.429167   \n",
              "100                                    75.026667                    70.126667   \n",
              "104                                    75.026667                    73.934167   \n",
              "112                                    75.026667                    73.918333   \n",
              "\n",
              "    Cluster          PCA1          PCA2  \n",
              "3         1  3.935684e+13 -1.101763e+06  \n",
              "4         1  1.855369e+13 -1.210701e+06  \n",
              "7         1  5.165553e+13 -1.511489e+06  \n",
              "19        1  2.559523e+13 -1.009906e+06  \n",
              "22        1  9.610952e+13 -2.737938e+06  \n",
              "28        1  1.036602e+14 -3.214847e+06  \n",
              "37        1  1.328210e+14 -3.539450e+06  \n",
              "39        1  1.337681e+13 -2.958698e+05  \n",
              "52        1  4.250961e+13 -1.864832e+06  \n",
              "60        1  1.781177e+13 -1.416359e+06  \n",
              "78        1  7.986153e+13 -2.373221e+06  \n",
              "84        1  1.302295e+13 -1.312506e+06  \n",
              "86        1  4.327985e+13 -2.129546e+06  \n",
              "94        1  1.242988e+13 -1.387175e+06  \n",
              "100       1  4.753911e+13 -2.284311e+06  \n",
              "104       1  7.985494e+13 -3.151443e+06  \n",
              "112       1  3.178233e+13 -1.729020e+06  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-84e89382-4cd1-4fd6-b742-b22b53ea4499\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.270100</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.2500</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>1</td>\n",
              "      <td>3.935684e+13</td>\n",
              "      <td>-1.101763e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.2500</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>1</td>\n",
              "      <td>1.855369e+13</td>\n",
              "      <td>-1.210701e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tanggerang</td>\n",
              "      <td>99.358967</td>\n",
              "      <td>1.038955e+14</td>\n",
              "      <td>14046.7500</td>\n",
              "      <td>9.956895e+05</td>\n",
              "      <td>89333.00</td>\n",
              "      <td>2.055251e+06</td>\n",
              "      <td>572316.000000</td>\n",
              "      <td>60.592195</td>\n",
              "      <td>87.961656</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>72.380833</td>\n",
              "      <td>1</td>\n",
              "      <td>5.165553e+13</td>\n",
              "      <td>-1.511489e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bandung</td>\n",
              "      <td>99.404767</td>\n",
              "      <td>7.783522e+13</td>\n",
              "      <td>2085.2500</td>\n",
              "      <td>9.577970e+05</td>\n",
              "      <td>120278.00</td>\n",
              "      <td>3.715660e+06</td>\n",
              "      <td>339063.333333</td>\n",
              "      <td>77.885703</td>\n",
              "      <td>73.109074</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.476667</td>\n",
              "      <td>1</td>\n",
              "      <td>2.559523e+13</td>\n",
              "      <td>-1.009906e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bogor</td>\n",
              "      <td>99.693500</td>\n",
              "      <td>1.483495e+14</td>\n",
              "      <td>2131.2500</td>\n",
              "      <td>1.404250e+06</td>\n",
              "      <td>310916.50</td>\n",
              "      <td>5.839390e+06</td>\n",
              "      <td>368321.000000</td>\n",
              "      <td>81.201374</td>\n",
              "      <td>73.244944</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.097500</td>\n",
              "      <td>1</td>\n",
              "      <td>9.610952e+13</td>\n",
              "      <td>-2.737938e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Karawang</td>\n",
              "      <td>99.352767</td>\n",
              "      <td>1.559002e+14</td>\n",
              "      <td>1407.7500</td>\n",
              "      <td>7.559610e+05</td>\n",
              "      <td>121015.50</td>\n",
              "      <td>2.334536e+06</td>\n",
              "      <td>438255.500000</td>\n",
              "      <td>84.446690</td>\n",
              "      <td>77.940043</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>72.056667</td>\n",
              "      <td>1</td>\n",
              "      <td>1.036602e+14</td>\n",
              "      <td>-3.214847e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bandung</td>\n",
              "      <td>99.779233</td>\n",
              "      <td>1.850610e+14</td>\n",
              "      <td>14910.2500</td>\n",
              "      <td>1.256057e+06</td>\n",
              "      <td>127074.75</td>\n",
              "      <td>2.502052e+06</td>\n",
              "      <td>460053.000000</td>\n",
              "      <td>53.059216</td>\n",
              "      <td>74.964031</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.213333</td>\n",
              "      <td>1</td>\n",
              "      <td>1.328210e+14</td>\n",
              "      <td>-3.539450e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bekasi</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>6.561680e+13</td>\n",
              "      <td>14015.0000</td>\n",
              "      <td>1.250955e+06</td>\n",
              "      <td>146532.25</td>\n",
              "      <td>2.931669e+06</td>\n",
              "      <td>602937.666667</td>\n",
              "      <td>62.038584</td>\n",
              "      <td>88.254391</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.965000</td>\n",
              "      <td>1</td>\n",
              "      <td>1.337681e+13</td>\n",
              "      <td>-2.958698e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Cilacap</td>\n",
              "      <td>96.478867</td>\n",
              "      <td>9.474960e+13</td>\n",
              "      <td>803.3700</td>\n",
              "      <td>3.605370e+05</td>\n",
              "      <td>71381.25</td>\n",
              "      <td>1.795050e+06</td>\n",
              "      <td>328724.333333</td>\n",
              "      <td>93.803447</td>\n",
              "      <td>81.341424</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>73.612500</td>\n",
              "      <td>1</td>\n",
              "      <td>4.250961e+13</td>\n",
              "      <td>-1.864832e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Kudus</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.005176e+13</td>\n",
              "      <td>2014.4075</td>\n",
              "      <td>2.478633e+04</td>\n",
              "      <td>20609.00</td>\n",
              "      <td>8.545575e+05</td>\n",
              "      <td>401730.166667</td>\n",
              "      <td>91.997631</td>\n",
              "      <td>90.874716</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>76.655000</td>\n",
              "      <td>1</td>\n",
              "      <td>1.781177e+13</td>\n",
              "      <td>-1.416359e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kota Semarang</td>\n",
              "      <td>99.435033</td>\n",
              "      <td>1.321015e+14</td>\n",
              "      <td>4741.1800</td>\n",
              "      <td>8.773980e+05</td>\n",
              "      <td>72148.50</td>\n",
              "      <td>1.732847e+06</td>\n",
              "      <td>458919.666667</td>\n",
              "      <td>68.826660</td>\n",
              "      <td>87.596349</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>77.448333</td>\n",
              "      <td>1</td>\n",
              "      <td>7.986153e+13</td>\n",
              "      <td>-2.373221e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Bojonegoro</td>\n",
              "      <td>94.806200</td>\n",
              "      <td>6.526294e+13</td>\n",
              "      <td>566.2500</td>\n",
              "      <td>4.108000e+04</td>\n",
              "      <td>31283.50</td>\n",
              "      <td>1.265024e+06</td>\n",
              "      <td>337696.666667</td>\n",
              "      <td>96.265710</td>\n",
              "      <td>82.944792</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.392500</td>\n",
              "      <td>1</td>\n",
              "      <td>1.302295e+13</td>\n",
              "      <td>-1.312506e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Gresik</td>\n",
              "      <td>99.344567</td>\n",
              "      <td>9.551984e+13</td>\n",
              "      <td>1084.5000</td>\n",
              "      <td>6.136700e+04</td>\n",
              "      <td>47261.00</td>\n",
              "      <td>1.299902e+06</td>\n",
              "      <td>451782.166667</td>\n",
              "      <td>87.036100</td>\n",
              "      <td>91.277329</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.564167</td>\n",
              "      <td>1</td>\n",
              "      <td>4.327985e+13</td>\n",
              "      <td>-2.129546e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Malang</td>\n",
              "      <td>99.829067</td>\n",
              "      <td>6.466987e+13</td>\n",
              "      <td>731.7500</td>\n",
              "      <td>9.429267e+04</td>\n",
              "      <td>64255.25</td>\n",
              "      <td>2.609669e+06</td>\n",
              "      <td>318125.000000</td>\n",
              "      <td>78.998459</td>\n",
              "      <td>83.857915</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.429167</td>\n",
              "      <td>1</td>\n",
              "      <td>1.242988e+13</td>\n",
              "      <td>-1.387175e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Pasuruan</td>\n",
              "      <td>99.543367</td>\n",
              "      <td>9.977910e+13</td>\n",
              "      <td>1092.7500</td>\n",
              "      <td>5.809033e+04</td>\n",
              "      <td>51523.25</td>\n",
              "      <td>1.610123e+06</td>\n",
              "      <td>335358.500000</td>\n",
              "      <td>86.081302</td>\n",
              "      <td>81.704555</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.126667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.753911e+13</td>\n",
              "      <td>-2.284311e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Sidoarjo</td>\n",
              "      <td>98.275867</td>\n",
              "      <td>1.320949e+14</td>\n",
              "      <td>2680.7500</td>\n",
              "      <td>1.408130e+05</td>\n",
              "      <td>92098.00</td>\n",
              "      <td>2.162529e+06</td>\n",
              "      <td>449743.666667</td>\n",
              "      <td>81.079978</td>\n",
              "      <td>91.895753</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.934167</td>\n",
              "      <td>1</td>\n",
              "      <td>7.985494e+13</td>\n",
              "      <td>-3.151443e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Kediri</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>8.402232e+13</td>\n",
              "      <td>4493.0000</td>\n",
              "      <td>3.614233e+04</td>\n",
              "      <td>7715.50</td>\n",
              "      <td>2.856215e+05</td>\n",
              "      <td>457813.666667</td>\n",
              "      <td>71.677772</td>\n",
              "      <td>88.131285</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.918333</td>\n",
              "      <td>1</td>\n",
              "      <td>3.178233e+13</td>\n",
              "      <td>-1.729020e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84e89382-4cd1-4fd6-b742-b22b53ea4499')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-84e89382-4cd1-4fd6-b742-b22b53ea4499 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-84e89382-4cd1-4fd6-b742-b22b53ea4499');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5c7ef416-e084-4ad5-a76d-22aa683b6533\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c7ef416-e084-4ad5-a76d-22aa683b6533')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5c7ef416-e084-4ad5-a76d-22aa683b6533 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b009491b-6f91-42d9-82d5-b9c36a9ef940",
        "id": "qRWLDETxn24S"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.909249e+01\n",
              "PDRB ADHK (Rp)                                 1.021942e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  4.284689e+03\n",
              "Jumlah Motor (unit)                            5.731959e+05\n",
              "Jumlah Pengangguran (Jiwa)                     9.277949e+04\n",
              "Jumlah Penduduk (Jiwa)                         2.171796e+06\n",
              "Garis Kemiskinan (Persen)                      4.255121e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             7.861315e+01\n",
              "Rasio RT memiliki Spd Motor                    8.418560e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.555915e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.705647e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.274176e+01\n",
              "Cluster                                        1.000000e+00\n",
              "PCA1                                           4.995416e+13\n",
              "PCA2                                          -1.898257e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2427cd87-603f-45f6-ff63-e0de4bfb8c4e",
        "id": "zw30sKEin24T"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Tanggerang', 'Kota Cilegon', 'Kota Tanggerang',\n",
              "       'Kab. Bandung', 'Kab. Bogor', 'Kab. Karawang', 'Kota Bandung',\n",
              "       'Kota Bekasi', 'Kab. Cilacap', 'Kab. Kudus', 'Kota Semarang',\n",
              "       'Kab. Bojonegoro', 'Kab. Gresik', 'Kab. Malang', 'Kab. Pasuruan',\n",
              "       'Kab. Sidoarjo', 'Kota Kediri'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 584
        },
        "outputId": "a7cd13ff-5b2d-49f1-a8f9-8deada1d7ade",
        "id": "o1o6ggEcn24T"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi                  kota  \\\n",
              "14   DKI Jakarta    Kota Jakarta Barat   \n",
              "15   DKI Jakarta    Kota Jakarta Pusat   \n",
              "16   DKI Jakarta  Kota Jakarta Selatan   \n",
              "17   DKI Jakarta    Kota Jakarta Timur   \n",
              "18   DKI Jakarta    Kota Jakarta Utara   \n",
              "21    Jawa Barat           Kab. Bekasi   \n",
              "118   Jawa Timur         Kota Surabaya   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "14                                   100.000000    3.013646e+14   \n",
              "15                                   100.000000    4.274374e+14   \n",
              "16                                   100.000000    3.974829e+14   \n",
              "17                                    98.974367    2.952711e+14   \n",
              "18                                   100.000000    3.136514e+14   \n",
              "21                                    99.287000    2.387286e+14   \n",
              "118                                   98.701300    3.842024e+14   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "14                      19838.5500         1.473874e+07   \n",
              "15                      18785.5575         1.473874e+07   \n",
              "16                      15489.6675         1.473874e+07   \n",
              "17                      15557.6800         1.473874e+07   \n",
              "18                      12345.7525         1.473874e+07   \n",
              "21                       2911.7500         1.261729e+06   \n",
              "118                      8215.5000         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "14                    103508.50            2.507990e+06   \n",
              "15                     38675.00            9.692097e+05   \n",
              "16                     89288.50            2.234179e+06   \n",
              "17                    106630.50            2.951502e+06   \n",
              "18                     83284.50            1.778313e+06   \n",
              "21                    181931.25            3.633105e+06   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "14               500273.166667                           49.711463   \n",
              "15               599169.666667                           42.309587   \n",
              "16               699988.333333                           46.733298   \n",
              "17               517909.000000                           50.373830   \n",
              "18               528524.833333                           45.078933   \n",
              "21               477325.166667                           77.196490   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "14                     81.397537                       26093.833333   \n",
              "15                     70.390338                       26093.833333   \n",
              "16                     78.396880                       26093.833333   \n",
              "17                     81.541047                       26093.833333   \n",
              "18                     76.575130                       26093.833333   \n",
              "21                     84.335558                       17332.500000   \n",
              "118                    85.464276                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "14                                     88.951667                    73.545833   \n",
              "15                                     88.951667                    74.049167   \n",
              "16                                     88.951667                    74.119167   \n",
              "17                                     88.951667                    74.404167   \n",
              "18                                     88.951667                    73.191667   \n",
              "21                                     77.125000                    73.601667   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "    Cluster          PCA1          PCA2  \n",
              "14        2  2.491246e+14  6.658414e+06  \n",
              "15        2  3.751974e+14  3.347568e+06  \n",
              "16        2  3.452429e+14  4.038955e+06  \n",
              "17        2  2.430311e+14  6.779187e+06  \n",
              "18        2  2.614114e+14  6.397872e+06  \n",
              "21        2  1.864886e+14 -5.134572e+06  \n",
              "118       2  3.319624e+14 -1.007023e+07  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-79273d43-e3e3-4e43-a4e1-2bbe828f15b8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Barat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.013646e+14</td>\n",
              "      <td>19838.5500</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>103508.50</td>\n",
              "      <td>2.507990e+06</td>\n",
              "      <td>500273.166667</td>\n",
              "      <td>49.711463</td>\n",
              "      <td>81.397537</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.545833</td>\n",
              "      <td>2</td>\n",
              "      <td>2.491246e+14</td>\n",
              "      <td>6.658414e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Pusat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.274374e+14</td>\n",
              "      <td>18785.5575</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>38675.00</td>\n",
              "      <td>9.692097e+05</td>\n",
              "      <td>599169.666667</td>\n",
              "      <td>42.309587</td>\n",
              "      <td>70.390338</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.049167</td>\n",
              "      <td>2</td>\n",
              "      <td>3.751974e+14</td>\n",
              "      <td>3.347568e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Selatan</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.974829e+14</td>\n",
              "      <td>15489.6675</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>89288.50</td>\n",
              "      <td>2.234179e+06</td>\n",
              "      <td>699988.333333</td>\n",
              "      <td>46.733298</td>\n",
              "      <td>78.396880</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.119167</td>\n",
              "      <td>2</td>\n",
              "      <td>3.452429e+14</td>\n",
              "      <td>4.038955e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Timur</td>\n",
              "      <td>98.974367</td>\n",
              "      <td>2.952711e+14</td>\n",
              "      <td>15557.6800</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>106630.50</td>\n",
              "      <td>2.951502e+06</td>\n",
              "      <td>517909.000000</td>\n",
              "      <td>50.373830</td>\n",
              "      <td>81.541047</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.404167</td>\n",
              "      <td>2</td>\n",
              "      <td>2.430311e+14</td>\n",
              "      <td>6.779187e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Utara</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.136514e+14</td>\n",
              "      <td>12345.7525</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>83284.50</td>\n",
              "      <td>1.778313e+06</td>\n",
              "      <td>528524.833333</td>\n",
              "      <td>45.078933</td>\n",
              "      <td>76.575130</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.191667</td>\n",
              "      <td>2</td>\n",
              "      <td>2.614114e+14</td>\n",
              "      <td>6.397872e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bekasi</td>\n",
              "      <td>99.287000</td>\n",
              "      <td>2.387286e+14</td>\n",
              "      <td>2911.7500</td>\n",
              "      <td>1.261729e+06</td>\n",
              "      <td>181931.25</td>\n",
              "      <td>3.633105e+06</td>\n",
              "      <td>477325.166667</td>\n",
              "      <td>77.196490</td>\n",
              "      <td>84.335558</td>\n",
              "      <td>17332.500000</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.601667</td>\n",
              "      <td>2</td>\n",
              "      <td>1.864886e+14</td>\n",
              "      <td>-5.134572e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.701300</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.5000</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>2</td>\n",
              "      <td>3.319624e+14</td>\n",
              "      <td>-1.007023e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79273d43-e3e3-4e43-a4e1-2bbe828f15b8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-79273d43-e3e3-4e43-a4e1-2bbe828f15b8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-79273d43-e3e3-4e43-a4e1-2bbe828f15b8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-34c013df-6c9f-4c05-9a81-b9c083af18e2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34c013df-6c9f-4c05-9a81-b9c083af18e2')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-34c013df-6c9f-4c05-9a81-b9c083af18e2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "53042953-ce42-4a22-b399-6b429d0000da",
        "id": "K1h-l4cWn24T"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.956610e+01\n",
              "PDRB ADHK (Rp)                                 3.368769e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.330635e+04\n",
              "Jumlah Motor (unit)                            1.074366e+07\n",
              "Jumlah Pengangguran (Jiwa)                     1.037469e+05\n",
              "Jumlah Penduduk (Jiwa)                         2.421887e+06\n",
              "Garis Kemiskinan (Persen)                      5.512630e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             5.272728e+01\n",
              "Rasio RT memiliki Spd Motor                    7.972868e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.297088e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.527286e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.385512e+01\n",
              "Cluster                                        2.000000e+00\n",
              "PCA1                                           2.846369e+14\n",
              "PCA2                                           1.716742e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4dd16dda-34aa-4a43-ea9b-bc4e8c7b9aaf",
        "id": "cUAM4dgpn24T"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Barat', 'Kota Jakarta Pusat', 'Kota Jakarta Selatan',\n",
              "       'Kota Jakarta Timur', 'Kota Jakarta Utara', 'Kab. Bekasi',\n",
              "       'Kota Surabaya'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fHDVM86goUM6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 4cluster\n"
      ],
      "metadata": {
        "id": "v-DziTJZoZEW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_excel('data_used_1622_revisi_bismillah.xlsx')\n",
        "#mask = df['kota'] != \"Kab. Kepulauan Seribu\"\n",
        "#df_filtered = df[mask]\n",
        "#df = df_filtered\n",
        "#df.drop(columns='year', inplace=True)\n",
        "df.drop(columns='Unnamed: 0', inplace=True)\n",
        "#df.drop(columns='Kepadatan Penduduk (Jiwa/Km2)', inplace=True)\n",
        "#df.drop(columns='Jumlah Pekerja (Jiwa)', inplace=True)\n",
        "#df.drop(columns='Laju Pertumbuhan PDRB (Persen)', inplace=True)\n",
        "#df.drop(columns='Jumlah Rumah Tangga', inplace=True)\n",
        "#df.drop(columns='Jumlah Penduduk 15th Bekerja (Jiwa)', inplace=True)\n",
        "\n",
        "\n",
        "df\n",
        "\n",
        "X = df.iloc[:,3:]\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "id": "FE5ZEt4UoZEX",
        "outputId": "f5c2f5a8-326e-4b87-ab68-d1de8eeeea0d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \n",
              "0                                      83.231667                    67.060000  \n",
              "1                                      83.231667                    64.515833  \n",
              "2                                      83.231667                    64.494167  \n",
              "3                                      83.231667                    69.773333  \n",
              "4                                      83.231667                    66.565833  \n",
              "..                                           ...                          ...  \n",
              "114                                    75.026667                    73.144167  \n",
              "115                                    75.026667                    73.194167  \n",
              "116                                    75.026667                    71.383333  \n",
              "117                                    75.026667                    70.165833  \n",
              "118                                    75.026667                    74.074167  \n",
              "\n",
              "[119 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f1f34493-3f0d-40e6-86c0-5baacf568ff4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1f34493-3f0d-40e6-86c0-5baacf568ff4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f1f34493-3f0d-40e6-86c0-5baacf568ff4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f1f34493-3f0d-40e6-86c0-5baacf568ff4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-50d9720f-196b-4b9e-8abd-77315643785f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50d9720f-196b-4b9e-8abd-77315643785f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-50d9720f-196b-4b9e-8abd-77315643785f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from pyclustering.cluster import cluster_visualizer\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Specify the number of clusters (K)\n",
        "k = 4\n",
        "\n",
        "# Create a KMedoids instance\n",
        "X_np = X.to_numpy()  # Convert DataFrame to NumPy array\n",
        "kmedoids_instance = kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), k, replace=False))\n",
        "\n",
        "# Run the K-Medoids algorithm\n",
        "kmedoids_instance.process()\n",
        "clusters = kmedoids_instance.get_clusters()\n",
        "medoids = kmedoids_instance.get_medoids()\n",
        "\n",
        "df['Cluster'] = None\n",
        "\n",
        "# Print the cluster labels\n",
        "for i, cluster in enumerate(clusters):\n",
        "    df.loc[cluster, 'Cluster'] = i + 1\n",
        "\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "id": "MwfB8Q7rogSn",
        "outputId": "37852f36-211b-4317-ffd4-8be32195522a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "..                                           ...                          ...   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "    Cluster  \n",
              "0         1  \n",
              "1         1  \n",
              "2         1  \n",
              "3         2  \n",
              "4         2  \n",
              "..      ...  \n",
              "114       1  \n",
              "115       1  \n",
              "116       1  \n",
              "117       1  \n",
              "118       4  \n",
              "\n",
              "[119 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f565812f-420a-46de-bda2-b35abdc7b189\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f565812f-420a-46de-bda2-b35abdc7b189')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f565812f-420a-46de-bda2-b35abdc7b189 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f565812f-420a-46de-bda2-b35abdc7b189');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5e2a78db-6639-4030-b773-fe4484db0123\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e2a78db-6639-4030-b773-fe4484db0123')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5e2a78db-6639-4030-b773-fe4484db0123 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "# Assuming you have already defined k, kmedoids_instance, clusters, medoids, and df as in your code.\n",
        "\n",
        "# Perform PCA to reduce the dimensionality\n",
        "pca = PCA(n_components=2)\n",
        "X_pca = pca.fit_transform(X_np)\n",
        "\n",
        "# Add PCA components to the DataFrame\n",
        "df['PCA1'] = X_pca[:, 0]\n",
        "df['PCA2'] = X_pca[:, 1]\n",
        "\n",
        "# Create a scatter plot with colors indicating cluster assignments\n",
        "plt.figure(figsize=(10, 6))\n",
        "for i, cluster in enumerate(clusters):\n",
        "    plt.scatter(df.loc[cluster, 'PCA1'], df.loc[cluster, 'PCA2'], label=f'Cluster {i + 1}')\n",
        "\n",
        "# Plot medoids as black stars\n",
        "medoid_indices = medoids\n",
        "medoid_coordinates = X_pca[medoid_indices]\n",
        "plt.scatter(medoid_coordinates[:, 0], medoid_coordinates[:, 1], marker='*', s=100, c='black', label='Medoids')\n",
        "\n",
        "plt.title('PCA Visualization of K-Medoids Clusters')\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.legend()\n",
        "plt.grid()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "glWn7sW736GH",
        "outputId": "27ce36ac-6974-4fda-edfc-a154b2683353"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Cluster'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "759b05b2-6f08-4cb2-d62d-f6834acd3d18",
        "id": "-e1iSAVdoZEX"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1    95\n",
              "2    17\n",
              "3     4\n",
              "4     3\n",
              "Name: Cluster, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0 = df.loc[df['Cluster']==0]\n",
        "all1 = df.loc[df['Cluster']==1]\n",
        "all2 = df.loc[df['Cluster']==2]"
      ],
      "metadata": {
        "id": "Mshwjo4LoZEX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "12367f2e-edac-4d99-845e-9d07f77d79c9",
        "id": "ozo6Fb48oZEX"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [provinsi, kota, Persentase Jalan Antar Desa Dilalui Roda 4, PDRB ADHK (Rp), Kepadatan Penduduk (Jiwa/Km2), Jumlah Motor (unit), Jumlah Pengangguran (Jiwa), Jumlah Penduduk (Jiwa), Garis Kemiskinan (Persen), Kepemilikan Rumah Sendiri (Persen), Rasio RT memiliki Spd Motor, Upah Rata - Rata per jam (Rp/jam), Rumah Tangga dengan Akses Internet (Persen), Angka Harapan Hidup (Tahun), Cluster, PCA1, PCA2]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf849130-a64a-48af-865c-b32b67f1c574\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf849130-a64a-48af-865c-b32b67f1c574')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cf849130-a64a-48af-865c-b32b67f1c574 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cf849130-a64a-48af-865c-b32b67f1c574');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3569e6ed-9f8c-4124-d116-c422715d3d50",
        "id": "ekB3ezKcoZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "provinsi                                       NaN\n",
              "kota                                           NaN\n",
              "Persentase Jalan Antar Desa Dilalui Roda 4     NaN\n",
              "PDRB ADHK (Rp)                                 NaN\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  NaN\n",
              "Jumlah Motor (unit)                            NaN\n",
              "Jumlah Pengangguran (Jiwa)                     NaN\n",
              "Jumlah Penduduk (Jiwa)                         NaN\n",
              "Garis Kemiskinan (Persen)                      NaN\n",
              "Kepemilikan Rumah Sendiri (Persen)             NaN\n",
              "Rasio RT memiliki Spd Motor                    NaN\n",
              "Upah Rata - Rata per jam (Rp/jam)              NaN\n",
              "Rumah Tangga dengan Akses Internet (Persen)    NaN\n",
              "Angka Harapan Hidup (Tahun)                    NaN\n",
              "Cluster                                        NaN\n",
              "PCA1                                           NaN\n",
              "PCA2                                           NaN\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0[['provinsi','kota']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "outputId": "83687585-9327-4a0f-e717-6d9e25f70d92",
        "id": "Id4whe0ToZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [provinsi, kota]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c97283dc-752e-4454-be36-2e3f1ab6ee9e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c97283dc-752e-4454-be36-2e3f1ab6ee9e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c97283dc-752e-4454-be36-2e3f1ab6ee9e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c97283dc-752e-4454-be36-2e3f1ab6ee9e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "97ac4a03-9a7d-4a5f-f016-4d1e19164f8e",
        "id": "fX6ta9s8oZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "outputId": "8f7bf744-62f5-41ee-f72f-2e9e9ca8f434",
        "id": "Z_ab2JWpoZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi                    kota  \\\n",
              "0        Banten              Kab. Lebak   \n",
              "1        Banten         Kab. Pandeglang   \n",
              "2        Banten             Kab. Serang   \n",
              "5        Banten             Kota Serang   \n",
              "6        Banten  Kota Tangerang Selatan   \n",
              "..          ...                     ...   \n",
              "113  Jawa Timur             Kota Madiun   \n",
              "114  Jawa Timur             Kota Malang   \n",
              "115  Jawa Timur          Kota Mojokerto   \n",
              "116  Jawa Timur           Kota Pasuruan   \n",
              "117  Jawa Timur        Kota Probolinggo   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "0                                       94.2995    1.979186e+13   \n",
              "1                                       92.0354    1.880812e+13   \n",
              "2                                       98.7730    5.166992e+13   \n",
              "5                                      100.0000    2.154588e+13   \n",
              "6                                       99.3827    5.644622e+13   \n",
              "..                                          ...             ...   \n",
              "113                                    100.0000    1.002101e+13   \n",
              "114                                    100.0000    4.957143e+13   \n",
              "115                                    100.0000    4.694168e+12   \n",
              "116                                     99.0196    5.611072e+12   \n",
              "117                                    100.0000    7.842530e+12   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0                           376.75        245416.500000   \n",
              "1                           439.25        206134.250000   \n",
              "2                           863.25        373737.250000   \n",
              "5                          2519.50        196289.250000   \n",
              "6                         11350.75        677773.750000   \n",
              "..                             ...                  ...   \n",
              "113                        5201.25         17280.666667   \n",
              "114                        5944.50         44834.333333   \n",
              "115                        7752.00         24618.333333   \n",
              "116                        5620.00         34564.666667   \n",
              "117                        4131.25         26674.000000   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "5                      27425.75            6.864417e+05   \n",
              "6                      54459.75            1.540204e+06   \n",
              "..                          ...                     ...   \n",
              "113                     5829.75            1.829170e+05   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "5                358571.333333                           85.084066   \n",
              "6                569896.000000                           77.073268   \n",
              "..                         ...                                 ...   \n",
              "113              453130.166667                           63.273951   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "5                      85.493165                            21699.0   \n",
              "6                      88.132278                            21699.0   \n",
              "..                           ...                                ...   \n",
              "113                    85.444512                            12994.5   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "5                                      83.231667                    67.822500   \n",
              "6                                      83.231667                    71.526667   \n",
              "..                                           ...                          ...   \n",
              "113                                    75.026667                    72.712500   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "\n",
              "    Cluster          PCA1           PCA2  \n",
              "0         1 -3.244814e+13  135811.241125  \n",
              "1         1 -3.343187e+13  134800.512813  \n",
              "2         1 -5.700715e+11 -639220.812155  \n",
              "5         1 -3.069411e+13  109230.149271  \n",
              "6         1  4.206230e+12 -464053.269186  \n",
              "..      ...           ...            ...  \n",
              "113       1 -4.221899e+13  303658.722930  \n",
              "114       1 -2.668567e+12 -831235.209997  \n",
              "115       1 -4.754582e+13  463451.997622  \n",
              "116       1 -4.662892e+13  440128.408479  \n",
              "117       1 -4.439746e+13  367612.050714  \n",
              "\n",
              "[95 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61d27388-6e9f-47ba-9c6c-51478c45d83f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>245416.500000</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.244814e+13</td>\n",
              "      <td>135811.241125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>206134.250000</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.343187e+13</td>\n",
              "      <td>134800.512813</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>373737.250000</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>1</td>\n",
              "      <td>-5.700715e+11</td>\n",
              "      <td>-639220.812155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>2.154588e+13</td>\n",
              "      <td>2519.50</td>\n",
              "      <td>196289.250000</td>\n",
              "      <td>27425.75</td>\n",
              "      <td>6.864417e+05</td>\n",
              "      <td>358571.333333</td>\n",
              "      <td>85.084066</td>\n",
              "      <td>85.493165</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.822500</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.069411e+13</td>\n",
              "      <td>109230.149271</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tangerang Selatan</td>\n",
              "      <td>99.3827</td>\n",
              "      <td>5.644622e+13</td>\n",
              "      <td>11350.75</td>\n",
              "      <td>677773.750000</td>\n",
              "      <td>54459.75</td>\n",
              "      <td>1.540204e+06</td>\n",
              "      <td>569896.000000</td>\n",
              "      <td>77.073268</td>\n",
              "      <td>88.132278</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>71.526667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.206230e+12</td>\n",
              "      <td>-464053.269186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>1.002101e+13</td>\n",
              "      <td>5201.25</td>\n",
              "      <td>17280.666667</td>\n",
              "      <td>5829.75</td>\n",
              "      <td>1.829170e+05</td>\n",
              "      <td>453130.166667</td>\n",
              "      <td>63.273951</td>\n",
              "      <td>85.444512</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.712500</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.221899e+13</td>\n",
              "      <td>303658.722930</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>44834.333333</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>1</td>\n",
              "      <td>-2.668567e+12</td>\n",
              "      <td>-831235.209997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>24618.333333</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.754582e+13</td>\n",
              "      <td>463451.997622</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>34564.666667</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.662892e+13</td>\n",
              "      <td>440128.408479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>26674.000000</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.439746e+13</td>\n",
              "      <td>367612.050714</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>95 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61d27388-6e9f-47ba-9c6c-51478c45d83f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-61d27388-6e9f-47ba-9c6c-51478c45d83f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-61d27388-6e9f-47ba-9c6c-51478c45d83f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e0cec4e8-d357-4975-8034-110889ea95cc\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0cec4e8-d357-4975-8034-110889ea95cc')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e0cec4e8-d357-4975-8034-110889ea95cc button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f120b68b-6d02-4ab1-af51-f2012aac3340",
        "id": "sO4GuKP-oZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.817961e+01\n",
              "PDRB ADHK (Rp)                                 2.232758e+13\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  2.345918e+03\n",
              "Jumlah Motor (unit)                            3.577611e+05\n",
              "Jumlah Pengangguran (Jiwa)                     3.170657e+04\n",
              "Jumlah Penduduk (Jiwa)                         1.015344e+06\n",
              "Garis Kemiskinan (Persen)                      3.749444e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             8.531855e+01\n",
              "Rasio RT memiliki Spd Motor                    7.843288e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.410440e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.647709e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.248224e+01\n",
              "Cluster                                        1.000000e+00\n",
              "PCA1                                          -2.991241e+13\n",
              "PCA2                                           2.131914e+05\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "524c228c-c722-44c1-c698-e324e87006f4",
        "id": "VPvmVdM7oZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Lebak', 'Kab. Pandeglang', 'Kab. Serang', 'Kota Serang',\n",
              "       'Kota Tangerang Selatan', 'Kab. Bantul', 'Kab. Gunung Kidul',\n",
              "       'Kab. Kulonprogo', 'Kab. Sleman', 'Kota Yogyakarta',\n",
              "       'Kab. Kepulauan Seribu', 'Kab. Bandung Barat', 'Kab. Ciamis',\n",
              "       'Kab. Cianjur', 'Kab. Cirebon', 'Kab. Garut', 'Kab. Indramayu',\n",
              "       'Kab. Kuningan', 'Kab. Majalengka', 'Kab. Pangandaran',\n",
              "       'Kab. Purwakarta', 'Kab. Subang', 'Kab. Sukabumi', 'Kab. Sumedang',\n",
              "       'Kab. Tasikmalaya', 'Kota Banjar', 'Kota Bogor', 'Kota Cimahi',\n",
              "       'Kota Cirebon', 'Kota Depok', 'Kota Sukabumi', 'Kota Tasikmalaya',\n",
              "       'Kab. Banjarnegara', 'Kab. Banyumas', 'Kab. Batang', 'Kab. Blora',\n",
              "       'Kab. Boyolali', 'Kab. Brebes', 'Kab. Demak', 'Kab. Grobogan',\n",
              "       'Kab. Jepara', 'Kab. Karanganyar', 'Kab. Kebumen', 'Kab. Kendal',\n",
              "       'Kab. Klaten', 'Kab. Magelang', 'Kab. Pati', 'Kab. Pekalongan',\n",
              "       'Kab. Pemalang', 'Kab. Purbalingga', 'Kab. Purworejo',\n",
              "       'Kab. Rembang', 'Kab. Semarang', 'Kab. Sragen', 'Kab. Sukoharjo',\n",
              "       'Kab. Tegal', 'Kab. Temanggung', 'Kab. Wonogiri', 'Kab. Wonosobo',\n",
              "       'Kota Magelang', 'Kota Pekalongan', 'Kota Salatiga',\n",
              "       'Kota Surakarta', 'Kota Tegal', 'Kab. Bangkalan',\n",
              "       'Kab. Banyuwangi', 'Kab. Blitar', 'Kab. Bondowoso', 'Kab. Jember',\n",
              "       'Kab. Jombang', 'Kab. Kediri', 'Kab. Lamongan', 'Kab. Lumajang',\n",
              "       'Kab. Madiun', 'Kab. Magetan', 'Kab. Mojokerto', 'Kab. Nganjuk',\n",
              "       'Kab. Ngawi', 'Kab. Pacitan', 'Kab. Pamekasan', 'Kab. Ponorogo',\n",
              "       'Kab. Probolinggo', 'Kab. Sampang', 'Kab. Situbondo',\n",
              "       'Kab. Sumenep', 'Kab. Trenggalek', 'Kab. Tuban',\n",
              "       'Kab. Tulungagung', 'Kota Batu', 'Kota Blitar', 'Kota Madiun',\n",
              "       'Kota Malang', 'Kota Mojokerto', 'Kota Pasuruan',\n",
              "       'Kota Probolinggo'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 984
        },
        "outputId": "c0c99d60-ac34-43fc-ced4-ccbd41c97589",
        "id": "hscSZFoKoZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi             kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "3         Banten  Kab. Tanggerang                                   99.270100   \n",
              "4         Banten     Kota Cilegon                                  100.000000   \n",
              "7         Banten  Kota Tanggerang                                   99.358967   \n",
              "19    Jawa Barat     Kab. Bandung                                   99.404767   \n",
              "22    Jawa Barat       Kab. Bogor                                   99.693500   \n",
              "28    Jawa Barat    Kab. Karawang                                   99.352767   \n",
              "37    Jawa Barat     Kota Bandung                                   99.779233   \n",
              "39    Jawa Barat      Kota Bekasi                                  100.000000   \n",
              "52   Jawa Tengah     Kab. Cilacap                                   96.478867   \n",
              "60   Jawa Tengah       Kab. Kudus                                  100.000000   \n",
              "78   Jawa Tengah    Kota Semarang                                   99.435033   \n",
              "84    Jawa Timur  Kab. Bojonegoro                                   94.806200   \n",
              "86    Jawa Timur      Kab. Gresik                                   99.344567   \n",
              "94    Jawa Timur      Kab. Malang                                   99.829067   \n",
              "100   Jawa Timur    Kab. Pasuruan                                   99.543367   \n",
              "104   Jawa Timur    Kab. Sidoarjo                                   98.275867   \n",
              "112   Jawa Timur      Kota Kediri                                  100.000000   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "3      9.159683e+13                      3596.2500         1.222381e+06   \n",
              "4      7.079368e+13                      2439.2500         2.067328e+05   \n",
              "7      1.038955e+14                     14046.7500         9.956895e+05   \n",
              "19     7.783522e+13                      2085.2500         9.577970e+05   \n",
              "22     1.483495e+14                      2131.2500         1.404250e+06   \n",
              "28     1.559002e+14                      1407.7500         7.559610e+05   \n",
              "37     1.850610e+14                     14910.2500         1.256057e+06   \n",
              "39     6.561680e+13                     14015.0000         1.250955e+06   \n",
              "52     9.474960e+13                       803.3700         3.605370e+05   \n",
              "60     7.005176e+13                      2014.4075         2.478633e+04   \n",
              "78     1.321015e+14                      4741.1800         8.773980e+05   \n",
              "84     6.526294e+13                       566.2500         4.108000e+04   \n",
              "86     9.551984e+13                      1084.5000         6.136700e+04   \n",
              "94     6.466987e+13                       731.7500         9.429267e+04   \n",
              "100    9.977910e+13                      1092.7500         5.809033e+04   \n",
              "104    1.320949e+14                      2680.7500         1.408130e+05   \n",
              "112    8.402232e+13                      4493.0000         3.614233e+04   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "7                      89333.00            2.055251e+06   \n",
              "19                    120278.00            3.715660e+06   \n",
              "22                    310916.50            5.839390e+06   \n",
              "28                    121015.50            2.334536e+06   \n",
              "37                    127074.75            2.502052e+06   \n",
              "39                    146532.25            2.931669e+06   \n",
              "52                     71381.25            1.795050e+06   \n",
              "60                     20609.00            8.545575e+05   \n",
              "78                     72148.50            1.732847e+06   \n",
              "84                     31283.50            1.265024e+06   \n",
              "86                     47261.00            1.299902e+06   \n",
              "94                     64255.25            2.609669e+06   \n",
              "100                    51523.25            1.610123e+06   \n",
              "104                    92098.00            2.162529e+06   \n",
              "112                     7715.50            2.856215e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "7                572316.000000                           60.592195   \n",
              "19               339063.333333                           77.885703   \n",
              "22               368321.000000                           81.201374   \n",
              "28               438255.500000                           84.446690   \n",
              "37               460053.000000                           53.059216   \n",
              "39               602937.666667                           62.038584   \n",
              "52               328724.333333                           93.803447   \n",
              "60               401730.166667                           91.997631   \n",
              "78               458919.666667                           68.826660   \n",
              "84               337696.666667                           96.265710   \n",
              "86               451782.166667                           87.036100   \n",
              "94               318125.000000                           78.998459   \n",
              "100              335358.500000                           86.081302   \n",
              "104              449743.666667                           81.079978   \n",
              "112              457813.666667                           71.677772   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "7                      87.961656                            21699.0   \n",
              "19                     73.109074                            17332.5   \n",
              "22                     73.244944                            17332.5   \n",
              "28                     77.940043                            17332.5   \n",
              "37                     74.964031                            17332.5   \n",
              "39                     88.254391                            17332.5   \n",
              "52                     81.341424                            11593.0   \n",
              "60                     90.874716                            11593.0   \n",
              "78                     87.596349                            11593.0   \n",
              "84                     82.944792                            12994.5   \n",
              "86                     91.277329                            12994.5   \n",
              "94                     83.857915                            12994.5   \n",
              "100                    81.704555                            12994.5   \n",
              "104                    91.895753                            12994.5   \n",
              "112                    88.131285                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "7                                      83.231667                    72.380833   \n",
              "19                                     77.125000                    73.476667   \n",
              "22                                     77.125000                    71.097500   \n",
              "28                                     77.125000                    72.056667   \n",
              "37                                     77.125000                    74.213333   \n",
              "39                                     77.125000                    74.965000   \n",
              "52                                     74.826667                    73.612500   \n",
              "60                                     74.826667                    76.655000   \n",
              "78                                     74.826667                    77.448333   \n",
              "84                                     75.026667                    71.392500   \n",
              "86                                     75.026667                    72.564167   \n",
              "94                                     75.026667                    72.429167   \n",
              "100                                    75.026667                    70.126667   \n",
              "104                                    75.026667                    73.934167   \n",
              "112                                    75.026667                    73.918333   \n",
              "\n",
              "    Cluster          PCA1          PCA2  \n",
              "3         2  3.935684e+13 -1.101763e+06  \n",
              "4         2  1.855369e+13 -1.210701e+06  \n",
              "7         2  5.165553e+13 -1.511489e+06  \n",
              "19        2  2.559523e+13 -1.009906e+06  \n",
              "22        2  9.610952e+13 -2.737938e+06  \n",
              "28        2  1.036602e+14 -3.214847e+06  \n",
              "37        2  1.328210e+14 -3.539450e+06  \n",
              "39        2  1.337681e+13 -2.958698e+05  \n",
              "52        2  4.250961e+13 -1.864832e+06  \n",
              "60        2  1.781177e+13 -1.416359e+06  \n",
              "78        2  7.986153e+13 -2.373221e+06  \n",
              "84        2  1.302295e+13 -1.312506e+06  \n",
              "86        2  4.327985e+13 -2.129546e+06  \n",
              "94        2  1.242988e+13 -1.387175e+06  \n",
              "100       2  4.753911e+13 -2.284311e+06  \n",
              "104       2  7.985494e+13 -3.151443e+06  \n",
              "112       2  3.178233e+13 -1.729020e+06  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f14d9063-4397-43f0-8f4c-9402f77b4436\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.270100</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.2500</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>2</td>\n",
              "      <td>3.935684e+13</td>\n",
              "      <td>-1.101763e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.2500</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>2</td>\n",
              "      <td>1.855369e+13</td>\n",
              "      <td>-1.210701e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Tanggerang</td>\n",
              "      <td>99.358967</td>\n",
              "      <td>1.038955e+14</td>\n",
              "      <td>14046.7500</td>\n",
              "      <td>9.956895e+05</td>\n",
              "      <td>89333.00</td>\n",
              "      <td>2.055251e+06</td>\n",
              "      <td>572316.000000</td>\n",
              "      <td>60.592195</td>\n",
              "      <td>87.961656</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>72.380833</td>\n",
              "      <td>2</td>\n",
              "      <td>5.165553e+13</td>\n",
              "      <td>-1.511489e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bandung</td>\n",
              "      <td>99.404767</td>\n",
              "      <td>7.783522e+13</td>\n",
              "      <td>2085.2500</td>\n",
              "      <td>9.577970e+05</td>\n",
              "      <td>120278.00</td>\n",
              "      <td>3.715660e+06</td>\n",
              "      <td>339063.333333</td>\n",
              "      <td>77.885703</td>\n",
              "      <td>73.109074</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.476667</td>\n",
              "      <td>2</td>\n",
              "      <td>2.559523e+13</td>\n",
              "      <td>-1.009906e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bogor</td>\n",
              "      <td>99.693500</td>\n",
              "      <td>1.483495e+14</td>\n",
              "      <td>2131.2500</td>\n",
              "      <td>1.404250e+06</td>\n",
              "      <td>310916.50</td>\n",
              "      <td>5.839390e+06</td>\n",
              "      <td>368321.000000</td>\n",
              "      <td>81.201374</td>\n",
              "      <td>73.244944</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.097500</td>\n",
              "      <td>2</td>\n",
              "      <td>9.610952e+13</td>\n",
              "      <td>-2.737938e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Karawang</td>\n",
              "      <td>99.352767</td>\n",
              "      <td>1.559002e+14</td>\n",
              "      <td>1407.7500</td>\n",
              "      <td>7.559610e+05</td>\n",
              "      <td>121015.50</td>\n",
              "      <td>2.334536e+06</td>\n",
              "      <td>438255.500000</td>\n",
              "      <td>84.446690</td>\n",
              "      <td>77.940043</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>72.056667</td>\n",
              "      <td>2</td>\n",
              "      <td>1.036602e+14</td>\n",
              "      <td>-3.214847e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bandung</td>\n",
              "      <td>99.779233</td>\n",
              "      <td>1.850610e+14</td>\n",
              "      <td>14910.2500</td>\n",
              "      <td>1.256057e+06</td>\n",
              "      <td>127074.75</td>\n",
              "      <td>2.502052e+06</td>\n",
              "      <td>460053.000000</td>\n",
              "      <td>53.059216</td>\n",
              "      <td>74.964031</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.213333</td>\n",
              "      <td>2</td>\n",
              "      <td>1.328210e+14</td>\n",
              "      <td>-3.539450e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bekasi</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>6.561680e+13</td>\n",
              "      <td>14015.0000</td>\n",
              "      <td>1.250955e+06</td>\n",
              "      <td>146532.25</td>\n",
              "      <td>2.931669e+06</td>\n",
              "      <td>602937.666667</td>\n",
              "      <td>62.038584</td>\n",
              "      <td>88.254391</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.965000</td>\n",
              "      <td>2</td>\n",
              "      <td>1.337681e+13</td>\n",
              "      <td>-2.958698e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Cilacap</td>\n",
              "      <td>96.478867</td>\n",
              "      <td>9.474960e+13</td>\n",
              "      <td>803.3700</td>\n",
              "      <td>3.605370e+05</td>\n",
              "      <td>71381.25</td>\n",
              "      <td>1.795050e+06</td>\n",
              "      <td>328724.333333</td>\n",
              "      <td>93.803447</td>\n",
              "      <td>81.341424</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>73.612500</td>\n",
              "      <td>2</td>\n",
              "      <td>4.250961e+13</td>\n",
              "      <td>-1.864832e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kab. Kudus</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.005176e+13</td>\n",
              "      <td>2014.4075</td>\n",
              "      <td>2.478633e+04</td>\n",
              "      <td>20609.00</td>\n",
              "      <td>8.545575e+05</td>\n",
              "      <td>401730.166667</td>\n",
              "      <td>91.997631</td>\n",
              "      <td>90.874716</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>76.655000</td>\n",
              "      <td>2</td>\n",
              "      <td>1.781177e+13</td>\n",
              "      <td>-1.416359e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kota Semarang</td>\n",
              "      <td>99.435033</td>\n",
              "      <td>1.321015e+14</td>\n",
              "      <td>4741.1800</td>\n",
              "      <td>8.773980e+05</td>\n",
              "      <td>72148.50</td>\n",
              "      <td>1.732847e+06</td>\n",
              "      <td>458919.666667</td>\n",
              "      <td>68.826660</td>\n",
              "      <td>87.596349</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>77.448333</td>\n",
              "      <td>2</td>\n",
              "      <td>7.986153e+13</td>\n",
              "      <td>-2.373221e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Bojonegoro</td>\n",
              "      <td>94.806200</td>\n",
              "      <td>6.526294e+13</td>\n",
              "      <td>566.2500</td>\n",
              "      <td>4.108000e+04</td>\n",
              "      <td>31283.50</td>\n",
              "      <td>1.265024e+06</td>\n",
              "      <td>337696.666667</td>\n",
              "      <td>96.265710</td>\n",
              "      <td>82.944792</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.392500</td>\n",
              "      <td>2</td>\n",
              "      <td>1.302295e+13</td>\n",
              "      <td>-1.312506e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Gresik</td>\n",
              "      <td>99.344567</td>\n",
              "      <td>9.551984e+13</td>\n",
              "      <td>1084.5000</td>\n",
              "      <td>6.136700e+04</td>\n",
              "      <td>47261.00</td>\n",
              "      <td>1.299902e+06</td>\n",
              "      <td>451782.166667</td>\n",
              "      <td>87.036100</td>\n",
              "      <td>91.277329</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.564167</td>\n",
              "      <td>2</td>\n",
              "      <td>4.327985e+13</td>\n",
              "      <td>-2.129546e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Malang</td>\n",
              "      <td>99.829067</td>\n",
              "      <td>6.466987e+13</td>\n",
              "      <td>731.7500</td>\n",
              "      <td>9.429267e+04</td>\n",
              "      <td>64255.25</td>\n",
              "      <td>2.609669e+06</td>\n",
              "      <td>318125.000000</td>\n",
              "      <td>78.998459</td>\n",
              "      <td>83.857915</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.429167</td>\n",
              "      <td>2</td>\n",
              "      <td>1.242988e+13</td>\n",
              "      <td>-1.387175e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Pasuruan</td>\n",
              "      <td>99.543367</td>\n",
              "      <td>9.977910e+13</td>\n",
              "      <td>1092.7500</td>\n",
              "      <td>5.809033e+04</td>\n",
              "      <td>51523.25</td>\n",
              "      <td>1.610123e+06</td>\n",
              "      <td>335358.500000</td>\n",
              "      <td>86.081302</td>\n",
              "      <td>81.704555</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.126667</td>\n",
              "      <td>2</td>\n",
              "      <td>4.753911e+13</td>\n",
              "      <td>-2.284311e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Sidoarjo</td>\n",
              "      <td>98.275867</td>\n",
              "      <td>1.320949e+14</td>\n",
              "      <td>2680.7500</td>\n",
              "      <td>1.408130e+05</td>\n",
              "      <td>92098.00</td>\n",
              "      <td>2.162529e+06</td>\n",
              "      <td>449743.666667</td>\n",
              "      <td>81.079978</td>\n",
              "      <td>91.895753</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.934167</td>\n",
              "      <td>2</td>\n",
              "      <td>7.985494e+13</td>\n",
              "      <td>-3.151443e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Kediri</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>8.402232e+13</td>\n",
              "      <td>4493.0000</td>\n",
              "      <td>3.614233e+04</td>\n",
              "      <td>7715.50</td>\n",
              "      <td>2.856215e+05</td>\n",
              "      <td>457813.666667</td>\n",
              "      <td>71.677772</td>\n",
              "      <td>88.131285</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.918333</td>\n",
              "      <td>2</td>\n",
              "      <td>3.178233e+13</td>\n",
              "      <td>-1.729020e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f14d9063-4397-43f0-8f4c-9402f77b4436')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f14d9063-4397-43f0-8f4c-9402f77b4436 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f14d9063-4397-43f0-8f4c-9402f77b4436');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9910928e-4a12-4c75-92f6-1004a7b4d1fe\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9910928e-4a12-4c75-92f6-1004a7b4d1fe')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9910928e-4a12-4c75-92f6-1004a7b4d1fe button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d841d1f5-bc53-47c3-cba9-6bc7e50dbd10",
        "id": "X7JCl5w2oZEY"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.909249e+01\n",
              "PDRB ADHK (Rp)                                 1.021942e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  4.284689e+03\n",
              "Jumlah Motor (unit)                            5.731959e+05\n",
              "Jumlah Pengangguran (Jiwa)                     9.277949e+04\n",
              "Jumlah Penduduk (Jiwa)                         2.171796e+06\n",
              "Garis Kemiskinan (Persen)                      4.255121e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             7.861315e+01\n",
              "Rasio RT memiliki Spd Motor                    8.418560e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.555915e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.705647e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.274176e+01\n",
              "Cluster                                        2.000000e+00\n",
              "PCA1                                           4.995416e+13\n",
              "PCA2                                          -1.898257e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4a0e6dd4-30c0-44ee-cdad-96c6c6d12aaa",
        "id": "GO-w7SpToZEZ"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Tanggerang', 'Kota Cilegon', 'Kota Tanggerang',\n",
              "       'Kab. Bandung', 'Kab. Bogor', 'Kab. Karawang', 'Kota Bandung',\n",
              "       'Kota Bekasi', 'Kab. Cilacap', 'Kab. Kudus', 'Kota Semarang',\n",
              "       'Kab. Bojonegoro', 'Kab. Gresik', 'Kab. Malang', 'Kab. Pasuruan',\n",
              "       'Kab. Sidoarjo', 'Kota Kediri'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3 = df.loc[df['Cluster']==3]\n",
        "all3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 403
        },
        "outputId": "89dc297b-1426-4bb4-859d-aea0f2846a5b",
        "id": "X-yVVMJgoZEZ"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi                kota  \\\n",
              "14  DKI Jakarta  Kota Jakarta Barat   \n",
              "17  DKI Jakarta  Kota Jakarta Timur   \n",
              "18  DKI Jakarta  Kota Jakarta Utara   \n",
              "21   Jawa Barat         Kab. Bekasi   \n",
              "\n",
              "    Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "14                                  100.000000    3.013646e+14   \n",
              "17                                   98.974367    2.952711e+14   \n",
              "18                                  100.000000    3.136514e+14   \n",
              "21                                   99.287000    2.387286e+14   \n",
              "\n",
              "    Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "14                     19838.5500         1.473874e+07   \n",
              "17                     15557.6800         1.473874e+07   \n",
              "18                     12345.7525         1.473874e+07   \n",
              "21                      2911.7500         1.261729e+06   \n",
              "\n",
              "    Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "14                   103508.50            2.507990e+06   \n",
              "17                   106630.50            2.951502e+06   \n",
              "18                    83284.50            1.778313e+06   \n",
              "21                   181931.25            3.633105e+06   \n",
              "\n",
              "    Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "14              500273.166667                           49.711463   \n",
              "17              517909.000000                           50.373830   \n",
              "18              528524.833333                           45.078933   \n",
              "21              477325.166667                           77.196490   \n",
              "\n",
              "    Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "14                    81.397537                       26093.833333   \n",
              "17                    81.541047                       26093.833333   \n",
              "18                    76.575130                       26093.833333   \n",
              "21                    84.335558                       17332.500000   \n",
              "\n",
              "    Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "14                                    88.951667                    73.545833   \n",
              "17                                    88.951667                    74.404167   \n",
              "18                                    88.951667                    73.191667   \n",
              "21                                    77.125000                    73.601667   \n",
              "\n",
              "   Cluster          PCA1          PCA2  \n",
              "14       3  2.491246e+14  6.658414e+06  \n",
              "17       3  2.430311e+14  6.779187e+06  \n",
              "18       3  2.614114e+14  6.397872e+06  \n",
              "21       3  1.864886e+14 -5.134572e+06  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9904f752-ae42-48ca-a320-6788d8594971\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Barat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.013646e+14</td>\n",
              "      <td>19838.5500</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>103508.50</td>\n",
              "      <td>2.507990e+06</td>\n",
              "      <td>500273.166667</td>\n",
              "      <td>49.711463</td>\n",
              "      <td>81.397537</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.545833</td>\n",
              "      <td>3</td>\n",
              "      <td>2.491246e+14</td>\n",
              "      <td>6.658414e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Timur</td>\n",
              "      <td>98.974367</td>\n",
              "      <td>2.952711e+14</td>\n",
              "      <td>15557.6800</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>106630.50</td>\n",
              "      <td>2.951502e+06</td>\n",
              "      <td>517909.000000</td>\n",
              "      <td>50.373830</td>\n",
              "      <td>81.541047</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.404167</td>\n",
              "      <td>3</td>\n",
              "      <td>2.430311e+14</td>\n",
              "      <td>6.779187e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Utara</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.136514e+14</td>\n",
              "      <td>12345.7525</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>83284.50</td>\n",
              "      <td>1.778313e+06</td>\n",
              "      <td>528524.833333</td>\n",
              "      <td>45.078933</td>\n",
              "      <td>76.575130</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.191667</td>\n",
              "      <td>3</td>\n",
              "      <td>2.614114e+14</td>\n",
              "      <td>6.397872e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bekasi</td>\n",
              "      <td>99.287000</td>\n",
              "      <td>2.387286e+14</td>\n",
              "      <td>2911.7500</td>\n",
              "      <td>1.261729e+06</td>\n",
              "      <td>181931.25</td>\n",
              "      <td>3.633105e+06</td>\n",
              "      <td>477325.166667</td>\n",
              "      <td>77.196490</td>\n",
              "      <td>84.335558</td>\n",
              "      <td>17332.500000</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.601667</td>\n",
              "      <td>3</td>\n",
              "      <td>1.864886e+14</td>\n",
              "      <td>-5.134572e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9904f752-ae42-48ca-a320-6788d8594971')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9904f752-ae42-48ca-a320-6788d8594971 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9904f752-ae42-48ca-a320-6788d8594971');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6542ca7e-3034-40ff-8e78-33f1ad70e79b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6542ca7e-3034-40ff-8e78-33f1ad70e79b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6542ca7e-3034-40ff-8e78-33f1ad70e79b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2c079210-4aaa-46a6-ae7c-2f87b5f32272",
        "id": "t-m4Ksk7oZEZ"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.956534e+01\n",
              "PDRB ADHK (Rp)                                 2.872539e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.266343e+04\n",
              "Jumlah Motor (unit)                            1.136949e+07\n",
              "Jumlah Pengangguran (Jiwa)                     1.188387e+05\n",
              "Jumlah Penduduk (Jiwa)                         2.717727e+06\n",
              "Garis Kemiskinan (Persen)                      5.060080e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             5.559018e+01\n",
              "Rasio RT memiliki Spd Motor                    8.096232e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.390350e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.599500e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.368583e+01\n",
              "Cluster                                        3.000000e+00\n",
              "PCA1                                           2.350139e+14\n",
              "PCA2                                           3.675226e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5ed51df7-c48c-44f7-e718-c4c51bbeb26c",
        "id": "S9G6tsMSoZEZ"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Barat', 'Kota Jakarta Timur', 'Kota Jakarta Utara',\n",
              "       'Kab. Bekasi'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "O27-e79OoZEZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 5cluster\n"
      ],
      "metadata": {
        "id": "9TF5fV_xoyTd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_excel('data_used_1622_revisi_bismillah.xlsx')\n",
        "#mask = df['kota'] != \"Kab. Kepulauan Seribu\"\n",
        "#df_filtered = df[mask]\n",
        "#df = df_filtered\n",
        "#df.drop(columns='year', inplace=True)\n",
        "df.drop(columns='Unnamed: 0', inplace=True)\n",
        "#df.drop(columns='Kepadatan Penduduk (Jiwa/Km2)', inplace=True)\n",
        "#df.drop(columns='Jumlah Pekerja (Jiwa)', inplace=True)\n",
        "#df.drop(columns='Laju Pertumbuhan PDRB (Persen)', inplace=True)\n",
        "#df.drop(columns='Jumlah Rumah Tangga', inplace=True)\n",
        "#df.drop(columns='Jumlah Penduduk 15th Bekerja (Jiwa)', inplace=True)\n",
        "\n",
        "\n",
        "df\n",
        "\n",
        "X = df.iloc[:,3:]\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "id": "aicfOwrAoyTm",
        "outputId": "8af3ae45-13b9-47d2-ceca-e31409116b45"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \n",
              "0                                      83.231667                    67.060000  \n",
              "1                                      83.231667                    64.515833  \n",
              "2                                      83.231667                    64.494167  \n",
              "3                                      83.231667                    69.773333  \n",
              "4                                      83.231667                    66.565833  \n",
              "..                                           ...                          ...  \n",
              "114                                    75.026667                    73.144167  \n",
              "115                                    75.026667                    73.194167  \n",
              "116                                    75.026667                    71.383333  \n",
              "117                                    75.026667                    70.165833  \n",
              "118                                    75.026667                    74.074167  \n",
              "\n",
              "[119 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-09871ad2-18d0-47bc-9460-e9e1a12308c6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09871ad2-18d0-47bc-9460-e9e1a12308c6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-09871ad2-18d0-47bc-9460-e9e1a12308c6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-09871ad2-18d0-47bc-9460-e9e1a12308c6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ac976c4f-2ee9-45fd-aa37-7777c7916964\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac976c4f-2ee9-45fd-aa37-7777c7916964')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ac976c4f-2ee9-45fd-aa37-7777c7916964 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from pyclustering.cluster import cluster_visualizer\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Specify the number of clusters (K)\n",
        "k = 5\n",
        "\n",
        "# Create a KMedoids instance\n",
        "X_np = X.to_numpy()  # Convert DataFrame to NumPy array\n",
        "kmedoids_instance = kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), k, replace=False))\n",
        "\n",
        "# Run the K-Medoids algorithm\n",
        "kmedoids_instance.process()\n",
        "clusters = kmedoids_instance.get_clusters()\n",
        "medoids = kmedoids_instance.get_medoids()\n",
        "\n",
        "df['Cluster'] = None\n",
        "\n",
        "# Print the cluster labels\n",
        "for i, cluster in enumerate(clusters):\n",
        "    df.loc[cluster, 'Cluster'] = i + 1\n",
        "\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "outputId": "702298bd-d67d-4e68-ef51-6b4377218633",
        "id": "f9NGSAkioyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi              kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "0        Banten        Kab. Lebak                                     94.2995   \n",
              "1        Banten   Kab. Pandeglang                                     92.0354   \n",
              "2        Banten       Kab. Serang                                     98.7730   \n",
              "3        Banten   Kab. Tanggerang                                     99.2701   \n",
              "4        Banten      Kota Cilegon                                    100.0000   \n",
              "..          ...               ...                                         ...   \n",
              "114  Jawa Timur       Kota Malang                                    100.0000   \n",
              "115  Jawa Timur    Kota Mojokerto                                    100.0000   \n",
              "116  Jawa Timur     Kota Pasuruan                                     99.0196   \n",
              "117  Jawa Timur  Kota Probolinggo                                    100.0000   \n",
              "118  Jawa Timur     Kota Surabaya                                     98.7013   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0      1.979186e+13                         376.75         2.454165e+05   \n",
              "1      1.880812e+13                         439.25         2.061342e+05   \n",
              "2      5.166992e+13                         863.25         3.737372e+05   \n",
              "3      9.159683e+13                        3596.25         1.222381e+06   \n",
              "4      7.079368e+13                        2439.25         2.067328e+05   \n",
              "..              ...                            ...                  ...   \n",
              "114    4.957143e+13                        5944.50         4.483433e+04   \n",
              "115    4.694168e+12                        7752.00         2.461833e+04   \n",
              "116    5.611072e+12                        5620.00         3.456467e+04   \n",
              "117    7.842530e+12                        4131.25         2.667400e+04   \n",
              "118    3.842024e+14                        8215.50         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "2                      79598.50            1.562475e+06   \n",
              "3                     182594.25            3.492481e+06   \n",
              "4                      21231.75            4.341780e+05   \n",
              "..                          ...                     ...   \n",
              "114                    37472.50            8.572278e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "118                   122910.00            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "2                305558.833333                           93.539500   \n",
              "3                470526.000000                           84.378749   \n",
              "4                442339.166667                           77.053904   \n",
              "..                         ...                                 ...   \n",
              "114              509449.500000                           64.222282   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                            21699.0   \n",
              "1                      65.052239                            21699.0   \n",
              "2                      79.324879                            21699.0   \n",
              "3                      88.414626                            21699.0   \n",
              "4                      87.642370                            21699.0   \n",
              "..                           ...                                ...   \n",
              "114                    81.436044                            12994.5   \n",
              "115                    86.527718                            12994.5   \n",
              "116                    83.494919                            12994.5   \n",
              "117                    86.171077                            12994.5   \n",
              "118                    85.464276                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "2                                      83.231667                    64.494167   \n",
              "3                                      83.231667                    69.773333   \n",
              "4                                      83.231667                    66.565833   \n",
              "..                                           ...                          ...   \n",
              "114                                    75.026667                    73.144167   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "    Cluster  \n",
              "0         2  \n",
              "1         2  \n",
              "2         5  \n",
              "3         5  \n",
              "4         5  \n",
              "..      ...  \n",
              "114       5  \n",
              "115       2  \n",
              "116       2  \n",
              "117       2  \n",
              "118       3  \n",
              "\n",
              "[119 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-65ca6132-26e2-4171-99c0-ba110f758892\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.2995</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.75</td>\n",
              "      <td>2.454165e+05</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.0354</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.25</td>\n",
              "      <td>2.061342e+05</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Serang</td>\n",
              "      <td>98.7730</td>\n",
              "      <td>5.166992e+13</td>\n",
              "      <td>863.25</td>\n",
              "      <td>3.737372e+05</td>\n",
              "      <td>79598.50</td>\n",
              "      <td>1.562475e+06</td>\n",
              "      <td>305558.833333</td>\n",
              "      <td>93.539500</td>\n",
              "      <td>79.324879</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.494167</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Tanggerang</td>\n",
              "      <td>99.2701</td>\n",
              "      <td>9.159683e+13</td>\n",
              "      <td>3596.25</td>\n",
              "      <td>1.222381e+06</td>\n",
              "      <td>182594.25</td>\n",
              "      <td>3.492481e+06</td>\n",
              "      <td>470526.000000</td>\n",
              "      <td>84.378749</td>\n",
              "      <td>88.414626</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>69.773333</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Cilegon</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.079368e+13</td>\n",
              "      <td>2439.25</td>\n",
              "      <td>2.067328e+05</td>\n",
              "      <td>21231.75</td>\n",
              "      <td>4.341780e+05</td>\n",
              "      <td>442339.166667</td>\n",
              "      <td>77.053904</td>\n",
              "      <td>87.642370</td>\n",
              "      <td>21699.0</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>66.565833</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Malang</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.957143e+13</td>\n",
              "      <td>5944.50</td>\n",
              "      <td>4.483433e+04</td>\n",
              "      <td>37472.50</td>\n",
              "      <td>8.572278e+05</td>\n",
              "      <td>509449.500000</td>\n",
              "      <td>64.222282</td>\n",
              "      <td>81.436044</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.144167</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.00</td>\n",
              "      <td>2.461833e+04</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.0196</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.00</td>\n",
              "      <td>3.456467e+04</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.25</td>\n",
              "      <td>2.667400e+04</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.50</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.00</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>119 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-65ca6132-26e2-4171-99c0-ba110f758892')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-65ca6132-26e2-4171-99c0-ba110f758892 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-65ca6132-26e2-4171-99c0-ba110f758892');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-767fd8ca-8856-44d5-9d9f-29c667ac5e22\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-767fd8ca-8856-44d5-9d9f-29c667ac5e22')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-767fd8ca-8856-44d5-9d9f-29c667ac5e22 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "# Assuming you have already defined k, kmedoids_instance, clusters, medoids, and df as in your code.\n",
        "\n",
        "# Perform PCA to reduce the dimensionality\n",
        "pca = PCA(n_components=2)\n",
        "X_pca = pca.fit_transform(X_np)\n",
        "\n",
        "# Add PCA components to the DataFrame\n",
        "df['PCA1'] = X_pca[:, 0]\n",
        "df['PCA2'] = X_pca[:, 1]\n",
        "\n",
        "# Create a scatter plot with colors indicating cluster assignments\n",
        "plt.figure(figsize=(10, 6))\n",
        "for i, cluster in enumerate(clusters):\n",
        "    plt.scatter(df.loc[cluster, 'PCA1'], df.loc[cluster, 'PCA2'], label=f'Cluster {i + 1}')\n",
        "\n",
        "# Plot medoids as black stars\n",
        "medoid_indices = medoids\n",
        "medoid_coordinates = X_pca[medoid_indices]\n",
        "plt.scatter(medoid_coordinates[:, 0], medoid_coordinates[:, 1], marker='*', s=100, c='black', label='Medoids')\n",
        "\n",
        "plt.title('PCA Visualization of K-Medoids Clusters')\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.legend()\n",
        "plt.grid()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "KTkm5LSi4SYf",
        "outputId": "0bbffcc6-b78c-4bb6-89ee-2a8944edbefd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Cluster'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0499283b-64a3-40a8-c965-c823aca82ac9",
        "id": "E1tVHUjYoyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2    87\n",
              "5    20\n",
              "1     5\n",
              "4     4\n",
              "3     3\n",
              "Name: Cluster, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0 = df.loc[df['Cluster']==0]\n",
        "all1 = df.loc[df['Cluster']==1]\n",
        "all2 = df.loc[df['Cluster']==2]\n"
      ],
      "metadata": {
        "id": "6p_QH_0voyTn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "1adaeae7-ca59-40d3-d3dd-11bcb9ecd7c8",
        "id": "6V91ihedoyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [provinsi, kota, Persentase Jalan Antar Desa Dilalui Roda 4, PDRB ADHK (Rp), Kepadatan Penduduk (Jiwa/Km2), Jumlah Motor (unit), Jumlah Pengangguran (Jiwa), Jumlah Penduduk (Jiwa), Garis Kemiskinan (Persen), Kepemilikan Rumah Sendiri (Persen), Rasio RT memiliki Spd Motor, Upah Rata - Rata per jam (Rp/jam), Rumah Tangga dengan Akses Internet (Persen), Angka Harapan Hidup (Tahun), Cluster, PCA1, PCA2]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d6bd1355-29c7-401f-b527-72eb3d037970\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6bd1355-29c7-401f-b527-72eb3d037970')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d6bd1355-29c7-401f-b527-72eb3d037970 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d6bd1355-29c7-401f-b527-72eb3d037970');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9f44d057-0d44-405f-db90-8364d8d7f9f1",
        "id": "0_Xj0Q97oyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "provinsi                                       NaN\n",
              "kota                                           NaN\n",
              "Persentase Jalan Antar Desa Dilalui Roda 4     NaN\n",
              "PDRB ADHK (Rp)                                 NaN\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  NaN\n",
              "Jumlah Motor (unit)                            NaN\n",
              "Jumlah Pengangguran (Jiwa)                     NaN\n",
              "Jumlah Penduduk (Jiwa)                         NaN\n",
              "Garis Kemiskinan (Persen)                      NaN\n",
              "Kepemilikan Rumah Sendiri (Persen)             NaN\n",
              "Rasio RT memiliki Spd Motor                    NaN\n",
              "Upah Rata - Rata per jam (Rp/jam)              NaN\n",
              "Rumah Tangga dengan Akses Internet (Persen)    NaN\n",
              "Angka Harapan Hidup (Tahun)                    NaN\n",
              "Cluster                                        NaN\n",
              "PCA1                                           NaN\n",
              "PCA2                                           NaN\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0[['provinsi','kota']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "outputId": "b9d8533b-a95a-4663-93c6-4afd915ee4d4",
        "id": "EKa9Kj51oyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [provinsi, kota]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bee73ed0-7f60-4d59-bf0f-ca0784916478\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bee73ed0-7f60-4d59-bf0f-ca0784916478')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bee73ed0-7f60-4d59-bf0f-ca0784916478 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bee73ed0-7f60-4d59-bf0f-ca0784916478');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 114
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all0['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ad40d01b-1e3a-4e78-87b8-c5fb2429eaef",
        "id": "xABgLETDoyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "outputId": "34d633af-8fc7-46ef-fff1-d78b9a448b82",
        "id": "aGQK4r2foyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi           kota  Persentase Jalan Antar Desa Dilalui Roda 4  \\\n",
              "22    Jawa Barat     Kab. Bogor                                   99.693500   \n",
              "28    Jawa Barat  Kab. Karawang                                   99.352767   \n",
              "37    Jawa Barat   Kota Bandung                                   99.779233   \n",
              "78   Jawa Tengah  Kota Semarang                                   99.435033   \n",
              "104   Jawa Timur  Kab. Sidoarjo                                   98.275867   \n",
              "\n",
              "     PDRB ADHK (Rp)  Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "22     1.483495e+14                        2131.25            1404250.0   \n",
              "28     1.559002e+14                        1407.75             755961.0   \n",
              "37     1.850610e+14                       14910.25            1256057.0   \n",
              "78     1.321015e+14                        4741.18             877398.0   \n",
              "104    1.320949e+14                        2680.75             140813.0   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "22                    310916.50            5.839390e+06   \n",
              "28                    121015.50            2.334536e+06   \n",
              "37                    127074.75            2.502052e+06   \n",
              "78                     72148.50            1.732847e+06   \n",
              "104                    92098.00            2.162529e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "22               368321.000000                           81.201374   \n",
              "28               438255.500000                           84.446690   \n",
              "37               460053.000000                           53.059216   \n",
              "78               458919.666667                           68.826660   \n",
              "104              449743.666667                           81.079978   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "22                     73.244944                            17332.5   \n",
              "28                     77.940043                            17332.5   \n",
              "37                     74.964031                            17332.5   \n",
              "78                     87.596349                            11593.0   \n",
              "104                    91.895753                            12994.5   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "22                                     77.125000                    71.097500   \n",
              "28                                     77.125000                    72.056667   \n",
              "37                                     77.125000                    74.213333   \n",
              "78                                     74.826667                    77.448333   \n",
              "104                                    75.026667                    73.934167   \n",
              "\n",
              "    Cluster          PCA1          PCA2  \n",
              "22        1  9.610952e+13 -2.737938e+06  \n",
              "28        1  1.036602e+14 -3.214847e+06  \n",
              "37        1  1.328210e+14 -3.539450e+06  \n",
              "78        1  7.986153e+13 -2.373221e+06  \n",
              "104       1  7.985494e+13 -3.151443e+06  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bed37920-5863-4317-88dd-0132ea3eee82\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bogor</td>\n",
              "      <td>99.693500</td>\n",
              "      <td>1.483495e+14</td>\n",
              "      <td>2131.25</td>\n",
              "      <td>1404250.0</td>\n",
              "      <td>310916.50</td>\n",
              "      <td>5.839390e+06</td>\n",
              "      <td>368321.000000</td>\n",
              "      <td>81.201374</td>\n",
              "      <td>73.244944</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>71.097500</td>\n",
              "      <td>1</td>\n",
              "      <td>9.610952e+13</td>\n",
              "      <td>-2.737938e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Karawang</td>\n",
              "      <td>99.352767</td>\n",
              "      <td>1.559002e+14</td>\n",
              "      <td>1407.75</td>\n",
              "      <td>755961.0</td>\n",
              "      <td>121015.50</td>\n",
              "      <td>2.334536e+06</td>\n",
              "      <td>438255.500000</td>\n",
              "      <td>84.446690</td>\n",
              "      <td>77.940043</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>72.056667</td>\n",
              "      <td>1</td>\n",
              "      <td>1.036602e+14</td>\n",
              "      <td>-3.214847e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kota Bandung</td>\n",
              "      <td>99.779233</td>\n",
              "      <td>1.850610e+14</td>\n",
              "      <td>14910.25</td>\n",
              "      <td>1256057.0</td>\n",
              "      <td>127074.75</td>\n",
              "      <td>2.502052e+06</td>\n",
              "      <td>460053.000000</td>\n",
              "      <td>53.059216</td>\n",
              "      <td>74.964031</td>\n",
              "      <td>17332.5</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>74.213333</td>\n",
              "      <td>1</td>\n",
              "      <td>1.328210e+14</td>\n",
              "      <td>-3.539450e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Jawa Tengah</td>\n",
              "      <td>Kota Semarang</td>\n",
              "      <td>99.435033</td>\n",
              "      <td>1.321015e+14</td>\n",
              "      <td>4741.18</td>\n",
              "      <td>877398.0</td>\n",
              "      <td>72148.50</td>\n",
              "      <td>1.732847e+06</td>\n",
              "      <td>458919.666667</td>\n",
              "      <td>68.826660</td>\n",
              "      <td>87.596349</td>\n",
              "      <td>11593.0</td>\n",
              "      <td>74.826667</td>\n",
              "      <td>77.448333</td>\n",
              "      <td>1</td>\n",
              "      <td>7.986153e+13</td>\n",
              "      <td>-2.373221e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kab. Sidoarjo</td>\n",
              "      <td>98.275867</td>\n",
              "      <td>1.320949e+14</td>\n",
              "      <td>2680.75</td>\n",
              "      <td>140813.0</td>\n",
              "      <td>92098.00</td>\n",
              "      <td>2.162529e+06</td>\n",
              "      <td>449743.666667</td>\n",
              "      <td>81.079978</td>\n",
              "      <td>91.895753</td>\n",
              "      <td>12994.5</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.934167</td>\n",
              "      <td>1</td>\n",
              "      <td>7.985494e+13</td>\n",
              "      <td>-3.151443e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bed37920-5863-4317-88dd-0132ea3eee82')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bed37920-5863-4317-88dd-0132ea3eee82 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bed37920-5863-4317-88dd-0132ea3eee82');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b5bf1e85-cfd6-4af9-b256-b8cc2c9610a0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5bf1e85-cfd6-4af9-b256-b8cc2c9610a0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b5bf1e85-cfd6-4af9-b256-b8cc2c9610a0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9e0dc1d7-1367-4710-e8c7-cf2a877dc8d3",
        "id": "WbZLIy1joyTn"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.930728e+01\n",
              "PDRB ADHK (Rp)                                 1.507014e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  5.174236e+03\n",
              "Jumlah Motor (unit)                            8.868958e+05\n",
              "Jumlah Pengangguran (Jiwa)                     1.446506e+05\n",
              "Jumlah Penduduk (Jiwa)                         2.914271e+06\n",
              "Garis Kemiskinan (Persen)                      4.350586e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             7.372278e+01\n",
              "Rasio RT memiliki Spd Motor                    8.112822e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.531700e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.624567e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.375000e+01\n",
              "Cluster                                        1.000000e+00\n",
              "PCA1                                           9.846144e+13\n",
              "PCA2                                          -3.003380e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all1['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d7230c8a-ff45-4339-a447-19c971ad5c1f",
        "id": "Lcufddn0oyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Bogor', 'Kab. Karawang', 'Kota Bandung', 'Kota Semarang',\n",
              "       'Kab. Sidoarjo'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "outputId": "fe30acfa-a861-4756-ec24-bfd3afc9f3c9",
        "id": "1TZVrORooyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          provinsi               kota  \\\n",
              "0           Banten         Kab. Lebak   \n",
              "1           Banten    Kab. Pandeglang   \n",
              "5           Banten        Kota Serang   \n",
              "8    DI Yogyakarta        Kab. Bantul   \n",
              "9    DI Yogyakarta  Kab. Gunung Kidul   \n",
              "..             ...                ...   \n",
              "111     Jawa Timur        Kota Blitar   \n",
              "113     Jawa Timur        Kota Madiun   \n",
              "115     Jawa Timur     Kota Mojokerto   \n",
              "116     Jawa Timur      Kota Pasuruan   \n",
              "117     Jawa Timur   Kota Probolinggo   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "0                                     94.299500    1.979186e+13   \n",
              "1                                     92.035400    1.880812e+13   \n",
              "5                                    100.000000    2.154588e+13   \n",
              "8                                    100.000000    1.825054e+13   \n",
              "9                                     99.768533    1.303754e+13   \n",
              "..                                          ...             ...   \n",
              "111                                  100.000000    4.573370e+12   \n",
              "113                                  100.000000    1.002101e+13   \n",
              "115                                  100.000000    4.694168e+12   \n",
              "116                                   99.019600    5.611072e+12   \n",
              "117                                  100.000000    7.842530e+12   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "0                         376.7500        245416.500000   \n",
              "1                         439.2500        206134.250000   \n",
              "5                        2519.5000        196289.250000   \n",
              "8                        1974.8675        370664.250000   \n",
              "9                         493.3500        241273.500000   \n",
              "..                             ...                  ...   \n",
              "111                      4313.5000         34113.333333   \n",
              "113                      5201.2500         17280.666667   \n",
              "115                      7752.0000         24618.333333   \n",
              "116                      5620.0000         34564.666667   \n",
              "117                      4131.2500         26674.000000   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "0                      52128.25            1.342062e+06   \n",
              "1                      45244.75            1.242104e+06   \n",
              "5                      27425.75            6.864417e+05   \n",
              "8                      20781.50            1.022138e+06   \n",
              "9                       9371.00            7.476099e+05   \n",
              "..                          ...                     ...   \n",
              "111                     4340.25            1.435798e+05   \n",
              "113                     5829.75            1.829170e+05   \n",
              "115                     3231.00            1.294475e+05   \n",
              "116                     5878.75            2.018220e+05   \n",
              "117                     6578.75            2.362508e+05   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "0                297226.500000                           94.869566   \n",
              "1                323902.833333                           92.465050   \n",
              "5                358571.333333                           85.084066   \n",
              "8                375738.166667                           80.492049   \n",
              "9                296254.833333                           94.868551   \n",
              "..                         ...                                 ...   \n",
              "111              428145.833333                           77.449045   \n",
              "113              453130.166667                           63.273951   \n",
              "115              439367.666667                           72.646463   \n",
              "116              415596.333333                           80.405302   \n",
              "117              484521.166667                           88.914121   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "0                      66.253601                       21699.000000   \n",
              "1                      65.052239                       21699.000000   \n",
              "5                      85.493165                       21699.000000   \n",
              "8                      86.179912                       13508.166667   \n",
              "9                      77.346043                       13508.166667   \n",
              "..                           ...                                ...   \n",
              "111                    85.797419                       12994.500000   \n",
              "113                    85.444512                       12994.500000   \n",
              "115                    86.527718                       12994.500000   \n",
              "116                    83.494919                       12994.500000   \n",
              "117                    86.171077                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "0                                      83.231667                    67.060000   \n",
              "1                                      83.231667                    64.515833   \n",
              "5                                      83.231667                    67.822500   \n",
              "8                                      84.061667                    73.723333   \n",
              "9                                      84.061667                    74.000000   \n",
              "..                                           ...                          ...   \n",
              "111                                    75.026667                    73.608333   \n",
              "113                                    75.026667                    72.712500   \n",
              "115                                    75.026667                    73.194167   \n",
              "116                                    75.026667                    71.383333   \n",
              "117                                    75.026667                    70.165833   \n",
              "\n",
              "    Cluster          PCA1           PCA2  \n",
              "0         2 -3.244814e+13  135811.241125  \n",
              "1         2 -3.343187e+13  134800.512813  \n",
              "5         2 -3.069411e+13  109230.149271  \n",
              "8         2 -3.398946e+13  337776.410621  \n",
              "9         2 -3.920246e+13  381628.379466  \n",
              "..      ...           ...            ...  \n",
              "111       2 -4.766662e+13  474618.659702  \n",
              "113       2 -4.221899e+13  303658.722930  \n",
              "115       2 -4.754582e+13  463451.997622  \n",
              "116       2 -4.662892e+13  440128.408479  \n",
              "117       2 -4.439746e+13  367612.050714  \n",
              "\n",
              "[87 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b2bc7b04-140b-4889-a0f2-b4404d100f3c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Lebak</td>\n",
              "      <td>94.299500</td>\n",
              "      <td>1.979186e+13</td>\n",
              "      <td>376.7500</td>\n",
              "      <td>245416.500000</td>\n",
              "      <td>52128.25</td>\n",
              "      <td>1.342062e+06</td>\n",
              "      <td>297226.500000</td>\n",
              "      <td>94.869566</td>\n",
              "      <td>66.253601</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.060000</td>\n",
              "      <td>2</td>\n",
              "      <td>-3.244814e+13</td>\n",
              "      <td>135811.241125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kab. Pandeglang</td>\n",
              "      <td>92.035400</td>\n",
              "      <td>1.880812e+13</td>\n",
              "      <td>439.2500</td>\n",
              "      <td>206134.250000</td>\n",
              "      <td>45244.75</td>\n",
              "      <td>1.242104e+06</td>\n",
              "      <td>323902.833333</td>\n",
              "      <td>92.465050</td>\n",
              "      <td>65.052239</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>64.515833</td>\n",
              "      <td>2</td>\n",
              "      <td>-3.343187e+13</td>\n",
              "      <td>134800.512813</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Banten</td>\n",
              "      <td>Kota Serang</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>2.154588e+13</td>\n",
              "      <td>2519.5000</td>\n",
              "      <td>196289.250000</td>\n",
              "      <td>27425.75</td>\n",
              "      <td>6.864417e+05</td>\n",
              "      <td>358571.333333</td>\n",
              "      <td>85.084066</td>\n",
              "      <td>85.493165</td>\n",
              "      <td>21699.000000</td>\n",
              "      <td>83.231667</td>\n",
              "      <td>67.822500</td>\n",
              "      <td>2</td>\n",
              "      <td>-3.069411e+13</td>\n",
              "      <td>109230.149271</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Bantul</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>1.825054e+13</td>\n",
              "      <td>1974.8675</td>\n",
              "      <td>370664.250000</td>\n",
              "      <td>20781.50</td>\n",
              "      <td>1.022138e+06</td>\n",
              "      <td>375738.166667</td>\n",
              "      <td>80.492049</td>\n",
              "      <td>86.179912</td>\n",
              "      <td>13508.166667</td>\n",
              "      <td>84.061667</td>\n",
              "      <td>73.723333</td>\n",
              "      <td>2</td>\n",
              "      <td>-3.398946e+13</td>\n",
              "      <td>337776.410621</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>DI Yogyakarta</td>\n",
              "      <td>Kab. Gunung Kidul</td>\n",
              "      <td>99.768533</td>\n",
              "      <td>1.303754e+13</td>\n",
              "      <td>493.3500</td>\n",
              "      <td>241273.500000</td>\n",
              "      <td>9371.00</td>\n",
              "      <td>7.476099e+05</td>\n",
              "      <td>296254.833333</td>\n",
              "      <td>94.868551</td>\n",
              "      <td>77.346043</td>\n",
              "      <td>13508.166667</td>\n",
              "      <td>84.061667</td>\n",
              "      <td>74.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>-3.920246e+13</td>\n",
              "      <td>381628.379466</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Blitar</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.573370e+12</td>\n",
              "      <td>4313.5000</td>\n",
              "      <td>34113.333333</td>\n",
              "      <td>4340.25</td>\n",
              "      <td>1.435798e+05</td>\n",
              "      <td>428145.833333</td>\n",
              "      <td>77.449045</td>\n",
              "      <td>85.797419</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.608333</td>\n",
              "      <td>2</td>\n",
              "      <td>-4.766662e+13</td>\n",
              "      <td>474618.659702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Madiun</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>1.002101e+13</td>\n",
              "      <td>5201.2500</td>\n",
              "      <td>17280.666667</td>\n",
              "      <td>5829.75</td>\n",
              "      <td>1.829170e+05</td>\n",
              "      <td>453130.166667</td>\n",
              "      <td>63.273951</td>\n",
              "      <td>85.444512</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>72.712500</td>\n",
              "      <td>2</td>\n",
              "      <td>-4.221899e+13</td>\n",
              "      <td>303658.722930</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Mojokerto</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>4.694168e+12</td>\n",
              "      <td>7752.0000</td>\n",
              "      <td>24618.333333</td>\n",
              "      <td>3231.00</td>\n",
              "      <td>1.294475e+05</td>\n",
              "      <td>439367.666667</td>\n",
              "      <td>72.646463</td>\n",
              "      <td>86.527718</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>73.194167</td>\n",
              "      <td>2</td>\n",
              "      <td>-4.754582e+13</td>\n",
              "      <td>463451.997622</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Pasuruan</td>\n",
              "      <td>99.019600</td>\n",
              "      <td>5.611072e+12</td>\n",
              "      <td>5620.0000</td>\n",
              "      <td>34564.666667</td>\n",
              "      <td>5878.75</td>\n",
              "      <td>2.018220e+05</td>\n",
              "      <td>415596.333333</td>\n",
              "      <td>80.405302</td>\n",
              "      <td>83.494919</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>71.383333</td>\n",
              "      <td>2</td>\n",
              "      <td>-4.662892e+13</td>\n",
              "      <td>440128.408479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Probolinggo</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>7.842530e+12</td>\n",
              "      <td>4131.2500</td>\n",
              "      <td>26674.000000</td>\n",
              "      <td>6578.75</td>\n",
              "      <td>2.362508e+05</td>\n",
              "      <td>484521.166667</td>\n",
              "      <td>88.914121</td>\n",
              "      <td>86.171077</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>70.165833</td>\n",
              "      <td>2</td>\n",
              "      <td>-4.439746e+13</td>\n",
              "      <td>367612.050714</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>87 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2bc7b04-140b-4889-a0f2-b4404d100f3c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b2bc7b04-140b-4889-a0f2-b4404d100f3c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b2bc7b04-140b-4889-a0f2-b4404d100f3c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e65b73d2-07a1-4ea3-b9ef-99cef2477f3a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e65b73d2-07a1-4ea3-b9ef-99cef2477f3a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e65b73d2-07a1-4ea3-b9ef-99cef2477f3a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b265948c-425d-4125-924a-94e292177f8b",
        "id": "aiJFR8QgoyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.805994e+01\n",
              "PDRB ADHK (Rp)                                 1.953718e+13\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  2.181747e+03\n",
              "Jumlah Motor (unit)                            3.590403e+05\n",
              "Jumlah Pengangguran (Jiwa)                     2.913389e+04\n",
              "Jumlah Penduduk (Jiwa)                         9.565923e+05\n",
              "Garis Kemiskinan (Persen)                      3.690277e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             8.579873e+01\n",
              "Rasio RT memiliki Spd Motor                    7.801325e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              1.390663e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    7.637360e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.262949e+01\n",
              "Cluster                                        2.000000e+00\n",
              "PCA1                                          -3.270281e+13\n",
              "PCA2                                           2.976461e+05\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all2['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7029fb49-2a62-4e01-adb9-30512c9613b5",
        "id": "8znhNL4loyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kab. Lebak', 'Kab. Pandeglang', 'Kota Serang', 'Kab. Bantul',\n",
              "       'Kab. Gunung Kidul', 'Kab. Kulonprogo', 'Kab. Sleman',\n",
              "       'Kota Yogyakarta', 'Kab. Kepulauan Seribu', 'Kab. Bandung Barat',\n",
              "       'Kab. Ciamis', 'Kab. Cianjur', 'Kab. Cirebon', 'Kab. Garut',\n",
              "       'Kab. Kuningan', 'Kab. Majalengka', 'Kab. Pangandaran',\n",
              "       'Kab. Purwakarta', 'Kab. Subang', 'Kab. Sukabumi', 'Kab. Sumedang',\n",
              "       'Kab. Tasikmalaya', 'Kota Banjar', 'Kota Bogor', 'Kota Cimahi',\n",
              "       'Kota Cirebon', 'Kota Sukabumi', 'Kota Tasikmalaya',\n",
              "       'Kab. Banjarnegara', 'Kab. Banyumas', 'Kab. Batang', 'Kab. Blora',\n",
              "       'Kab. Boyolali', 'Kab. Brebes', 'Kab. Demak', 'Kab. Grobogan',\n",
              "       'Kab. Jepara', 'Kab. Karanganyar', 'Kab. Kebumen', 'Kab. Kendal',\n",
              "       'Kab. Klaten', 'Kab. Magelang', 'Kab. Pati', 'Kab. Pekalongan',\n",
              "       'Kab. Pemalang', 'Kab. Purbalingga', 'Kab. Purworejo',\n",
              "       'Kab. Rembang', 'Kab. Semarang', 'Kab. Sragen', 'Kab. Sukoharjo',\n",
              "       'Kab. Tegal', 'Kab. Temanggung', 'Kab. Wonogiri', 'Kab. Wonosobo',\n",
              "       'Kota Magelang', 'Kota Pekalongan', 'Kota Salatiga',\n",
              "       'Kota Surakarta', 'Kota Tegal', 'Kab. Bangkalan', 'Kab. Blitar',\n",
              "       'Kab. Bondowoso', 'Kab. Jombang', 'Kab. Kediri', 'Kab. Lamongan',\n",
              "       'Kab. Lumajang', 'Kab. Madiun', 'Kab. Magetan', 'Kab. Nganjuk',\n",
              "       'Kab. Ngawi', 'Kab. Pacitan', 'Kab. Pamekasan', 'Kab. Ponorogo',\n",
              "       'Kab. Probolinggo', 'Kab. Sampang', 'Kab. Situbondo',\n",
              "       'Kab. Sumenep', 'Kab. Trenggalek', 'Kab. Tuban',\n",
              "       'Kab. Tulungagung', 'Kota Batu', 'Kota Blitar', 'Kota Madiun',\n",
              "       'Kota Mojokerto', 'Kota Pasuruan', 'Kota Probolinggo'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3 = df.loc[df['Cluster']==3]\n",
        "all3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "outputId": "0d03b1a8-2e09-4d9e-9c9c-098660d0e952",
        "id": "a-A9fPTgoyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        provinsi                  kota  \\\n",
              "15   DKI Jakarta    Kota Jakarta Pusat   \n",
              "16   DKI Jakarta  Kota Jakarta Selatan   \n",
              "118   Jawa Timur         Kota Surabaya   \n",
              "\n",
              "     Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "15                                     100.0000    4.274374e+14   \n",
              "16                                     100.0000    3.974829e+14   \n",
              "118                                     98.7013    3.842024e+14   \n",
              "\n",
              "     Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "15                      18785.5575         1.473874e+07   \n",
              "16                      15489.6675         1.473874e+07   \n",
              "118                      8215.5000         2.501777e+05   \n",
              "\n",
              "     Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "15                      38675.0            9.692097e+05   \n",
              "16                      89288.5            2.234179e+06   \n",
              "118                    122910.0            2.878909e+06   \n",
              "\n",
              "     Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "15               599169.666667                           42.309587   \n",
              "16               699988.333333                           46.733298   \n",
              "118              535650.500000                           57.687377   \n",
              "\n",
              "     Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "15                     70.390338                       26093.833333   \n",
              "16                     78.396880                       26093.833333   \n",
              "118                    85.464276                       12994.500000   \n",
              "\n",
              "     Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "15                                     88.951667                    74.049167   \n",
              "16                                     88.951667                    74.119167   \n",
              "118                                    75.026667                    74.074167   \n",
              "\n",
              "    Cluster          PCA1          PCA2  \n",
              "15        3  3.751974e+14  3.347568e+06  \n",
              "16        3  3.452429e+14  4.038955e+06  \n",
              "118       3  3.319624e+14 -1.007023e+07  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ef3901d2-3b4f-4112-8899-32ab90d704d5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Pusat</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>4.274374e+14</td>\n",
              "      <td>18785.5575</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>38675.0</td>\n",
              "      <td>9.692097e+05</td>\n",
              "      <td>599169.666667</td>\n",
              "      <td>42.309587</td>\n",
              "      <td>70.390338</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.049167</td>\n",
              "      <td>3</td>\n",
              "      <td>3.751974e+14</td>\n",
              "      <td>3.347568e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Selatan</td>\n",
              "      <td>100.0000</td>\n",
              "      <td>3.974829e+14</td>\n",
              "      <td>15489.6675</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>89288.5</td>\n",
              "      <td>2.234179e+06</td>\n",
              "      <td>699988.333333</td>\n",
              "      <td>46.733298</td>\n",
              "      <td>78.396880</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.119167</td>\n",
              "      <td>3</td>\n",
              "      <td>3.452429e+14</td>\n",
              "      <td>4.038955e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Jawa Timur</td>\n",
              "      <td>Kota Surabaya</td>\n",
              "      <td>98.7013</td>\n",
              "      <td>3.842024e+14</td>\n",
              "      <td>8215.5000</td>\n",
              "      <td>2.501777e+05</td>\n",
              "      <td>122910.0</td>\n",
              "      <td>2.878909e+06</td>\n",
              "      <td>535650.500000</td>\n",
              "      <td>57.687377</td>\n",
              "      <td>85.464276</td>\n",
              "      <td>12994.500000</td>\n",
              "      <td>75.026667</td>\n",
              "      <td>74.074167</td>\n",
              "      <td>3</td>\n",
              "      <td>3.319624e+14</td>\n",
              "      <td>-1.007023e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef3901d2-3b4f-4112-8899-32ab90d704d5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ef3901d2-3b4f-4112-8899-32ab90d704d5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ef3901d2-3b4f-4112-8899-32ab90d704d5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-16b2cb8c-a702-4f7c-a42c-f94ecbd4b381\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-16b2cb8c-a702-4f7c-a42c-f94ecbd4b381')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-16b2cb8c-a702-4f7c-a42c-f94ecbd4b381 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fba12a70-0840-449a-9298-109c8bc85cf6",
        "id": "6xoajRMXoyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.956710e+01\n",
              "PDRB ADHK (Rp)                                 4.030409e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.416357e+04\n",
              "Jumlah Motor (unit)                            9.909220e+06\n",
              "Jumlah Pengangguran (Jiwa)                     8.362450e+04\n",
              "Jumlah Penduduk (Jiwa)                         2.027432e+06\n",
              "Garis Kemiskinan (Persen)                      6.116028e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             4.891009e+01\n",
              "Rasio RT memiliki Spd Motor                    7.808383e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.172739e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.431000e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.408083e+01\n",
              "Cluster                                        3.000000e+00\n",
              "PCA1                                           3.508009e+14\n",
              "PCA2                                          -8.945697e+05\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all3['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "04d242e2-5dc9-400c-969e-58a4b2dda08a",
        "id": "dalrnWxioyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Pusat', 'Kota Jakarta Selatan', 'Kota Surabaya'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 124
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all4 = df.loc[df['Cluster']==4]\n",
        "all4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 403
        },
        "outputId": "71f481fc-775a-4957-bea7-fa48fff9a474",
        "id": "xw7E2hWEoyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       provinsi                kota  \\\n",
              "14  DKI Jakarta  Kota Jakarta Barat   \n",
              "17  DKI Jakarta  Kota Jakarta Timur   \n",
              "18  DKI Jakarta  Kota Jakarta Utara   \n",
              "21   Jawa Barat         Kab. Bekasi   \n",
              "\n",
              "    Persentase Jalan Antar Desa Dilalui Roda 4  PDRB ADHK (Rp)  \\\n",
              "14                                  100.000000    3.013646e+14   \n",
              "17                                   98.974367    2.952711e+14   \n",
              "18                                  100.000000    3.136514e+14   \n",
              "21                                   99.287000    2.387286e+14   \n",
              "\n",
              "    Kepadatan Penduduk (Jiwa/Km2)  Jumlah Motor (unit)  \\\n",
              "14                     19838.5500         1.473874e+07   \n",
              "17                     15557.6800         1.473874e+07   \n",
              "18                     12345.7525         1.473874e+07   \n",
              "21                      2911.7500         1.261729e+06   \n",
              "\n",
              "    Jumlah Pengangguran (Jiwa)  Jumlah Penduduk (Jiwa)  \\\n",
              "14                   103508.50            2.507990e+06   \n",
              "17                   106630.50            2.951502e+06   \n",
              "18                    83284.50            1.778313e+06   \n",
              "21                   181931.25            3.633105e+06   \n",
              "\n",
              "    Garis Kemiskinan (Persen)  Kepemilikan Rumah Sendiri (Persen)  \\\n",
              "14              500273.166667                           49.711463   \n",
              "17              517909.000000                           50.373830   \n",
              "18              528524.833333                           45.078933   \n",
              "21              477325.166667                           77.196490   \n",
              "\n",
              "    Rasio RT memiliki Spd Motor  Upah Rata - Rata per jam (Rp/jam)  \\\n",
              "14                    81.397537                       26093.833333   \n",
              "17                    81.541047                       26093.833333   \n",
              "18                    76.575130                       26093.833333   \n",
              "21                    84.335558                       17332.500000   \n",
              "\n",
              "    Rumah Tangga dengan Akses Internet (Persen)  Angka Harapan Hidup (Tahun)  \\\n",
              "14                                    88.951667                    73.545833   \n",
              "17                                    88.951667                    74.404167   \n",
              "18                                    88.951667                    73.191667   \n",
              "21                                    77.125000                    73.601667   \n",
              "\n",
              "   Cluster          PCA1          PCA2  \n",
              "14       4  2.491246e+14  6.658414e+06  \n",
              "17       4  2.430311e+14  6.779187e+06  \n",
              "18       4  2.614114e+14  6.397872e+06  \n",
              "21       4  1.864886e+14 -5.134572e+06  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a57e3a7c-dca1-4cf9-9d6c-97fc10f3fa1f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>provinsi</th>\n",
              "      <th>kota</th>\n",
              "      <th>Persentase Jalan Antar Desa Dilalui Roda 4</th>\n",
              "      <th>PDRB ADHK (Rp)</th>\n",
              "      <th>Kepadatan Penduduk (Jiwa/Km2)</th>\n",
              "      <th>Jumlah Motor (unit)</th>\n",
              "      <th>Jumlah Pengangguran (Jiwa)</th>\n",
              "      <th>Jumlah Penduduk (Jiwa)</th>\n",
              "      <th>Garis Kemiskinan (Persen)</th>\n",
              "      <th>Kepemilikan Rumah Sendiri (Persen)</th>\n",
              "      <th>Rasio RT memiliki Spd Motor</th>\n",
              "      <th>Upah Rata - Rata per jam (Rp/jam)</th>\n",
              "      <th>Rumah Tangga dengan Akses Internet (Persen)</th>\n",
              "      <th>Angka Harapan Hidup (Tahun)</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>PCA1</th>\n",
              "      <th>PCA2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Barat</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.013646e+14</td>\n",
              "      <td>19838.5500</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>103508.50</td>\n",
              "      <td>2.507990e+06</td>\n",
              "      <td>500273.166667</td>\n",
              "      <td>49.711463</td>\n",
              "      <td>81.397537</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.545833</td>\n",
              "      <td>4</td>\n",
              "      <td>2.491246e+14</td>\n",
              "      <td>6.658414e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Timur</td>\n",
              "      <td>98.974367</td>\n",
              "      <td>2.952711e+14</td>\n",
              "      <td>15557.6800</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>106630.50</td>\n",
              "      <td>2.951502e+06</td>\n",
              "      <td>517909.000000</td>\n",
              "      <td>50.373830</td>\n",
              "      <td>81.541047</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>74.404167</td>\n",
              "      <td>4</td>\n",
              "      <td>2.430311e+14</td>\n",
              "      <td>6.779187e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>DKI Jakarta</td>\n",
              "      <td>Kota Jakarta Utara</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.136514e+14</td>\n",
              "      <td>12345.7525</td>\n",
              "      <td>1.473874e+07</td>\n",
              "      <td>83284.50</td>\n",
              "      <td>1.778313e+06</td>\n",
              "      <td>528524.833333</td>\n",
              "      <td>45.078933</td>\n",
              "      <td>76.575130</td>\n",
              "      <td>26093.833333</td>\n",
              "      <td>88.951667</td>\n",
              "      <td>73.191667</td>\n",
              "      <td>4</td>\n",
              "      <td>2.614114e+14</td>\n",
              "      <td>6.397872e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Jawa Barat</td>\n",
              "      <td>Kab. Bekasi</td>\n",
              "      <td>99.287000</td>\n",
              "      <td>2.387286e+14</td>\n",
              "      <td>2911.7500</td>\n",
              "      <td>1.261729e+06</td>\n",
              "      <td>181931.25</td>\n",
              "      <td>3.633105e+06</td>\n",
              "      <td>477325.166667</td>\n",
              "      <td>77.196490</td>\n",
              "      <td>84.335558</td>\n",
              "      <td>17332.500000</td>\n",
              "      <td>77.125000</td>\n",
              "      <td>73.601667</td>\n",
              "      <td>4</td>\n",
              "      <td>1.864886e+14</td>\n",
              "      <td>-5.134572e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a57e3a7c-dca1-4cf9-9d6c-97fc10f3fa1f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a57e3a7c-dca1-4cf9-9d6c-97fc10f3fa1f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a57e3a7c-dca1-4cf9-9d6c-97fc10f3fa1f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-68187324-0b3b-4470-ae7d-84691307e347\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68187324-0b3b-4470-ae7d-84691307e347')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-68187324-0b3b-4470-ae7d-84691307e347 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all4.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ca6f4e85-524d-4c10-e8e5-e03301b3df2c",
        "id": "TycvLQhWoyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Persentase Jalan Antar Desa Dilalui Roda 4     9.956534e+01\n",
              "PDRB ADHK (Rp)                                 2.872539e+14\n",
              "Kepadatan Penduduk (Jiwa/Km2)                  1.266343e+04\n",
              "Jumlah Motor (unit)                            1.136949e+07\n",
              "Jumlah Pengangguran (Jiwa)                     1.188387e+05\n",
              "Jumlah Penduduk (Jiwa)                         2.717727e+06\n",
              "Garis Kemiskinan (Persen)                      5.060080e+05\n",
              "Kepemilikan Rumah Sendiri (Persen)             5.559018e+01\n",
              "Rasio RT memiliki Spd Motor                    8.096232e+01\n",
              "Upah Rata - Rata per jam (Rp/jam)              2.390350e+04\n",
              "Rumah Tangga dengan Akses Internet (Persen)    8.599500e+01\n",
              "Angka Harapan Hidup (Tahun)                    7.368583e+01\n",
              "Cluster                                        4.000000e+00\n",
              "PCA1                                           2.350139e+14\n",
              "PCA2                                           3.675226e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 126
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "all4['kota'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "adf9c352-6616-4eac-f818-75f9eea9fe68",
        "id": "DDSBvgLgoyTo"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Kota Jakarta Barat', 'Kota Jakarta Timur', 'Kota Jakarta Utara',\n",
              "       'Kab. Bekasi'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 127
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Evaluation"
      ],
      "metadata": {
        "id": "gLudMw3RoCJJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dunn Index"
      ],
      "metadata": {
        "id": "AwPtw8eZ0cLP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_excel('data_used_1622_revisi_bismillah.xlsx')\n",
        "#mask = df['kota'] != \"Kab. Kepulauan Seribu\"\n",
        "#df_filtered = df[mask]\n",
        "#df = df_filtered\n",
        "#df.drop(columns='year', inplace=True)\n",
        "df.drop(columns='Unnamed: 0', inplace=True)\n",
        "#df.drop(columns='Kepadatan Penduduk (Jiwa/Km2)', inplace=True)\n",
        "#df.drop(columns='Jumlah Pekerja (Jiwa)', inplace=True)\n",
        "#df.drop(columns='Laju Pertumbuhan PDRB (Persen)', inplace=True)\n",
        "#df.drop(columns='Jumlah Rumah Tangga', inplace=True)\n",
        "#df.drop(columns='Jumlah Penduduk 15th Bekerja (Jiwa)', inplace=True)\n",
        "\n",
        "\n",
        "df\n",
        "X = df.iloc[:,3:]\n",
        "X\n",
        "random_state = 99 #jangan lupa random state"
      ],
      "metadata": {
        "id": "Lc95dUVNq6QU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OSxJqSIC9M9E",
        "outputId": "b25edc7d-a5cd-4587-a400-625d4841440f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 119 entries, 0 to 118\n",
            "Data columns (total 11 columns):\n",
            " #   Column                                       Non-Null Count  Dtype  \n",
            "---  ------                                       --------------  -----  \n",
            " 0   PDRB ADHK (Rp)                               119 non-null    float64\n",
            " 1   Kepadatan Penduduk (Jiwa/Km2)                119 non-null    float64\n",
            " 2   Jumlah Motor (unit)                          119 non-null    float64\n",
            " 3   Jumlah Pengangguran (Jiwa)                   119 non-null    float64\n",
            " 4   Jumlah Penduduk (Jiwa)                       119 non-null    float64\n",
            " 5   Garis Kemiskinan (Persen)                    119 non-null    float64\n",
            " 6   Kepemilikan Rumah Sendiri (Persen)           119 non-null    float64\n",
            " 7   Rasio RT memiliki Spd Motor                  119 non-null    float64\n",
            " 8   Upah Rata - Rata per jam (Rp/jam)            119 non-null    float64\n",
            " 9   Rumah Tangga dengan Akses Internet (Persen)  119 non-null    float64\n",
            " 10  Angka Harapan Hidup (Tahun)                  119 non-null    float64\n",
            "dtypes: float64(11)\n",
            "memory usage: 10.4 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn import cluster\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from sklearn.metrics import pairwise_distances\n",
        "from scipy.spatial import distance\n",
        "from itertools import combinations\n",
        "\n",
        "X_np = X.to_numpy()  # Convert DataFrame to NumPy array\n",
        "# Define a function to calculate the Dunn Index\n",
        "def dunn_index(clusters, distance_matrix):\n",
        "    max_intracluster_distances = []\n",
        "    min_intercluster_distances = []\n",
        "\n",
        "    # Calculate maximum intra-cluster distances\n",
        "    for cluster in clusters:\n",
        "        distances = distance_matrix[np.ix_(cluster, cluster)]\n",
        "        max_intracluster_distances.append(np.max(distances))\n",
        "\n",
        "    # Calculate minimum inter-cluster distances\n",
        "    cluster_combinations = list(combinations(clusters, 2))\n",
        "    for combo in cluster_combinations:\n",
        "        distances = distance_matrix[np.ix_(combo[0], combo[1])]\n",
        "        min_intercluster_distances.append(np.min(distances))\n",
        "\n",
        "    # Calculate Dunn Index\n",
        "    dunn_index = min(min_intercluster_distances) / max(max_intracluster_distances)\n",
        "    return dunn_index\n",
        "\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Means ++ 3\": cluster.KMeans(n_clusters=3, init='k-means++',random_state = random_state),\n",
        "    \"K-Means ++ 4\": cluster.KMeans(n_clusters=4, init='k-means++',random_state = random_state),\n",
        "    \"K-Means ++ 5\": cluster.KMeans(n_clusters=5, init='k-means++',random_state = random_state),\n",
        "\n",
        "}\n",
        "\n",
        "# Calculate Dunn Index for each clustering algorithm\n",
        "dunn_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.fit(X)\n",
        "    labels = algorithm.labels_\n",
        "    clusters = [np.where(labels == i)[0] for i in range(max(labels) + 1)]\n",
        "    distance_matrix = pairwise_distances(X)\n",
        "    dunn = dunn_index(clusters, distance_matrix)\n",
        "    dunn_scores[name] = dunn\n",
        "\n",
        "# Print Dunn Index scores for comparison\n",
        "for name, dunn in dunn_scores.items():\n",
        "    print(f\"{name}: Dunn Index = {dunn:.4f}\")\n"
      ],
      "metadata": {
        "id": "Ps4sui-EoyTo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f4cc8b6-5e24-4f77-e4cb-423d5d161194"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Means ++ 3: Dunn Index = 0.0323\n",
            "K-Means ++ 4: Dunn Index = 0.0124\n",
            "K-Means ++ 5: Dunn Index = 0.0220\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn import cluster\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from sklearn.metrics import pairwise_distances\n",
        "from scipy.spatial import distance\n",
        "from itertools import combinations\n",
        "\n",
        "X_np = X.to_numpy()  # Convert DataFrame to NumPy array\n",
        "\n",
        "# Define a function to calculate the Dunn Index\n",
        "def dunn_index(clusters, distance_matrix):\n",
        "    max_intracluster_distances = []\n",
        "    min_intercluster_distances = []\n",
        "\n",
        "    # Calculate maximum intra-cluster distances\n",
        "    for cluster in clusters:\n",
        "        distances = distance_matrix[np.ix_(cluster, cluster)]\n",
        "        max_intracluster_distances.append(np.max(distances))\n",
        "\n",
        "    # Calculate minimum inter-cluster distances\n",
        "    cluster_combinations = list(combinations(clusters, 2))\n",
        "    for combo in cluster_combinations:\n",
        "        distances = distance_matrix[np.ix_(combo[0], combo[1])]\n",
        "        min_intercluster_distances.append(np.min(distances))\n",
        "\n",
        "    # Calculate Dunn Index\n",
        "    dunn_index = min(min_intercluster_distances) / max(max_intracluster_distances)\n",
        "    return dunn_index\n",
        "\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Medoids 3\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 3, replace=False)),\n",
        "    \"K-Medoids 4\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 4, replace=False)),\n",
        "    \"K-Medoids 5\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 5, replace=False))\n",
        "}\n",
        "\n",
        "# Calculate Dunn Index for each clustering algorithm\n",
        "dunn_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.process()\n",
        "    labels = algorithm.get_clusters()\n",
        "    distance_matrix = pairwise_distances(X)\n",
        "    dunn = dunn_index(labels, distance_matrix)\n",
        "    dunn_scores[name] = dunn\n",
        "\n",
        "# Print Dunn Index scores for comparison\n",
        "for name, dunn in dunn_scores.items():\n",
        "    print(f\"{name}: Dunn Index = {dunn:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GWpouXb_z26j",
        "outputId": "b985d494-d108-4bc1-b480-b9b9684d7859"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Medoids 3: Dunn Index = 0.0323\n",
            "K-Medoids 4: Dunn Index = 0.0507\n",
            "K-Medoids 5: Dunn Index = 0.0230\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Silhouette Score"
      ],
      "metadata": {
        "id": "jhRr0W_O0ekz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn import cluster\n",
        "from sklearn.metrics import silhouette_score\n",
        "\n",
        "# Assuming you have loaded or generated your data as X\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Means ++ 3\": cluster.KMeans(n_clusters=3, init='k-means++', random_state=random_state),\n",
        "    \"K-Means ++ 4\": cluster.KMeans(n_clusters=4, init='k-means++', random_state=random_state),\n",
        "    \"K-Means ++ 5\": cluster.KMeans(n_clusters=5, init='k-means++', random_state=random_state)\n",
        "}\n",
        "\n",
        "# Calculate Silhouette Score for each clustering algorithm\n",
        "silhouette_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.fit(X)  # Fit the algorithm to your data\n",
        "    labels = algorithm.labels_\n",
        "    silhouette = silhouette_score(X, labels)\n",
        "    silhouette_scores[name] = silhouette\n",
        "\n",
        "# Print Silhouette Scores for comparison\n",
        "for name, silhouette in silhouette_scores.items():\n",
        "    print(f\"{name}: Silhouette Score = {silhouette:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JHlGU3EM0jvc",
        "outputId": "9c4fce8e-56c4-41de-d761-5ffc45f31ef8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Means ++ 3: Silhouette Score = 0.7405\n",
            "K-Means ++ 4: Silhouette Score = 0.7020\n",
            "K-Means ++ 5: Silhouette Score = 0.7090\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn import cluster\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from sklearn.metrics import silhouette_score\n",
        "from itertools import combinations\n",
        "\n",
        "X_np = X.to_numpy()  # Convert DataFrame to NumPy array\n",
        "\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Medoids 3\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 3, replace=False)),\n",
        "    \"K-Medoids 4\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 4, replace=False)),\n",
        "    \"K-Medoids 5\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 5, replace=False))\n",
        "}\n",
        "\n",
        "# Calculate Silhouette Score for each clustering algorithm\n",
        "silhouette_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.process()\n",
        "    labels = algorithm.get_clusters()\n",
        "    labels_flat = [i for i, cluster in enumerate(labels) for _ in cluster]  # Flatten labels\n",
        "    silhouette = silhouette_score(X_np, labels_flat)\n",
        "    silhouette_scores[name] = silhouette\n",
        "\n",
        "# Print Silhouette Scores for comparison\n",
        "for name, silhouette in silhouette_scores.items():\n",
        "    print(f\"{name}: Silhouette Score = {silhouette:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5KRmYEDIz3ii",
        "outputId": "e069a6bf-e71b-4357-979f-d1aedde28762"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Medoids 3: Silhouette Score = -0.3233\n",
            "K-Medoids 4: Silhouette Score = 0.3876\n",
            "K-Medoids 5: Silhouette Score = -0.2370\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Davies Bouldin"
      ],
      "metadata": {
        "id": "bDLS18erP5lG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn import cluster\n",
        "from sklearn.metrics import davies_bouldin_score\n",
        "\n",
        "# Assuming you have loaded or generated your data as X\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Means ++ 3\": cluster.KMeans(n_clusters=3, init='k-means++', random_state=random_state),\n",
        "    \"K-Means ++ 4\": cluster.KMeans(n_clusters=4, init='k-means++', random_state=random_state),\n",
        "    \"K-Means ++ 5\": cluster.KMeans(n_clusters=5, init='k-means++', random_state=random_state)\n",
        "}\n",
        "\n",
        "# Calculate Davies-Bouldin Index for each clustering algorithm\n",
        "dbi_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.fit(X)  # Fit the algorithm to your data\n",
        "    labels = algorithm.labels_\n",
        "    dbi = davies_bouldin_score(X, labels)\n",
        "    dbi_scores[name] = dbi\n",
        "\n",
        "# Print Davies-Bouldin Index scores for comparison\n",
        "for name, dbi in dbi_scores.items():\n",
        "    print(f\"{name}: Davies-Bouldin Index = {dbi:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9bRIw_g_0hL1",
        "outputId": "816f476a-704a-45f2-ae86-95f3ce0a3832"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Means ++ 3: Davies-Bouldin Index = 0.4443\n",
            "K-Means ++ 4: Davies-Bouldin Index = 0.4681\n",
            "K-Means ++ 5: Davies-Bouldin Index = 0.4072\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from sklearn.metrics import davies_bouldin_score\n",
        "\n",
        "# Assuming you have loaded or generated your data as X\n",
        "X_np = X.to_numpy()\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Medoids 3\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 3, replace=False)),\n",
        "    \"K-Medoids 4\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 4, replace=False)),\n",
        "    \"K-Medoids 5\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 5, replace=False))\n",
        "}\n",
        "\n",
        "# Calculate Davies-Bouldin Index for each clustering algorithm\n",
        "dbi_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.process()\n",
        "    clusters = algorithm.get_clusters()\n",
        "\n",
        "    # Convert clusters to a format compatible with the metric\n",
        "    cluster_labels = np.zeros(len(X))\n",
        "    for i, cluster in enumerate(clusters):\n",
        "        cluster_labels[cluster] = i\n",
        "\n",
        "    dbi = davies_bouldin_score(X, cluster_labels)\n",
        "    dbi_scores[name] = dbi\n",
        "\n",
        "# Print Davies-Bouldin Index scores for comparison\n",
        "for name, dbi in dbi_scores.items():\n",
        "    print(f\"{name}: Davies-Bouldin Index = {dbi:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IC_7coIkPyFs",
        "outputId": "79650423-4e67-4ee7-d71e-8134aba41dd6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Medoids 3: Davies-Bouldin Index = 0.4443\n",
            "K-Medoids 4: Davies-Bouldin Index = 0.4686\n",
            "K-Medoids 5: Davies-Bouldin Index = 0.4094\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Calinski-Harabasz index\n"
      ],
      "metadata": {
        "id": "nkMdtLpgWR8A"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn import cluster\n",
        "from sklearn import metrics\n",
        "\n",
        "# Assuming you have loaded or generated your data as X\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Means ++ 3\": cluster.KMeans(n_clusters=3, init='k-means++', random_state=random_state),\n",
        "    \"K-Means ++ 4\": cluster.KMeans(n_clusters=4, init='k-means++', random_state=random_state),\n",
        "    \"K-Means ++ 5\": cluster.KMeans(n_clusters=5, init='k-means++', random_state=random_state)\n",
        "}\n",
        "\n",
        "# Calculate Calinski-Harabasz Index for each clustering algorithm\n",
        "ch_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.fit(X)  # Fit the algorithm to your data\n",
        "    labels = algorithm.labels_\n",
        "    ch = metrics.calinski_harabasz_score(X, labels)\n",
        "    ch_scores[name] = ch\n",
        "\n",
        "# Print Calinski-Harabasz Index scores for comparison\n",
        "for name, ch in ch_scores.items():\n",
        "    print(f\"{name}: Calinski-Harabasz Index = {ch:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cNkMIPhU-M87",
        "outputId": "4431b55e-0566-4ee1-cc50-bef2aece38ea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Means ++ 3: Calinski-Harabasz Index = 629.2491\n",
            "K-Means ++ 4: Calinski-Harabasz Index = 714.4836\n",
            "K-Means ++ 5: Calinski-Harabasz Index = 1029.9809\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from pyclustering.cluster.kmedoids import kmedoids\n",
        "from sklearn.metrics import pairwise_distances\n",
        "from itertools import combinations\n",
        "from sklearn.metrics import calinski_harabasz_score\n",
        "\n",
        "X_np = X.to_numpy()  # Convert DataFrame to NumPy array\n",
        "\n",
        "# Create instances of clustering algorithms\n",
        "clustering_algorithms = {\n",
        "    \"K-Medoids 3\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 3, replace=False)),\n",
        "    \"K-Medoids 4\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 4, replace=False)),\n",
        "    \"K-Medoids 5\": kmedoids(X_np, initial_index_medoids=np.random.choice(len(X), 5, replace=False))\n",
        "}\n",
        "\n",
        "# Calculate Calinski-Harabasz Index for each clustering algorithm\n",
        "calinski_harabasz_scores = {}\n",
        "for name, algorithm in clustering_algorithms.items():\n",
        "    algorithm.process()\n",
        "    clusters = algorithm.get_clusters()\n",
        "\n",
        "    # Convert clusters to a format compatible with the metric\n",
        "    cluster_labels = np.zeros(len(X))\n",
        "    for i, cluster in enumerate(clusters):\n",
        "        cluster_labels[cluster] = i\n",
        "\n",
        "    ch_score = calinski_harabasz_score(X_np, cluster_labels)\n",
        "    calinski_harabasz_scores[name] = ch_score\n",
        "\n",
        "# Print Calinski-Harabasz Index scores for comparison\n",
        "for name, ch_score in calinski_harabasz_scores.items():\n",
        "    print(f\"{name}: Calinski-Harabasz Index = {ch_score:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bQkC_Bbd61mq",
        "outputId": "a5d8e008-c852-4c21-8e30-75a22ade0051"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "K-Medoids 3: Calinski-Harabasz Index = 629.2491\n",
            "K-Medoids 4: Calinski-Harabasz Index = 670.2716\n",
            "K-Medoids 5: Calinski-Harabasz Index = 1027.3323\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ypsvOCojeaHn"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}